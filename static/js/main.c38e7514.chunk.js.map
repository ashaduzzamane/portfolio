{"version":3,"sources":["dashboard/Projection.js","dashboard/SideStats.js","dashboard/Cashflow.js","dashboard/Investment.js","dashboard/DashboardContent.js","dashboard/Dashboard.js","stocks/StockQuery.js","stocks/Stocks.js","real-estate/AddPropertyPopup.js","real-estate/RealEstateContent.js","real-estate/RealEstate.js","financial-institutions/BankStatement.js","financial-institutions/FinancialInstitution.js","mortgage-calculator/MortgageCalculator.js","cashflow-calculator/Investment.js","cashflow-calculator/Revenue.js","cashflow-calculator/Expenses.js","cashflow-calculator/Analysis.js","cashflow-calculator/CashflowCalculator.js","LandingPage.js","listItems.js","App.js","serviceWorker.js","reducers/reducer-cashflowCalculator.js","reducers/reducer-realEstate.js","reducers/reducer-financialInstitution.js","reducers/index.js","index.js"],"names":["Projection","props","state","values","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","this","getData","currentYear","Date","getFullYear","i","push","totalPrinciple","currentNetWorth","netWorth","cashflow","totalRevenue","totalExpenses","j","Paper","className","id","options","title","display","text","fontSize","scales","yAxes","ticks","beginAtZero","legend","Component","SideStats","totalAssets","totalLiabilities","console","log","setState","cardStyle","color","marginBottom","Card","style","CardContent","Grid","container","justify","item","Typography","gutterBottom","variant","Cashflow","tempData","chartData","xAxes","Investment","investment","Object","keys","position","DashboardContent","properties","financialAssets","financialLiabilities","axios","get","then","response","forEach","property","propertyPrice","propertyDownPayment","propertyPrinciple","propertyClosingCosts","propertyRehabCosts","propertyRent","propertyMortgage","propertyInsurance","propertyTaxes","propertyMiscExpenses","catch","error","RealEstateData","propertiesList","price","downPayment","rent","mortgage","insurance","taxes","miscExpenses","financial","accountType","accountValue","includes","accountDescription","FinancialInstitutionData","rowsAssets","rowsLiabilities","Value","Description","connect","makeStyles","theme","content","flexGrow","height","overflow","appBarSpacer","mixins","toolbar","paddingTop","spacing","paddingBottom","paper","padding","flexDirection","fixedHeight","fixedHeightTop","fixedHeightBottom","AddPropertyPopup","handleSave","event","address","propertyType","closingCosts","rehabCosts","principle","actionType","popupType","type","parseInt","cashOnCash","internalRate","closePopup","toFixed","showErrorAllFields","handleCancel","handlePropertyChange","target","value","propertiesData","editID","buttonStyle","width","rightFormStyle","marginLeft","selectionStyle","alignItems","margin","typographyStyleLeft","typographyStyleRight","justifyContent","FormControl","Input","onChange","NativeSelect","aria-label","isNaN","startAdornment","InputAdornment","marginTop","Button","onClick","severity","RealEstateContent","togglePopup","showPopup","toggleEdit","e","handleClose","argActionType","argType","argAddress","argPrice","argDownPayment","argClosingCosts","argRehabCosts","argPrinciple","argRent","argMortgage","argTaxes","argInsurance","argMiscExpenses","argInvestment","argCashflow","argCashOnCash","argInternalRate","index","propertyCount","sqlIndex","onUpdateDashboardRealEstateInvestment","post","length","putURL","put","handleDelete","itemID","deleteURL","toString","delete","splice","newPropertyCount","propertyAddress","propertyCashflow","propertyCashOnCash","propertyInternalRate","rootStyle","avatarStyle","mediaStyle","buttonSpace","buttonStyleEdit","buttonStyleDelete","flexWrap","map","CardHeader","avatar","Avatar","subheader","CardMedia","image","component","dispatch","argPropertiesData","BankStatement","showEdit","handleAssetCancel","tempRowsAssets","tempAssetInstitution","tempAssetDescription","tempAssetValue","onUpdateRowsAssets","handleAssetSave","done","asset","tempID","handleLiabilityCancel","tempRowsLiabilities","tempLiabilityInstitution","tempLiabilityDescription","tempLiabilityValue","onUpdateRowsLiabilities","handleLiabilitySave","liability","handleAssetEdit","Institution","handleAssetDelete","handleLiabilityEdit","handleLiabilityDelete","handleAddAsset","handleAddLiability","page","rowsPerPage","columns","minWidth","align","format","accountInstitution","marginTypo","EditBtnStyle","borderRadius","DeleteBtnStyle","BtnContainer","AddBtnStyle","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","key","TableBody","row","hover","role","tabIndex","code","rowSpan","TextField","colSpan","argRowsAssets","argRowsLiabilities","paperPosition","handleChangeDownPayment","downPaymentAmount","totalInvestment","closingCostsAmount","rehabCostsAmount","onUpdateInvestment","handleChangeClosingCosts","handleChangeRehabCosts","noWrap","fullWidth","InputLabel","htmlFor","Revenue","argTotalInvestment","handleChangeRent","rentAmount","principleAmount","onUpdateRevenue","handleChangePrinciple","Expenses","argTotalRevenueCashOnCash","argTotalRevenueInternalRate","totalRevenueCashOnCash","totalRevenueInternalRate","handleChangeMortgage","mortgageAmount","taxesAmount","insuranceAmount","utilitiesAmount","vacancyAmount","repairsAmount","capExpendituresAmount","onUpdateExpenses","handleChangeTaxes","handleChangeInsurance","handleChangeUtilities","handleChangeVacancy","handleChangeRepairs","handleChangeCapExpenditures","argTotalExpenses","Analysis","handleClick","CashflowCalculatorData","cashOnCashReturn","internalRateOfReturn","iconStyle","root","useStyles","ListItem","ListItemIcon","ListItemText","ListSubheader","paddingRight","toolbarIcon","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","LandingPage","classes","React","useState","clsx","App","basename","process","exact","path","render","refreshRoute","Boolean","window","location","hostname","match","initialState","reducer","action","newState","allReducers","combineReducers","CashflowCalculator","RealEstate","FinancialInstitution","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2hBAyGeA,G,yDAlGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,OAAQ,CACJC,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrEC,SAAU,CACN,CACIC,MAAO,YACPC,MAAM,EACNC,YAAa,EACbC,gBAAiB,UACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,QACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM,CAAC,IAAO,KAAO,KAAO,KAAO,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,UAzBpF,E,iEAiCfC,KAAKC,Y,gCAOL,IAHA,IAAIvB,EAASsB,KAAKvB,MAAMC,OACpBwB,GAAe,IAAIC,MAAQC,cAC3BzB,EAAS,GACJ0B,EAAE,EAAGA,EAAE,GAAIA,IAChB1B,EAAO2B,KAAKJ,GACZA,IAMJ,IAJA,IAAIK,EAAiBP,KAAKxB,MAAM+B,eAC5BC,EAAkBR,KAAKxB,MAAMiC,SAC7BC,EAAWV,KAAKxB,MAAMmC,aAAeX,KAAKxB,MAAMoC,cAChDb,EAAO,GACFc,EAAE,EAAGA,EAAE,GAAIA,IAChBd,EAAKO,KAAKE,GACVA,EAAkBA,EAAkBE,EAAWH,EAInD,OAFA7B,EAAOC,OAASA,EAChBD,EAAOE,SAAS,GAAGmB,KAAOA,EACnBrB,I,+BAWP,OACI,kBAACoC,EAAA,EAAD,CAEIC,UAAU,kBAEV,6BACI,kBAAC,IAAD,CACIhB,KAAMC,KAAKvB,MAAMC,OACjBsC,GAAG,SACHC,QAAS,CACLC,MAAM,CACFC,SAAQ,EACRC,KAAK,uBACLC,SAAS,IAEbC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,MAIzBC,OAAO,CACHP,SAAS,Y,GAzFhBQ,c,kBCgHVC,E,kDAjHX,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgC,SAAU,SACVoB,YAAa,UACbC,iBAAkB,WALP,E,iEAUfC,QAAQC,IAAIhC,KAAKxB,MAAMiC,SAAUT,KAAKxB,MAAMqD,YAAa7B,KAAKxB,MAAMsD,kBACpE9B,KAAKiC,SAAS,CAAExB,SAAWT,KAAKxB,MAAMiC,WACtCT,KAAKiC,SAAS,CAAEJ,YAAc7B,KAAKxB,MAAMqD,cACzC7B,KAAKiC,SAAS,CAAEH,iBAAmB9B,KAAKxB,MAAMsD,qB,2CAI3C9B,KAAKvB,MAAMgC,WAAaT,KAAKxB,MAAMiC,UAAYT,KAAKvB,MAAMoD,cAAgB7B,KAAKxB,MAAMqD,aAAe7B,KAAKvB,MAAMqD,mBAAqB9B,KAAKxB,MAAMsD,mBAC9IC,QAAQC,IAAIhC,KAAKxB,MAAMiC,SAAUT,KAAKxB,MAAMqD,YAAa7B,KAAKxB,MAAMsD,kBACpE9B,KAAKiC,SAAS,CAAExB,SAAWT,KAAKxB,MAAMiC,WACtCT,KAAKiC,SAAS,CAAEJ,YAAc7B,KAAKxB,MAAMqD,cACzC7B,KAAKiC,SAAS,CAAEH,iBAAmB9B,KAAKxB,MAAMsD,sB,+BAKlD,IAAMI,EAAY,CACdlD,gBAAiB,UACjBmD,MAAQ,UACRC,aAAc,IAQlB,OACI,yBAAKrB,UAAU,kBACX,kBAACsB,EAAA,EAAD,CAAMC,MARQ,CAClBtD,gBAAiB,UACjBmD,MAAQ,QACRC,aAAc,IAKkBpB,GAAG,sBAC3B,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CACA7B,UAAU,gBACVoB,MAAM,UACNU,cAAY,EACZC,QAAQ,SAJR,aAQA,kBAACF,EAAA,EAAD,CACAT,MAAM,UACNW,QAAQ,MAFR,KAIO9C,KAAKvB,MAAMgC,cAMlC,kBAAC4B,EAAA,EAAD,CAAMC,MAAOJ,EAAWlB,GAAG,sBACvB,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CACA7B,UAAU,gBACVoB,MAAM,UACNU,cAAY,EACZC,QAAQ,SAJR,gBAQA,kBAACF,EAAA,EAAD,CACAT,MAAM,UACNW,QAAQ,MAFR,KAIO9C,KAAKvB,MAAMoD,iBAMlC,kBAACQ,EAAA,EAAD,CAAMC,MAAOJ,EAAWlB,GAAG,sBACvB,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,WAAS,EACTC,QAAQ,iBAEJ,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CACA7B,UAAU,gBACVoB,MAAM,UACNU,cAAY,EACZC,QAAQ,SAJR,qBAQA,kBAACF,EAAA,EAAD,CACAT,MAAM,UACNW,QAAQ,MAFR,KAIO9C,KAAKvB,MAAMqD,2B,GAvG1BH,aCkFToB,E,kDAhFX,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTuE,SAAU,GACVC,UAAU,CACNtE,OAAQ,CACJ,UACA,YAEJC,SAAS,CACP,CACEC,MAAM,SACNkB,KAAK,CACH,KACA,MAEFf,gBAAgB,CACd,0BACA,+BAlBC,E,iEA2BfgB,KAAKC,Y,2CAILD,KAAKC,Y,gCAIL,IAAIgD,EAAYjD,KAAKvB,MAAMwE,UAE3B,OADAA,EAAUrE,SAAS,GAAGmB,KAAO,CAACC,KAAKxB,MAAMmC,aAAcX,KAAKxB,MAAMoC,eAC3DqC,I,+BAWP,OACI,kBAACnC,EAAA,EAAD,CACIC,UAAU,iBAGV,6BACI,kBAAC,IAAD,CACIhB,KAAMC,KAAKC,UACXgB,QAAS,CACLC,MAAM,CACFC,SAAQ,EACRC,KAAK,WACLC,SAAS,IAEbC,OAAQ,CACJ4B,MAAO,CAAC,CACJ1B,MAAO,CACHC,aAAa,MAIzBC,OAAO,CACHP,SAAQ,Y,GAvEjBQ,aCkFRwB,E,kDAjFX,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT2E,WAAY,GACZH,UAAU,CACNtE,OAAQ,CACJ,cACA,SACA,QAEJC,SAAS,CACP,CACEmB,KAAK,CACD,IACA,KACA,KAEJf,gBAAgB,CACZ,0BACA,0BACA,+BApBD,E,iEA6BfgB,KAAKiC,SAAS,CAAEmB,WAAapD,KAAKxB,MAAM4E,e,2CAIrCpD,KAAKvB,MAAM2E,aAAepD,KAAKxB,MAAM4E,aACpCpD,KAAKiC,SAAS,CAAEmB,WAAapD,KAAKxB,MAAM4E,aACxCpD,KAAKC,UACL8B,QAAQC,IAAI,W,gCAKhB,IAAIiB,EAAYjD,KAAKvB,MAAMwE,UAG3B,OAFAA,EAAUtE,OAAS0E,OAAOC,KAAKtD,KAAKxB,MAAM4E,YAC1CH,EAAUrE,SAAS,GAAGmB,KAAOsD,OAAO3E,OAAOsB,KAAKxB,MAAM4E,YAC/CH,I,+BAWP,OACI,kBAACnC,EAAA,EAAD,CAEIC,UAAU,iBAEV,kBAAC,IAAD,CACIhB,KAAMC,KAAKC,UACXgB,QAAS,CACLC,MAAM,CACFC,SAAQ,EACRC,KAAK,aACLC,SAAS,IAEbK,OAAO,CACHP,SAAQ,EACRoC,SAAU,iB,GAvEb5B,a,yBCInB6B,E,kDACF,WAAYhF,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACToD,YAAa,EACbC,iBAAkB,EAClBrB,SAAU,EACVE,aAAc,EACdC,cAAe,EACfL,eAAgB,EAChBkD,WAAa,GACbC,gBAAkB,GAClBC,qBAAuB,GACvBP,WAAY,CACR,cAAgB,IAbT,E,iEAkBG,IAAD,OAEbM,EAAkB,GAClBC,EAAuB,GACvBP,EAAapD,KAAKvB,MAAM2E,WACxBvB,EAAc,EACdC,EAAmB,EACnBnB,EAAe,EACfC,EAAgB,EAGpBgD,IAAMC,IAAI,2CACTC,MAAK,SAAAC,GACFA,EAAShE,KAAKA,KAAKiE,SAAQ,SAAAC,GACvBlC,QAAQC,IAAIiC,GACZpC,GAA4BoC,EAASC,cACrCpC,GAAuCmC,EAASC,cAAgBD,EAASE,oBACvCF,EAASG,kBAC3ChB,EAAW,eAAiBA,EAAW,eAAiBa,EAASE,oBAAsBF,EAASI,qBAAuBJ,EAASK,mBAChI3D,GAA8BsD,EAASM,aACvC3D,EAAgBA,EAAgBqD,EAASO,iBAAmBP,EAASQ,kBAAoBR,EAASS,cAAgBT,EAASU,wBAE/H,EAAK1C,SAAS,CAAEtB,aAAeA,IAC/B,EAAKsB,SAAS,CAAErB,cAAgBA,OAEnCgE,OAAM,SAAAC,GACU,EAAKrG,MAAMsG,eAAeC,eAC5Bf,SAAQ,SAAAC,GACflC,QAAQC,IAAIiC,GACZpC,GAA4BoC,EAASe,MACrClD,GAAuCmC,EAASe,MAAQf,EAASgB,YACjE7B,EAAW,eAAiBA,EAAW,eAAiBa,EAASb,WACjEzC,GAA8BsD,EAASiB,KACvCtE,EAAgBA,EAAgBqD,EAASkB,SAAWlB,EAASmB,UAAYnB,EAASoB,MAAQpB,EAASqB,gBAEvG,EAAKrD,SAAS,CAAEtB,aAAeA,IAC/B,EAAKsB,SAAS,CAAErB,cAAgBA,OAGpCgD,IAAMC,IAAI,2CACTC,MAAK,SAAAC,GACFA,EAAShE,KAAKA,KAAKiE,SAAQ,SAAAuB,GACM,UAA1BA,EAAUC,YACT9B,EAAgBpD,KAAKiF,GACW,cAA1BA,EAAUC,aAChB7B,EAAqBrD,KAAKiF,MAGlC7B,EAAgBM,SAAQ,SAAAuB,GACpB1D,GAA4B0D,EAAUE,aAChCpC,OAAOC,KAAKF,GAAYsC,SAASH,EAAUI,oBAG7CvC,EAAW,GAAD,OAAImC,EAAUI,qBAAwBvC,EAAW,GAAD,OAAImC,EAAUI,qBAAwBJ,EAAUE,aAF1GrC,EAAW,GAAD,OAAImC,EAAUI,qBAAwBJ,EAAUE,gBAKlE9B,EAAqBK,SAAQ,SAAAuB,GACzBzD,GAAsCyD,EAAUE,gBAGpD,IAAIhF,EAAWoB,EAAcC,EAC7B,EAAKG,SAAS,CAAExB,SAAWA,IAC3B,EAAKwB,SAAS,CAAEmB,WAAaA,IAC7B,EAAKnB,SAAS,CAAEJ,YAAcA,IAC9B,EAAKI,SAAS,CAAEH,iBAAmBA,OAEtC8C,OAAM,SAAAC,GACHnB,EAAkB,EAAKlF,MAAMoH,yBAAyBC,WACtDlC,EAAuB,EAAKnF,MAAMoH,yBAAyBE,gBAC3DpC,EAAgBM,SAAQ,SAAAuB,GACpB1D,GAA4B0D,EAAUQ,MAChC1C,OAAOC,KAAKF,GAAYsC,SAASH,EAAUS,aAG7C5C,EAAW,GAAD,OAAImC,EAAUS,cAAiB5C,EAAW,GAAD,OAAImC,EAAUS,cAAiBT,EAAUQ,MAF5F3C,EAAW,GAAD,OAAImC,EAAUS,cAAiBT,EAAUQ,SAK3DpC,EAAqBK,SAAQ,SAAAuB,GACzBzD,GAAsCyD,EAAUQ,SAEpD,IAAItF,EAAWoB,EAAcC,EAC7B,EAAKG,SAAS,CAAExB,SAAWA,IAC3B,EAAKwB,SAAS,CAAEmB,WAAaA,IAC7B,EAAKnB,SAAS,CAAEJ,YAAcA,IAC9B,EAAKI,SAAS,CAAEH,iBAAmBA,S,+BAKvC,OACI,6BACI,yBAAKf,UAAU,mBACX,kBAAC,EAAef,KAAKvB,OACrB,kBAAC,EAAcuB,KAAKvB,QAExB,yBAAKsC,UAAU,sBACX,kBAAC,EAAaf,KAAKvB,OACnB,kBAAC,EAAeuB,KAAKvB,a,GApHVkD,aAkIhBsE,aAPf,SAAyBxH,GACrB,MAAO,CACHqG,eAAiBrG,EAAMqG,eACvBc,yBAA2BnH,EAAMmH,4BAI1BK,CAAyBzC,GCnItB0C,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAS,CACLC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAcL,EAAMM,OAAOC,QAC3BjE,UAAW,CACPkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAEjCE,MAAO,CACHC,QAASZ,EAAMS,QAAQ,GACvBzF,QAAS,OACToF,SAAU,OACVS,cAAe,UAEnBC,YAAa,CACTX,OAAQ,S,6BCjBS3E,YCDPuE,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAS,CACLC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAcL,EAAMM,OAAOC,QAC3BjE,UAAW,CACPkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAGjCE,MAAO,CACHC,QAASZ,EAAMS,QAAQ,GACvBzF,QAAS,OACToF,SAAU,OACVS,cAAe,UAEnBE,eAAgB,CACZZ,OAAQ,KAEZa,kBAAmB,CACfb,OAAQ,S,4ECqWDc,G,yDAxXX,WAAY5I,GAAQ,IAAD,8BACf,cAAMA,IAuCV6I,WAAa,SAAAC,GACT,GAA0B,KAAvB,EAAK7I,MAAM8I,SAA8C,KAA5B,EAAK9I,MAAM+I,cAA4C,KAArB,EAAK/I,MAAMuG,OAA2C,KAA3B,EAAKvG,MAAMwG,aAAkD,KAA5B,EAAKxG,MAAMgJ,cAAiD,KAA1B,EAAKhJ,MAAMiJ,YAA8C,KAAzB,EAAKjJ,MAAMkJ,WAAwC,KAApB,EAAKlJ,MAAMyG,MAAuC,KAAxB,EAAKzG,MAAM0G,UAAwC,KAArB,EAAK1G,MAAM4G,OAAyC,KAAzB,EAAK5G,MAAM2G,WAAgD,KAA5B,EAAK3G,MAAM6G,aAAqB,CAC7W,IAAIsC,EAAa,EAAKpJ,MAAMqJ,UAC5B9F,QAAQC,IAAI4F,GACZ,IAAIE,EAAO,EAAKrJ,MAAM+I,aAClBD,EAAU,EAAK9I,MAAM8I,QACrBvC,EAAQ,EAAKvG,MAAMuG,MACnB5B,EAAa2E,SAAS,EAAKtJ,MAAMwG,YAAa,IAAM8C,SAAS,EAAKtJ,MAAMgJ,aAAc,IAAMM,SAAS,EAAKtJ,MAAMiJ,WAAY,IAChI3F,QAAQC,IAAIoB,GACZ,IAAIxC,EAAgBmH,SAAS,EAAKtJ,MAAM0G,SAAU,IAAM4C,SAAS,EAAKtJ,MAAM4G,MAAO,IAAM0C,SAAS,EAAKtJ,MAAM2G,UAAW,IAAM2C,SAAS,EAAKtJ,MAAM6G,aAAc,IAChKvD,QAAQC,IAAIpB,GACZ,IAAID,EAAeoH,SAAS,EAAKtJ,MAAMyG,KAAM,IAAM6C,SAAS,EAAKtJ,MAAMkJ,UAAW,IAC9EjH,EAAWqH,SAAS,EAAKtJ,MAAMyG,KAAM,IAAMtE,EAC3CoH,EAA0B,GAAXtH,EAAiB0C,EAAc,IAC9C6E,EAAkD,IAAhCtH,EAAeC,GAAuBwC,EAAc,IAC1E,EAAK5E,MAAM0J,WACPN,EAAYE,EAAMP,EAASQ,SAAS/C,EAAO,IAC3C+C,SAAS,EAAKtJ,MAAMwG,YAAa,IAAK8C,SAAS,EAAKtJ,MAAMgJ,aAAc,IAAKM,SAAS,EAAKtJ,MAAMiJ,WAAY,IAC7GK,SAAS,EAAKtJ,MAAMkJ,UAAW,IAAKI,SAAS,EAAKtJ,MAAMyG,KAAM,IAC9D6C,SAAS,EAAKtJ,MAAM0G,SAAU,IAAK4C,SAAS,EAAKtJ,MAAM4G,MAAO,IAAK0C,SAAS,EAAKtJ,MAAM2G,UAAW,IAAK2C,SAAS,EAAKtJ,MAAM6G,aAAc,IACzIlC,EAAY1C,EAAUsH,EAAWG,QAAQ,GAAIF,EAAaE,QAAQ,SAGtE,EAAKlG,SAAS,CAAEmG,oBAAqB,KA/D1B,EAmEnBC,aAAe,SAAAf,GAEX,EAAK9I,MAAM0J,WADM,WApEF,EAwEnBI,qBAAuB,SAAAhB,GACnB,EAAKrF,SAAS,CAAEuF,aAAeF,EAAMiB,OAAOC,SAvE5C,EAAK/J,MAAQ,CACT+I,aAAc,GACdD,QAAS,GACTvC,MAAO,GACPC,YAAa,GACbwC,aAAc,GACdC,WAAY,GACZC,UAAW,GACXzC,KAAM,GACNC,SAAU,GACVE,MAAO,GACPD,UAAW,GACXE,aAAc,GACd8C,oBAAoB,GAfT,E,iEAmBG,IAAD,OACW,SAAzBpI,KAAKxB,MAAMqJ,WACV7H,KAAKxB,MAAMiK,eAAezE,SAAQ,SAAAC,GAC3BA,EAASjD,KAAO,EAAKxC,MAAMkK,SAC1B,EAAKzG,SAAS,CAAEsF,QAAUtD,EAASsD,UACnC,EAAKtF,SAAS,CAAEuF,aAAevD,EAAS6D,OACxC,EAAK7F,SAAS,CAAE+C,MAAQf,EAASe,QACjC,EAAK/C,SAAS,CAAEgD,YAAchB,EAASgB,cACvC,EAAKhD,SAAS,CAAEwF,aAAexD,EAASwD,eACxC,EAAKxF,SAAS,CAAEyF,WAAazD,EAASyD,aACtC,EAAKzF,SAAS,CAAE0F,UAAY1D,EAAS0D,YACrC,EAAK1F,SAAS,CAAEiD,KAAOjB,EAASiB,OAChC,EAAKjD,SAAS,CAAEkD,SAAWlB,EAASkB,WACpC,EAAKlD,SAAS,CAAEoD,MAAQpB,EAASoB,QACjC,EAAKpD,SAAS,CAAEmD,UAAYnB,EAASmB,YACrC,EAAKnD,SAAS,CAAEqD,aAAerB,EAASqB,qB,+BA0C/C,IAAD,OACEqD,EAAc,CAChB3J,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,IAEPuC,EAAiB,CACnBD,MAAQ,IACRE,WAAY,IAEVC,EAAiB,CACnB5H,QAAS,OACT6H,WAAY,SACZC,OAAQ,IAENC,EAAsB,CACxBN,MAAO,IACPzH,QAAS,OACT6H,WAAY,UAEVG,EAAuB,CACzBP,MAAO,IACPzH,QAAS,OACT6H,WAAY,UAqBhB,OACI,yBAAKjI,UAAU,aACX,yBAAKA,UAAU,cACX,yBAAKC,GAAG,eAAesB,MAtBT,CACtBnB,QAAS,OACTiI,eAAgB,kBAqBR,yBAAKpI,GAAG,mBACJ,yBAAKsB,MAAOyG,GACR,yBAAKzG,MAAO4G,GACR,kBAACtG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,aAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM8I,QAClBgC,SAAY,SAACjC,GAAY,EAAKrF,SAAS,CAAEsF,QAAUD,EAAMiB,OAAOC,aAIxE,yBAAKlG,MAAOyG,GACR,yBAAKzG,MAAO4G,GACR,kBAACtG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,mBAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GAChB,kBAACW,EAAA,EAAD,CAAchB,MAAOxI,KAAKvB,MAAM+I,aAAc+B,SAAUvJ,KAAKsI,sBAC7D,4BAAQmB,aAAW,OAAOjB,MAAM,KAChC,4BAAQA,MAAO,gBAAf,gBACA,4BAAQA,MAAO,UAAf,UACA,4BAAQA,MAAO,WAAf,WACA,4BAAQA,MAAO,cAAf,cACA,4BAAQA,MAAO,cAAf,cACA,4BAAQA,MAAO,qBAAf,wBAIR,yBAAKlG,MAAOyG,GACR,yBAAKzG,MAAO4G,GACR,kBAACtG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,WAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMuG,MAClBuE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAE+C,MAAQsC,EAAMiB,OAAOC,SAG7CmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO4G,GACR,kBAACtG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,kBAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMwG,YAClBsE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEgD,YAAcqC,EAAMiB,OAAOC,SAGnDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO4G,GACR,kBAACtG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,mBAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMgJ,aAClB8B,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEwF,aAAeH,EAAMiB,OAAOC,SAGpDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO4G,GACR,kBAACtG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,iBAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMiJ,WAClB6B,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEyF,WAAaJ,EAAMiB,OAAOC,SAGlDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,UAK5B,yBAAKvC,GAAG,mBACJ,yBAAKsB,MAAOyG,GACR,yBAAKzG,MAAO6G,GACR,kBAACvG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,yBAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMkJ,UAClB4B,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAE0F,UAAYL,EAAMiB,OAAOC,SAGjDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO6G,GACR,kBAACvG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,UAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMyG,KAClBqE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEiD,KAAOoC,EAAMiB,OAAOC,SAG5CmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO6G,GACR,kBAACvG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,cAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM0G,SAClBoE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEkD,SAAWmC,EAAMiB,OAAOC,SAGhDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO6G,GACR,kBAACvG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,WAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM4G,MAClBkE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEoD,MAAQiC,EAAMiB,OAAOC,SAG7CmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO6G,GACR,kBAACvG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,eAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM2G,UAClBmE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEmD,UAAYkC,EAAMiB,OAAOC,SAGjDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKjB,MAAOyG,GACR,yBAAKzG,MAAO6G,GACR,kBAACvG,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,aAApC,oBAIJ,kBAACuG,EAAA,EAAD,CAAa/G,MAAOuG,GACpB,kBAACS,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM6G,aAClBiE,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEqD,aAAegC,EAAMiB,OAAOC,SAGpDmB,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,WAM5B,yBAAKjB,MAtPY,CACzBnB,QAAS,OACTiI,eAAgB,eAChBS,UAAW,IAoPC,kBAACC,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAOqG,EAAaoB,QAAS/J,KAAKqH,YACzD,kBAACzE,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,MAApC,SAIJ,kBAACgH,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAOqG,EAAaoB,QAAS/J,KAAKqI,cACzD,kBAACzF,EAAA,EAAD,CAAYT,MAAM,UAAUW,QAAQ,MAApC,YAKP9C,KAAKvB,MAAM2J,mBACR,yBAAK9F,MA1PC,CAClBnB,QAAS,OACTiI,eAAgB,SAChBH,OAAQ,KAwPQ,kBAAC,IAAD,CAAU3G,MA/PX,CACfsG,MAAO,MACPtC,OAAQ,OA6PqC0D,SAAS,SAAtC,8BAEN,W,GAjXSrI,cCGzBsI,E,kDACF,WAAYzL,GAAQ,IAAD,8BACf,cAAMA,IA0EV0L,YAAc,SAAA5C,GACV,EAAKrF,SAAS,CAAE4F,UAAY,QAC5B,EAAK5F,SAAS,CAAEkI,WAAY,EAAK1L,MAAM0L,aA7ExB,EAgFnBC,WAAa,SAACC,EAAGrJ,GACb,EAAKiB,SAAS,CAAEyG,OAAS1H,IACzB,EAAKiB,SAAS,CAAE4F,UAAY,SAC5B,EAAK5F,SAAS,CAAEkI,WAAY,EAAK1L,MAAM0L,aAnFxB,EAsFnBG,YAAc,SACVC,EAAeC,EAASC,EAAYC,EACpCC,EAAgBC,EAAiBC,EACjCC,EAAcC,EACdC,EAAaC,EAAUC,EAAcC,EACrCC,EAAeC,EAAaC,EAAeC,GAE3C,GAAqB,QAAlBhB,EAAyB,CACxB,IAAI9B,EAAiB,EAAKhK,MAAMgK,eAC5B+C,EAAQ,EAAK/M,MAAMgN,cACnBC,EAAW,EAAKjN,MAAMiN,SAC1BjD,EAAenI,KACX,CACIU,GAAI0K,EACJD,cAAeD,EACf1D,KAAM0C,EACNjD,QAASkD,EACTzF,MAAO0F,EACPzF,YAAa0F,EACblD,aAAcmD,EACdlD,WAAYmD,EACZzH,WAAYgI,EACZzD,UAAWmD,EACX5F,KAAM6F,EACN5F,SAAU6F,EACV3F,MAAO4F,EACP7F,UAAW8F,EACX5F,aAAc6F,EACdzK,SAAU2K,EACVrD,WAAYsD,EACZrD,aAAcsD,IAGtB,EAAKtJ,SAAS,CAAEwG,eAAiBA,IACjC,EAAKjK,MAAMmN,sCAAsClD,GACjD,EAAKxG,SAAS,CAAEwJ,cAAiBD,EAAQ,IACzC,EAAKvJ,SAAS,CAAEyJ,SAAYA,EAAW,IAEvC9H,IAAMgI,KAAK,0CAA2C,CAClD,gBAAoBnB,EACpB,aAAiBD,EACjB,cAAkBE,EAClB,oBAAwBC,EACxB,qBAAyBC,EACzB,mBAAuBC,EACvB,kBAAsBC,EACtB,aAAiBC,EACjB,qBAAyBA,EACzB,iBAAqBC,EACrB,cAAkBC,EAClB,kBAAsBC,EACtB,qBAAyBC,EACzB,iBAAqBE,EACrB,mBAAuBC,EACvB,qBAAyBC,IAE5BzH,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,WAEb,GAAqB,SAAlB0F,EAA0B,CAChCxI,QAAQC,IAAI,QACRyG,EAAiB,EAAKhK,MAAMgK,eAChC,IADA,IACSpI,EAAE,EAAGA,EAAEoI,EAAeoD,OAAQxL,IAAK,CACzBoI,EAAepI,GAClBW,KAAO,EAAKvC,MAAMiK,SAC1BD,EAAepI,GAAGyH,KAAO0C,EACzB/B,EAAepI,GAAGkH,QAAUkD,EAC5BhC,EAAepI,GAAG2E,MAAQ0F,EAC1BjC,EAAepI,GAAG4E,YAAc0F,EAChClC,EAAepI,GAAGoH,aAAemD,EACjCnC,EAAepI,GAAGqH,WAAamD,EAC/BpC,EAAepI,GAAG+C,WAAagI,EAC/B3C,EAAepI,GAAGsH,UAAYmD,EAC9BrC,EAAepI,GAAG6E,KAAO6F,EACzBtC,EAAepI,GAAG8E,SAAW6F,EAC7BvC,EAAepI,GAAGgF,MAAQ4F,EAC1BxC,EAAepI,GAAG+E,UAAY8F,EAC9BzC,EAAepI,GAAGiF,aAAe6F,EACjC1C,EAAepI,GAAGK,SAAW2K,EAC7B5C,EAAepI,GAAG2H,WAAasD,EAC/B7C,EAAepI,GAAG4H,aAAesD,GAIzC,EAAKtJ,SAAS,CAAEwG,eAAiBA,IACjC,EAAKjK,MAAMmN,sCAAsClD,GAEjD,IAAIqD,EAAS,2CAA6C,EAAKrN,MAAMiK,OACrE9E,IAAMmI,IAAID,EAAQ,CACd,gBAAoBrB,EACpB,aAAiBD,EACjB,cAAkBE,EAClB,oBAAwBC,EACxB,qBAAyBC,EACzB,mBAAuBC,EACvB,kBAAsBC,EACtB,aAAiBC,EACjB,qBAAyBA,EACzB,iBAAqBC,EACrB,cAAkBC,EAClB,kBAAsBC,EACtB,qBAAyBC,EACzB,iBAAqBE,EACrB,mBAAuBC,EACvB,qBAAyBC,IAE5BzH,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,MAGpB,EAAKqF,eA1MU,EA6MnB8B,aAAe,SAAC3B,EAAG4B,GACflK,QAAQC,IAAIiK,GACZ,IAAIxD,EAAiB,EAAKhK,MAAMgK,eAC5BgD,EAAgBhD,EAAeoD,OACnC,EAAK5J,SAAS,CAAEwJ,cAAgBA,IAChChD,EAAezE,SAAQ,SAAAC,GACnB,GAAGgI,GAAUhI,EAASwH,cAAe,CACjC,IAAIS,EAAY,2CAA2CjI,EAASjD,GAAGmL,WACvEvI,IAAMwI,OAAOF,GACZpI,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,MAEhB4D,EAAe4D,OAASpI,EAASwH,cAAgB,EAAK,OAG9D,IAAIa,EAAmB,EACvB7D,EAAezE,SAAQ,SAAAC,GACnBA,EAASwH,cAAgBa,EACzBA,OAEJ,EAAK9N,MAAMmN,sCAAsClD,GACjD,EAAKxG,SAAS,CAAEwG,eAAiBA,KAnOjC,EAAKhK,MAAQ,CACToJ,UAAW,GACXa,OAAQ,EACRyB,WAAW,EACXuB,SAAU,EACVD,cAAe,EACfhD,eAAgB,IARL,E,iEA0BG,IAAD,OACjB7E,IAAMC,IAAI,2CACTC,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,GAIZ,IAHA,IAAI0H,EAAgB,EAChBC,EAAW,EACXjD,EAAiB,GACZpI,EAAE,EAAGA,EAAE0D,EAAShE,KAAKA,KAAK8L,OAAQxL,IAAK,CAC5C,IAAI4D,EAAWF,EAAShE,KAAKA,KAAKM,GAC9B+C,EAAaa,EAASE,oBAAsBF,EAASI,qBAAuBJ,EAASK,mBACzFmE,EAAenI,KACX,CACIU,GAAIiD,EAASjD,GACbyK,cAAepL,EAAE,EACjByH,KAAM7D,EAASuD,aACfD,QAAStD,EAASsI,gBAClBvH,MAAOf,EAASC,cAChBe,YAAahB,EAASE,oBACtBsD,aAAcxD,EAASI,qBACvBqD,WAAYzD,EAASK,mBACrBlB,WAAYA,EACZuE,UAAW1D,EAASG,kBACpBc,KAAMjB,EAASM,aACfY,SAAUlB,EAASO,iBACnBa,MAAOpB,EAASS,cAChBU,UAAWnB,EAASQ,kBACpBa,aAAcrB,EAASU,qBACvBjE,SAAUuD,EAASuI,iBACnBxE,WAAY/D,EAASwI,mBACrBxE,aAAchE,EAASyI,uBAG/BhB,EAAWzH,EAASjD,GACpByK,IAEJ,EAAKxJ,SAAS,CAAEyJ,SAAY3D,SAAS2D,EAAU,IAAM,IACrD,EAAKzJ,SAAS,CAAEwJ,cAAiBA,EAAgB,IACjD,EAAKxJ,SAAS,CAAEwG,eAAiBA,IACjC,EAAKjK,MAAMmN,sCAAsClD,MAEpD7D,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,GACT,EAAKpG,MAAMgK,iBAAmB,EAAKjK,MAAMsG,eAAeC,iBACvD,EAAK9C,SAAS,CAAEwG,eAAiB,EAAKjK,MAAMsG,eAAeC,iBAC3DhD,QAAQC,IAAI,c,+BAkKd,IAAD,OAMC2K,EAAY,CACd/D,MAAO,IACPtC,OAAQ,IACR2C,OAAQ,IAEN2D,EAAc,CAChB5N,gBAAiB,WAEf6N,EAAa,CACfvG,OAAQ,EACRK,WAAY,UAQVmG,EAAc,CAChB3L,QAAS,OACTiI,eAAgB,gBAEd2D,EAAkB,CACpB/N,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,GACT2C,OAAS,IAEP+D,EAAoB,CACtBhO,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,GACT2C,OAAS,IASb,OACI,yBAAK3G,MAjDS,CACdnB,QAAS,OACTiI,eAAgB,eAChB6D,SAAU,SA+CLjN,KAAKvB,MAAMgK,eAAeyE,KAAI,SAAAjJ,GAC3B,OACI,kBAAC5B,EAAA,EAAD,CAAMC,MAAOqK,GACb,kBAACQ,EAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,CAAQ5D,aAAW,aAAanH,MAAOsK,GAClC3I,EAASwH,eAGlBvK,MAAO+C,EAAS6D,KAChBwF,UAAWrJ,EAASsD,UAExB,kBAACgG,EAAA,EAAD,CACIjL,MAAOuK,EACPW,MAAM,kCACNtM,MAAO+C,EAAS6D,OAEpB,kBAACvF,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAYE,QAAQ,QAAQX,MAAM,gBAAgBsL,UAAU,KAC5D,kBAAC7K,EAAA,EAAD,KACI,sCAAYqB,EAASe,QAEzB,kBAACpC,EAAA,EAAD,KACI,2CAAiBqB,EAASb,aAE9B,kBAACR,EAAA,EAAD,KACI,yCAAeqB,EAASvD,WAE5B,kBAACkC,EAAA,EAAD,KACI,mDAAyBqB,EAAS+D,WAAlC,MAEJ,kBAACpF,EAAA,EAAD,KACI,uDAA6BqB,EAASgE,aAAtC,QAIR,yBAAK3F,MAAOwK,GACR,kBAAChD,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAOyK,EAAiBhD,QAAU,SAACM,GAAD,OAAO,EAAKD,WAAWC,EAAGpG,EAASjD,MAC5F,kBAAC4B,EAAA,EAAD,CACIT,MAAM,UACNW,QAAQ,MAFZ,SAOJ,kBAACgH,EAAA,EAAD,CAAQ9I,GAAIiD,EAASwH,cAAe3I,QAAQ,WAAWR,MAAO0K,GAC1D,kBAACpK,EAAA,EAAD,CACIT,MAAM,UACNW,QAAQ,KACRiH,QAAU,SAACM,GAAD,OAAO,EAAK2B,aAAa3B,EAAGpG,EAASwH,iBAHnD,gBAYhB,kBAACpJ,EAAA,EAAD,CAAMC,MAAOqK,GACT,kBAACQ,EAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,CAAQ5D,aAAW,aAAanH,MAAOsK,GAClC5M,KAAKvB,MAAMgN,eAGpBvK,MAAM,gBACNoM,UAAU,YAEd,kBAAC/K,EAAA,EAAD,CAAaD,MA7EA,CACrBnB,QAAS,OACTiI,eAAgB,SAChBJ,WAAY,SACZ1C,OAAQ,QA0EI,kBAACwD,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAtGvB,CAChBtD,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,IAkGkDyD,QAAS/J,KAAKkK,aACzD,kBAACtH,EAAA,EAAD,CACIT,MAAM,UACNW,QAAQ,MAFZ,YASX9C,KAAKvB,MAAM0L,UACR,kBAAC,EAAD,iBACQnK,KAAKvB,MADb,CAEIyJ,WAAYlI,KAAKsK,eAEnB,U,GAhXU3I,aAsYjBsE,aANf,SAAyBxH,GACrB,MAAO,CACHqG,eAAiBrG,EAAMqG,mBAXJ,SAAA4I,GACvB,MAAO,CACH/B,sCAAwC,SAACgC,GAAD,OAAuBD,EAAS,CACpE5F,KAAM,0CACNW,eAAiBkF,QAWd1H,CAA6CgE,GC5Y1C/D,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAS,CACLC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAcL,EAAMM,OAAOC,QAC3BjE,UAAW,CACPkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAEjCE,MAAO,CACHC,QAASZ,EAAMS,QAAQ,GACvBzF,QAAS,OACToF,SAAU,OACVS,cAAe,UAEnBC,YAAa,CACTX,OAAQ,S,4ECTVsH,E,kDACF,WAAYpP,GAAQ,IAAD,8BACf,cAAMA,IAuHV0L,YAAc,SAAA5C,GACV,EAAKrF,SAAS,CAAE4L,UAAW,EAAKpP,MAAMoP,YAzHvB,EA4HnBC,kBAAoB,SAAAxG,GAChB,EAAKrF,SAAS,CAAE4D,WAAa,EAAKpH,MAAMsP,iBACxC,EAAK9L,SAAS,CAAE+L,qBAAuB,KACvC,EAAK/L,SAAS,CAAEgM,qBAAuB,KACvC,EAAKhM,SAAS,CAAEiM,eAAiB,KACjC,EAAK1P,MAAM2P,mBAAmB,EAAK1P,MAAMsP,gBACzC,EAAK7D,eAlIU,EAqInBkE,gBAAkB,SAAA9G,GACd,IAAIyG,EAAiB,GACjBlM,EAAc,EACdwM,GAAO,EACX,EAAK5P,MAAMoH,WAAW7B,SAAQ,SAAAsK,GACvBA,EAAMtN,GAAK,EAAKvC,MAAM8P,QACrB1M,GAA4ByM,EAAMvI,MAClCgI,EAAezN,KAAKgO,IACZA,EAAMtN,GAAK,EAAKvC,MAAM8P,SAAYF,GAC1CxM,EAAcA,EAAcyM,EAAMvI,MAAQgC,SAAS,EAAKtJ,MAAMyP,eAAgB,IAC9EH,EAAezN,KACX,CACI,GAAO,EAAK7B,MAAM8P,OAClB,YAAgB,EAAK9P,MAAMuP,qBAC3B,YAAgB,EAAKvP,MAAMwP,qBAC3B,MAAUlG,SAAS,EAAKtJ,MAAMyP,eAAgB,MAGtDH,EAAezN,KAAKgO,GACpBD,GAAO,GAEPN,EAAezN,KAAKgO,MAGxBD,GACAN,EAAezN,KACX,CACI,GAAO,EAAK7B,MAAM8P,OAClB,YAAgB,EAAK9P,MAAMuP,qBAC3B,YAAgB,EAAKvP,MAAMwP,qBAC3B,MAAUlG,SAAS,EAAKtJ,MAAMyP,eAAgB,MAI1D,IAAIpC,EAAS,2CAA6C,EAAKrN,MAAM8P,OAAOpC,WAC5EvI,IAAMmI,IAAID,EAAQ,CACd,YAAgB,QAChB,mBAAuB,EAAKrN,MAAMuP,qBAClC,mBAAuB,EAAKvP,MAAMwP,qBAClC,aAAiBlG,SAAS,EAAKtJ,MAAMyP,eAAgB,MAExDpK,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,MAEhB,EAAK5C,SAAS,CAAE+L,qBAAuB,KACvC,EAAK/L,SAAS,CAAEgM,qBAAuB,KACvC,EAAKhM,SAAS,CAAEiM,eAAiB,KACjC,EAAKjM,SAAS,CAAE4D,WAAakI,IAC7B,EAAK9L,SAAS,CAAEJ,YAAcA,IAC9B,EAAKrD,MAAM2P,mBAAmBJ,GAC9B,EAAK7D,eA1LU,EA6LnBsE,sBAAwB,SAAAlH,GACpB,EAAKrF,SAAS,CAAE6D,gBAAkB,EAAKrH,MAAMgQ,sBAC7C,EAAKxM,SAAS,CAAEyM,yBAA2B,KAC3C,EAAKzM,SAAS,CAAE0M,yBAA2B,KAC3C,EAAK1M,SAAS,CAAE2M,mBAAqB,KACrC,EAAKpQ,MAAMqQ,wBAAwB,EAAKpQ,MAAMgQ,qBAC9C,EAAKvE,eAnMU,EAsMnB4E,oBAAsB,SAAAxH,GAClB,IAAImH,EAAsB,GACtB3M,EAAmB,EACnBuM,GAAO,EACX,EAAK5P,MAAMqH,gBAAgB9B,SAAQ,SAAA+K,GAC5BA,EAAU/N,GAAK,EAAKvC,MAAM8P,QACzBzM,GAAsCiN,EAAUhJ,MAChD0I,EAAoBnO,KAAKyO,IAClBA,EAAU/N,GAAK,EAAKvC,MAAM8P,SAAYF,GAC7CvM,EAAmBA,EAAmBiN,EAAUhJ,MAAQgC,SAAS,EAAKtJ,MAAMmQ,mBAAoB,IAChGH,EAAoBnO,KAChB,CACI,GAAO,EAAK7B,MAAM8P,OAClB,YAAgB,EAAK9P,MAAMiQ,yBAC3B,YAAgB,EAAKjQ,MAAMkQ,yBAC3B,MAAU5G,SAAS,EAAKtJ,MAAMmQ,mBAAoB,MAG1DH,EAAoBnO,KAAKyO,GACzBV,GAAO,GAEPI,EAAoBnO,KAAKyO,MAG7BV,GACAI,EAAoBnO,KAChB,CACI,GAAO,EAAK7B,MAAM8P,OAClB,YAAgB,EAAK9P,MAAMiQ,yBAC3B,YAAgB,EAAKjQ,MAAMkQ,yBAC3B,MAAU5G,SAAS,EAAKtJ,MAAMmQ,mBAAoB,MAI9D,IAAI9C,EAAS,2CAA6C,EAAKrN,MAAM8P,OAAOpC,WAC5EvI,IAAMmI,IAAID,EAAQ,CACd,YAAgB,YAChB,mBAAuB,EAAKrN,MAAMuP,qBAClC,mBAAuB,EAAKvP,MAAMwP,qBAClC,aAAiBlG,SAAS,EAAKtJ,MAAMyP,eAAgB,MAExDpK,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,MAEhB,EAAK5C,SAAS,CAAEyM,yBAA2B,KAC3C,EAAKzM,SAAS,CAAE0M,yBAA2B,KAC3C,EAAK1M,SAAS,CAAE2M,mBAAqB,KACrC,EAAK3M,SAAS,CAAE6D,gBAAkB2I,IAClC,EAAKxM,SAAS,CAAEH,iBAAmBA,IACnC,EAAKtD,MAAMqQ,wBAAwBJ,GACnC,EAAKvE,eA3PU,EA8PnB8E,gBAAmB,SAAC3E,EAAG4B,GACnB,EAAKhK,SAAS,CAAE8L,eAAiB,EAAKtP,MAAMoH,aAC5C,EAAK5D,SAAS,CAAEyG,OAASuD,IACzB,IAAI8B,EAAiB,GACrB,EAAKtP,MAAMoH,WAAW7B,SAAQ,SAAAsK,GACvBrC,IAAWqC,EAAMtN,IAChB,EAAKiB,SAAS,CAAEsM,OAASD,EAAMtN,KAC/B,EAAKiB,SAAS,CAAE+L,qBAAuBM,EAAMW,cAC7C,EAAKhN,SAAS,CAAEgM,qBAAuBK,EAAMtI,cAC7C,EAAK/D,SAAS,CAAEiM,eAAiBI,EAAMvI,SAEvCgI,EAAezN,KAAKgO,MAG5B,EAAKrM,SAAS,CAAE4D,WAAakI,IAC7B,EAAKvP,MAAM2P,mBAAmBJ,GAC9B,EAAK9L,SAAS,CAAE4L,UAAW,EAAKpP,MAAMoP,YA9QvB,EAiRnBqB,kBAAoB,SAAC7E,EAAG4B,GACpB,IAAIpG,EAAa,EAAKpH,MAAMoH,WACxBhE,EAAc,EACdkM,EAAiB,GACrBlI,EAAW7B,SAAQ,SAAAsK,GACZA,EAAMtN,KAAOiL,IACZpK,GAA4ByM,EAAMvI,MAClCgI,EAAezN,KAAKgO,OAG5B,IAAIpC,EAAY,2CAA6CD,EAAOE,WACpEvI,IAAMwI,OAAOF,GACZpI,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,MAEhB,EAAK5C,SAAS,CAAEJ,YAAcA,IAC9B,EAAKI,SAAS,CAAE4D,WAAakI,IAC7B,EAAKvP,MAAM2P,mBAAmBJ,IArSf,EAwSnBoB,oBAAuB,SAAC9E,EAAG4B,GACvB,EAAKhK,SAAS,CAAEwM,oBAAsB,EAAKhQ,MAAMqH,kBACjD,EAAK7D,SAAS,CAAEyG,OAASuD,IACzB,IAAIwC,EAAsB,GAC1B,EAAKhQ,MAAMqH,gBAAgB9B,SAAQ,SAAA+K,GAC5B9C,IAAW8C,EAAU/N,IACpB,EAAKiB,SAAS,CAAEsM,OAASQ,EAAU/N,KACnC,EAAKiB,SAAS,CAAEyM,yBAA2BK,EAAUE,cACrD,EAAKhN,SAAS,CAAE0M,yBAA2BI,EAAU/I,cACrD,EAAK/D,SAAS,CAAE2M,mBAAqBG,EAAUhJ,SAE/C0I,EAAoBnO,KAAKyO,MAGjC,EAAK9M,SAAS,CAAE6D,gBAAkB2I,IAClC,EAAKjQ,MAAMqQ,wBAAwBJ,GACnC,EAAKxM,SAAS,CAAE4L,UAAW,EAAKpP,MAAMoP,YAxTvB,EA2TnBuB,sBAAwB,SAAC/E,EAAG4B,GACxB,IAAInG,EAAkB,EAAKrH,MAAMqH,gBAC7BhE,EAAmB,EACnB2M,EAAsB,GAC1B3I,EAAgB9B,SAAQ,SAAA+K,GACjBA,EAAU/N,KAAOiL,IAChBnK,GAAsCiN,EAAUhJ,MAChD0I,EAAoBnO,KAAKyO,OAGjC,IAAI7C,EAAY,2CAA6CD,EAAOE,WACpEvI,IAAMwI,OAAOF,GACZpI,MAAK,SAAAC,GACFhC,QAAQC,IAAI+B,MAEfa,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,MAEhB,EAAK5C,SAAS,CAAEH,iBAAmBA,IACnC,EAAKG,SAAS,CAAE6D,gBAAkB2I,IAClC,EAAKjQ,MAAMqQ,wBAAwBJ,IA/UpB,EAkVnBY,eAAiB,SAAA/H,GACb,IAAIzB,EAAa,EAAKpH,MAAMoH,WACxBhE,EAAc,EAAKpD,MAAMoD,YACzBb,EAAK6E,EAAWgG,OAAS,EAAKpN,MAAMqH,gBAAgB+F,OAAS,EAC7DrD,EAAQT,SAAS,EAAKtJ,MAAMyP,eAAgB,IAChDrM,GAA4B2G,EAC5B5E,IAAMgI,KAAK,0CAA2C,CAClD,YAAgB,QAChB,mBAAuB,EAAKnN,MAAMuP,qBAClC,mBAAuB,EAAKvP,MAAMwP,qBAClC,aAAiBzF,IAEpB1E,MAAK,SAAAC,GACF/C,EAAK+C,EAAShE,KAAKA,KAAKiB,GACxBe,QAAQC,IAAI,SACZ6D,EAAWvF,KACP,CACI,GAAOU,EACP,YAAgB,EAAKvC,MAAMuP,qBAC3B,YAAgB,EAAKvP,MAAMwP,qBAC3B,MAAUzF,IAGlB,EAAKvG,SAAS,CAAE4D,WAAaA,IAC7B,EAAKrH,MAAM2P,mBAAmBtI,GAC9B,EAAK5D,SAAS,CAAEgM,qBAAuB,KACvC,EAAKhM,SAAS,CAAE+L,qBAAuB,KACvC,EAAK/L,SAAS,CAAEiM,eAAiB,KACjC,EAAKjM,SAAS,CAAEJ,YAAcA,OAEjC+C,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,OAjXD,EAqXnByK,mBAAqB,SAAAhI,GACjB,IAAIxB,EAAkB,EAAKrH,MAAMqH,gBAC7BhE,EAAmB,EAAKrD,MAAMqD,iBAC9Bd,EAAK8E,EAAgB+F,OAAS,EAC9BrD,EAAQT,SAAS,EAAKtJ,MAAMmQ,mBAAoB,IACpD9M,GAAsC0G,EACtC5E,IAAMgI,KAAK,0CAA2C,CAClD,YAAgB,YAChB,mBAAuB,EAAKnN,MAAMiQ,yBAClC,mBAAuB,EAAKjQ,MAAMkQ,yBAClC,aAAiBnG,IAEpB1E,MAAK,SAAAC,GACF/C,EAAK+C,EAAShE,KAAKA,KAAKiB,GACxB8E,EAAgBxF,KACZ,CACI,GAAOU,EACP,YAAgB,EAAKvC,MAAMiQ,yBAC3B,YAAgB,EAAKjQ,MAAMkQ,yBAC3B,MAAUnG,IAGlB,EAAKvG,SAAS,CAAE6D,gBAAkBA,IAClC,EAAKtH,MAAMqQ,wBAAwB/I,GACnC,EAAK7D,SAAS,CAAEH,iBAAmBA,IACnC,EAAKG,SAAS,CAAE0M,yBAA2B,KAC3C,EAAK1M,SAAS,CAAEyM,yBAA2B,KAC3C,EAAKzM,SAAS,CAAE2M,mBAAqB,QAExChK,OAAM,SAAAC,GACH9C,QAAQC,IAAI6C,OAjZhB,EAAKpG,MAAQ,CACTiK,OAAQ,EACRmF,UAAU,EACVU,OAAQ,EACRP,qBAAsB,GACtBC,qBAAsB,GACtBC,eAAe,GACfQ,yBAA0B,GAC1BC,yBAA0B,GAC1BC,mBAAoB,GACpBW,KAAM,EACNC,YAAa,GACb3N,YAAa,EACbC,iBAAkB,EAClBiM,eAAgB,GAChBU,oBAAqB,GACrBgB,QAAU,CACN,CAAEzO,GAAI,cAAenC,MAAO,cAAe6Q,SAAU,KACrD,CACI1O,GAAI,cACJnC,MAAO,cACP6Q,SAAU,IACVC,MAAO,QAEX,CACI3O,GAAI,QACJnC,MAAO,QACP6Q,SAAU,IACVC,MAAO,QACPC,OAAQ,SAACpH,GAAD,OAAWA,EAAML,QAAQ,MAGzCtC,WAAa,GAGbC,gBAAkB,CACd,CACI,GAAO,EACP,YAAgB,aAChB,YAAgB,eAChB,MAAU,OAEd,CACI,GAAO,EACP,YAAgB,OAChB,YAAgB,cAChB,MAAU,KAhDP,E,iEAsDG,IAAD,OACjBlC,IAAMC,IAAI,2CACTC,MAAK,SAAAC,GACF,IAAI8B,EAAa,GACbhE,EAAc,EACdiE,EAAkB,GAClBhE,EAAmB,EACvBiC,EAAShE,KAAKA,KAAKiE,SAAQ,SAAAuB,GACM,UAA1BA,EAAUC,aACTK,EAAWvF,KAAK,CACZ,GAAOiF,EAAUvE,GACjB,YAAgBuE,EAAUsK,mBAC1B,YAAgBtK,EAAUI,mBAC1B,MAAUJ,EAAUE,eAExB5D,GAA4B0D,EAAUE,cACN,cAA1BF,EAAUC,cAChBM,EAAgBxF,KAAK,CACjB,GAAOiF,EAAUvE,GACjB,YAAgBuE,EAAUsK,mBAC1B,YAAgBtK,EAAUI,mBAC1B,MAAUJ,EAAUE,eAExB3D,GAAsCyD,EAAUE,iBAGxD,EAAKjH,MAAM2P,mBAAmBtI,GAC9B,EAAK5D,SAAS,CAAE4D,WAAaA,IAC7B,EAAK5D,SAAS,CAAEJ,YAAcA,IAC9B,EAAKrD,MAAMqQ,wBAAwB/I,GACnC,EAAK7D,SAAS,CAAE6D,gBAAkBA,IAClC,EAAK7D,SAAS,CAAEH,iBAAmBA,OAEtC8C,OAAM,SAAAC,GAGH,EAAKrG,MAAMoH,yBAAyBC,WAAW7B,SAAQ,SAAAuB,GACvBA,EAAUE,gBAE1C,EAAKjH,MAAMoH,yBAAyBE,gBAAgB9B,SAAQ,SAAAuB,GAClBA,EAAUE,gBAEpD,EAAKxD,SAAS,CAAE4D,WAAa,EAAKrH,MAAMoH,yBAAyBC,aACjE,EAAK5D,SAAS,CAAE6D,gBAAkB,EAAKtH,MAAMoH,yBAAyBE,uB,2CAK1E,GAAG9F,KAAKvB,MAAMoH,aAAe7F,KAAKxB,MAAMoH,yBAAyBC,WAAY,CACzE,IAAIhE,EAAc,EAClB7B,KAAKxB,MAAMoH,yBAAyBC,WAAW7B,SAAQ,SAAAsK,GACnDzM,GAA4ByM,EAAMvI,SAEtC/F,KAAKiC,SAAS,CAAEJ,YAAcA,IAC9B7B,KAAKiC,SAAS,CAAE4D,WAAa7F,KAAKxB,MAAMoH,yBAAyBC,aAErE,GAAG7F,KAAKvB,MAAMqH,kBAAoB9F,KAAKxB,MAAMoH,yBAAyBE,gBAAiB,CACnF,IAAIhE,EAAmB,EACvB9B,KAAKxB,MAAMoH,yBAAyBE,gBAAgB9B,SAAQ,SAAA+K,GACxDjN,GAAsCiN,EAAUhJ,SAEpD/F,KAAKiC,SAAS,CAAEH,iBAAmBA,IACnC9B,KAAKiC,SAAS,CAAE6D,gBAAkB9F,KAAKxB,MAAMoH,yBAAyBE,qB,+BAmSpE,IAAD,OAKCgK,EAAa,CACfhH,WAAY,GACZnC,WAAY,IAEVgG,EAAW,CACbxL,QAAS,OAET6H,WAAY,SACZ1C,OAAQ,IAENyJ,EAAe,CACjB/Q,gBAAiB,QACjBmD,MAAQ,UACRlD,YAAa,UACb2J,MAAQ,IACRtC,OAAS,GACTuD,UAAW,GACXmG,aAAc,QAEZC,EAAiB,CACnBjR,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,GACTuD,UAAW,GACXmG,aAAc,QAEZE,EAAe,CACjB/O,QAAS,OACTiI,eAAgB,SAChBJ,WAAY,UAEVmH,EAAc,CAChBnR,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,GACTuD,UAAW,GACXmG,aAAc,QAElB,OACA,6BACA,kBAAClP,EAAA,EAAD,CAAOwB,MA9CM,CACTsG,MAAO,OACPxG,aAAc,KA6Cd,yBAAKE,MAAOqK,GACR,kBAAC/J,EAAA,EAAD,CAAYN,MAAOwN,EAAY3N,MAAM,UAAUW,QAAQ,MAAvD,WAIJ,kBAACsN,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAAC9G,aAAW,gBAC7B,kBAAC+G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGzQ,KAAKvB,MAAMgR,QAAQvC,KAAI,SAACwD,GAAD,OACtB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAO1P,GACZ2O,MAAOe,EAAOf,MACdrN,MAAO,CAAEoN,SAAUgB,EAAOhB,WAE1B,2BAAIgB,EAAO7R,WAGf,kBAAC8R,EAAA,EAAD,CAAWC,IAAI,kBAAkBjB,MAAM,OAAOrN,MAAO,CAAEoN,SAAU,OACjE,kBAACiB,EAAA,EAAD,CAAWC,IAAI,oBAAoBjB,MAAM,OAAOrN,MAAO,CAAEoN,SAAU,SAGvE,kBAACmB,EAAA,EAAD,KACG7Q,KAAKvB,MAAMoH,WAAWqH,KAAI,SAAC4D,GAC1B,OACA,kBAACL,EAAA,EAAD,CAAUM,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAGL,IAAKE,EAAII,MAClD,EAAKzS,MAAMgR,QAAQvC,KAAI,SAACwD,GACvB,IAAMlI,EAAQsI,EAAIJ,EAAO1P,IACzB,OACE,kBAAC2P,EAAA,EAAD,CAAWC,IAAKF,EAAO1P,GAAI2O,MAAOe,EAAOf,OACpCe,EAAOd,QAA2B,kBAAVpH,EAAqBkI,EAAOd,OAAOpH,GAASA,MAI7E,kBAACmI,EAAA,EAAD,CAAWhB,MAAM,OAAOiB,IAAI,aACxB,yBAAKtO,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAOyN,EAAc/O,GAAI8P,EAAI9P,GAAI+I,QAAU,SAACM,GAAD,OAAO,EAAK2E,gBAAgB3E,EAAGyG,EAAI9P,MACrG,kBAAC4B,EAAA,EAAD,CAAYT,MAAM,WAAlB,WAMZ,kBAACwO,EAAA,EAAD,CAAWhB,MAAM,OAAOiB,IAAI,eACxB,yBAAKtO,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO2N,EAAgBjP,GAAI8P,EAAI9P,GAAI+I,QAAU,SAACM,GAAD,OAAO,EAAK6E,kBAAkB7E,EAAGyG,EAAI9P,MACzG,kBAAC,IAAD,aAOnBhB,KAAKvB,MAAMoP,SACR,kBAAC4C,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACQ5I,MAAOxI,KAAKvB,MAAMuP,qBAClBhN,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAE+L,qBAAuB1G,EAAMiB,OAAOC,YAIhE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMwP,qBAClBjN,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAEgM,qBAAuB3G,EAAMiB,OAAOC,YAIhE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMyP,eAClBlN,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEiM,eAAiB5G,EAAMiB,OAAOC,YAK9D,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,yBAAK7O,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO6N,EAAapG,QAAS/J,KAAKoO,iBACzD,kBAACxL,EAAA,EAAD,CAAYT,MAAM,WAAlB,WAMZ,kBAACwO,EAAA,EAAD,KACI,yBAAKrO,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO2N,EAAgBlG,QAAS/J,KAAK8N,mBAC5D,kBAAClL,EAAA,EAAD,CAAYT,MAAM,WAAlB,cAQhB,kBAACsO,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMuP,qBAClBhN,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAE+L,qBAAuB1G,EAAMiB,OAAOC,YAIhE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMwP,qBAClBjN,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAEgM,qBAAuB3G,EAAMiB,OAAOC,YAIhE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMyP,eAClBlN,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAEiM,eAAiB5G,EAAMiB,OAAOC,YAK9D,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,yBAAK7O,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO6N,EAAapG,QAAS/J,KAAKqP,gBACzD,kBAACzM,EAAA,EAAD,CAAYT,MAAM,WAAlB,UAMZ,kBAACwO,EAAA,EAAD,OAGR,kBAACF,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWQ,QAAS,IACpB,kBAACR,EAAA,EAAD,CAAWhB,MAAM,OAAO0B,QAAS,GAAG,4CACpC,kBAACV,EAAA,EAAD,CAAWhB,MAAM,SAAQ,gCAAM3P,KAAKvB,MAAMoD,YAAYsG,QAAQ,UAM9E,kBAACrH,EAAA,EAAD,KACI,yBAAKwB,MAAOqK,GACR,kBAAC/J,EAAA,EAAD,CAAYN,MAAOwN,EAAY3N,MAAM,UAAUW,QAAQ,MAAvD,gBAIJ,kBAACsN,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAAC9G,aAAW,gBAC3B,kBAAC+G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGzQ,KAAKvB,MAAMgR,QAAQvC,KAAI,SAACwD,GAAD,OACtB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAO1P,GACZ2O,MAAOe,EAAOf,MACdrN,MAAO,CAAEoN,SAAUgB,EAAOhB,WAE1B,2BAAIgB,EAAO7R,WAGf,kBAAC8R,EAAA,EAAD,CAAWC,IAAI,sBAAsBjB,MAAM,OAAOrN,MAAO,CAAEoN,SAAU,OACrE,kBAACiB,EAAA,EAAD,CAAWC,IAAI,wBAAwBjB,MAAM,OAAOrN,MAAO,CAAEoN,SAAU,SAG3E,kBAACmB,EAAA,EAAD,KACG7Q,KAAKvB,MAAMqH,gBAAgBoH,KAAI,SAAC4D,GAC/B,OACE,kBAACL,EAAA,EAAD,CAAUM,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAGL,IAAKE,EAAII,MACpD,EAAKzS,MAAMgR,QAAQvC,KAAI,SAACwD,GACvB,IAAMlI,EAAQsI,EAAIJ,EAAO1P,IACzB,OACE,kBAAC2P,EAAA,EAAD,CAAWC,IAAKF,EAAO1P,GAAI2O,MAAOe,EAAOf,OACtCe,EAAOd,QAA2B,kBAAVpH,EAAqBkI,EAAOd,OAAOpH,GAASA,MAI3E,kBAACmI,EAAA,EAAD,CAAWhB,MAAM,OAAOiB,IAAI,iBACxB,yBAAKtO,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAOyN,EAAc/O,GAAI8P,EAAI9P,GAAI+I,QAAU,SAACM,GAAD,OAAO,EAAK8E,oBAAoB9E,EAAGyG,EAAI9P,MACzG,kBAAC4B,EAAA,EAAD,CAAYT,MAAM,WAAlB,WAMZ,kBAACwO,EAAA,EAAD,CAAWhB,MAAM,OAAOiB,IAAI,mBACxB,yBAAKtO,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO2N,EAAgBjP,GAAI8P,EAAI9P,GAAI+I,QAAU,SAACM,GAAD,OAAO,EAAK+E,sBAAsB/E,EAAGyG,EAAI9P,MAC7G,kBAAC,IAAD,aAOvBhB,KAAKvB,MAAMoP,SACR,kBAAC4C,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACQ5I,MAAOxI,KAAKvB,MAAMiQ,yBAClB1N,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAEyM,yBAA2BpH,EAAMiB,OAAOC,YAIpE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMkQ,yBAClB3N,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAE0M,yBAA2BrH,EAAMiB,OAAOC,YAIpE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMmQ,mBAClB5N,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAE2M,mBAAqBtH,EAAMiB,OAAOC,YAKlE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,yBAAK7O,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO6N,EAAapG,QAAS/J,KAAK8O,qBACzD,kBAAClM,EAAA,EAAD,CAAYT,MAAM,WAAlB,WAMZ,kBAACwO,EAAA,EAAD,KACI,yBAAKrO,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO2N,EAAgBlG,QAAS/J,KAAKwO,uBAC5D,kBAAC5L,EAAA,EAAD,CAAYT,MAAM,WAAlB,cAQpB,kBAACsO,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMiQ,yBAClB1N,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAEyM,yBAA2BpH,EAAMiB,OAAOC,YAIpE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMkQ,yBAClB3N,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACT,EAAKrF,SAAS,CAAE0M,yBAA2BrH,EAAMiB,OAAOC,YAIpE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,kBAACC,EAAA,EAAD,CACI5I,MAAOxI,KAAKvB,MAAMmQ,mBAClB5N,GAAG,iBACH8B,QAAQ,WACRyG,SAAY,SAACjC,GACLoC,MAAMpC,EAAMiB,OAAOC,QACnB,EAAKvG,SAAS,CAAE2M,mBAAqBtH,EAAMiB,OAAOC,YAKlE,kBAACmI,EAAA,EAAD,CAAWQ,QAAS,GAChB,yBAAK7O,MAAO4N,GACR,kBAACpG,EAAA,EAAD,CAAQhH,QAAQ,WAAWR,MAAO6N,EAAapG,QAAS/J,KAAKsP,oBACzD,kBAAC1M,EAAA,EAAD,CAAYT,MAAM,WAAlB,UAMZ,kBAACwO,EAAA,EAAD,OAGJ,kBAACF,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWQ,QAAS,IACpB,kBAACR,EAAA,EAAD,CAAWhB,MAAM,OAAO0B,QAAS,GAAG,iDACpC,kBAACV,EAAA,EAAD,CAAWhB,MAAM,SAAQ,gCAAM3P,KAAKvB,MAAMqD,iBAAiBqG,QAAQ,e,GAvwB/DxG,aAqyBbsE,aANf,SAAyBxH,GACrB,MAAO,CACHmH,yBAA2BnH,EAAMmH,6BAfd,SAAA8H,GACvB,MAAO,CACHS,mBAAqB,SAACmD,GAAD,OAAmB5D,EAAS,CAC7C5F,KAAM,gBACNjC,WAAayL,KAEjBzC,wBAA0B,SAAC0C,GAAD,OAAwB7D,EAAS,CACvD5F,KAAM,qBACNhC,gBAAkByL,QAWftL,CAA6C2H,GC9yB1C1H,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAS,CACLC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAcL,EAAMM,OAAOC,QAC3BjE,UAAW,CACPkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAEjCE,MAAO,CACHC,QAASZ,EAAMS,QAAQ,GACvBzF,QAAS,OACToF,SAAU,OACVS,cAAe,UAEnBC,YAAa,CACTX,OAAQ,KAEZkL,cAAe,CACX5I,MAAO,OACPzH,QAAS,OACTiI,eAAgB,cCvBNlD,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAS,CACLC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAcL,EAAMM,OAAOC,QAC3BjE,UAAW,CACPkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAEjCE,MAAO,CACHC,QAASZ,EAAMS,QAAQ,GACvBzF,QAAS,OACToF,SAAU,OACVS,cAAe,UAEnBC,YAAa,CACTX,OAAQ,S,cCdVnD,G,kDACF,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IASViT,wBAA0B,SAAAnK,GACtB,EAAKrF,SAAS,CAAEyP,kBAAoBpK,EAAMiB,OAAOC,QACjD,IAkBImJ,GAfsB,KAAvBrK,EAAMiB,OAAOC,MACQ,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,MAEhB,KAAlC,EAAK/J,MAAMmT,mBACW,EAEA7J,SAAS,EAAKtJ,MAAMmT,mBAAoB,MAE9B,KAAhC,EAAKnT,MAAMoT,iBACS,EAEA9J,SAAS,EAAKtJ,MAAMoT,iBAAkB,KAG7D,EAAK5P,SAAS,CAAE0P,gBAAkBA,IAClC,EAAKnT,MAAMsT,mBAAmBH,IAhCf,EAmCnBI,yBAA2B,SAAAzK,GACvB,EAAKrF,SAAS,CAAE2P,mBAAqBtK,EAAMiB,OAAOC,QAClD,IAkBImJ,GAfsB,KAAvBrK,EAAMiB,OAAOC,MACS,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,MAElB,KAAjC,EAAK/J,MAAMiT,kBACU,EAEA3J,SAAS,EAAKtJ,MAAMiT,kBAAmB,MAE5B,KAAhC,EAAKjT,MAAMoT,iBACS,EAEA9J,SAAS,EAAKtJ,MAAMoT,iBAAkB,KAG7D,EAAK5P,SAAS,CAAE0P,gBAAkBA,IAClC,EAAKnT,MAAMsT,mBAAmBH,IAzDf,EA4DnBK,uBAAyB,SAAA1K,GACrB,EAAKrF,SAAS,CAAE4P,iBAAmBvK,EAAMiB,OAAOC,QAChD,IAoBImJ,GAjBsB,KAAvBrK,EAAMiB,OAAOC,MACO,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,MAEjD,EAAK/J,MAAMmT,mBACW7J,SAAS,EAAKtJ,MAAMmT,mBAAoB,MAK9D,EAAKnT,MAAMiT,kBACU3J,SAAS,EAAKtJ,MAAMiT,kBAAmB,KAM/D,EAAKzP,SAAS,CAAE0P,gBAAkBA,IAClC,EAAKnT,MAAMsT,mBAAmBH,IAlF9B,EAAKlT,MAAQ,CACTiT,kBAAmB,EACnBE,mBAAoB,EACpBC,iBAAkB,EAClBF,gBAAiB,GANN,E,qDAwFf,OACI,yBAAK3Q,GAAG,aAAaD,UAAU,sBAC3B,kBAACsB,EAAA,EAAD,CAAMtB,UAAU,sBACZ,kBAACwB,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,UAAhF,cAGA,kBAACqP,EAAA,EAAD,MACA,yBAAKrP,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,gBAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMiT,kBAClBnI,SAAUvJ,KAAKyR,wBACf9H,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,iBAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMmT,mBAClBrI,SAAUvJ,KAAK+R,yBACfpI,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,eAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMoT,iBAClBtI,SAAUvJ,KAAKgS,uBACfrI,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,iBACX,kBAACqP,EAAA,EAAD,OAEJ,yBAAKrP,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,eACxE,gDAER,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,eAC5E,iCAAS,2BAAIf,KAAKvB,MAAMkT,0B,GAnJ/BhQ,aCAnB0Q,IDsKSpM,YAAQ,MATG,SAAAyH,GACtB,MAAO,CACHoE,mBAAqB,SAACQ,GAAD,OAAwB5E,EAAS,CAClD5F,KAAM,oBACN6J,gBAAkBW,QAKfrM,CAAiC9C,I,kDCrK5C,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IAQV+T,iBAAmB,SAAAjL,GACf,EAAKrF,SAAS,CAAEuQ,WAAalL,EAAMiB,OAAOC,QAC1C,IACIgK,EAAa,EAWb7R,GATA6R,EADsB,KAAvBlL,EAAMiB,OAAOC,MACC,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,MAEZ,KAA/B,EAAK/J,MAAMgU,gBACQ,EAEA1K,SAAS,EAAKtJ,MAAMgU,gBAAiB,KAG3D,EAAKxQ,SAAS,CAAEtB,aAAeA,IAC/B,EAAKnC,MAAMkU,gBAAgBF,EAAY7R,IAzBxB,EA4BnBgS,sBAAwB,SAAArL,GACpB,EAAKrF,SAAS,CAAEwQ,gBAAkBnL,EAAMiB,OAAOC,QAC/C,IACIgK,EAAa,EAWb7R,GAVsB,KAAvB2G,EAAMiB,OAAOC,MACM,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,MAG/CgK,EADyB,KAA1B,EAAK/T,MAAM+T,WACG,EAEAzK,SAAS,EAAKtJ,MAAM+T,WAAY,KAGjD,EAAKvQ,SAAS,CAAEtB,aAAeA,IAC/B,EAAKnC,MAAMkU,gBAAgBF,EAAY7R,IA1CvC,EAAKlC,MAAQ,CACTgU,gBAAiB,EACjBD,WAAY,EACZ7R,aAAc,GALH,E,qDAgDf,OACI,yBAAKK,GAAG,UAAUD,UAAU,sBACxB,kBAACsB,EAAA,EAAD,CAAMtB,UAAU,mBACZ,kBAACwB,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,UAAhF,WAGA,kBAACqP,EAAA,EAAD,MACA,yBAAKrP,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,uBAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMgU,gBAClBlJ,SAAUvJ,KAAK2S,sBACfhJ,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,QAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM+T,WAClBjJ,SAAUvJ,KAAKuS,iBACf5I,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,iBACX,kBAACqP,EAAA,EAAD,OAEJ,yBAAKrP,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,eACxE,6CAER,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,eAC5E,iCAAS,2BAAIf,KAAKvB,MAAMkC,uB,GA7FlCgB,cCChBiR,IDgHS3M,YAAQ,MAVI,SAAAyH,GACvB,MAAO,CACHgF,gBAAkB,SAACG,EAA2BC,GAA5B,OAA4DpF,EAAS,CACnF5F,KAAM,iBACNiL,uBAAyBF,EACzBG,yBAA2BF,QAKxB7M,CAAkCoM,I,kDC/G7C,WAAY7T,GAAQ,IAAD,8BACf,cAAMA,IAaVyU,qBAAuB,SAAA3L,GACnB,EAAKrF,SAAS,CAAEiR,eAAiB5L,EAAMiB,OAAOC,QAC9C,IA0CI5H,GAnCsB,KAAvB0G,EAAMiB,OAAOC,MACK,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,MAEpB,KAA3B,EAAK/J,MAAM0U,YACI,EAEApL,SAAS,EAAKtJ,MAAM0U,YAAa,MAEjB,KAA/B,EAAK1U,MAAM2U,gBACQ,EAEArL,SAAS,EAAKtJ,MAAM2U,gBAAiB,MAEzB,KAA/B,EAAK3U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM4U,gBAAiB,MAE3B,KAA7B,EAAK5U,MAAM6U,cACM,EAEAvL,SAAS,EAAKtJ,MAAM6U,cAAe,MAEvB,KAA7B,EAAK7U,MAAM8U,cACM,EAEAxL,SAAS,EAAKtJ,MAAM8U,cAAe,MAEf,KAArC,EAAK9U,MAAM+U,sBACc,EAEAzL,SAAS,EAAKtJ,MAAM+U,sBAAuB,KAGvE,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IA5Db,EA+DnB8S,kBAAoB,SAAApM,GAChB,EAAKrF,SAAS,CAAEkR,YAAc7L,EAAMiB,OAAOC,QAC3C,IACI2K,EAAc,EAOdA,EADsB,KAAvB7L,EAAMiB,OAAOC,MACE,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,IAgC/C,IAAI5H,GA9B6B,KAA9B,EAAKnC,MAAMyU,eACO,EAEAnL,SAAS,EAAKtJ,MAAMyU,eAAgB,KA2BpBC,GAzBH,KAA/B,EAAK1U,MAAM2U,gBACQ,EAEArL,SAAS,EAAKtJ,MAAM2U,gBAAiB,MAEzB,KAA/B,EAAK3U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM4U,gBAAiB,MAE3B,KAA7B,EAAK5U,MAAM6U,cACM,EAEAvL,SAAS,EAAKtJ,MAAM6U,cAAe,MAEvB,KAA7B,EAAK7U,MAAM8U,cACM,EAEAxL,SAAS,EAAKtJ,MAAM8U,cAAe,MAEf,KAArC,EAAK9U,MAAM+U,sBACc,EAEAzL,SAAS,EAAKtJ,MAAM+U,sBAAuB,KAGvE,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IA7Gb,EAgHnB+S,sBAAwB,SAAArM,GACpB,EAAKrF,SAAS,CAAEmR,gBAAkB9L,EAAMiB,OAAOC,QAC/C,IAEI4K,EAAkB,EAMlBA,EADsB,KAAvB9L,EAAMiB,OAAOC,MACM,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,IAgCnD,IAAI5H,GA9B6B,KAA9B,EAAKnC,MAAMyU,eACO,EAEAnL,SAAS,EAAKtJ,MAAMyU,eAAgB,MAE3B,KAA3B,EAAKzU,MAAM0U,YACI,EAEApL,SAAS,EAAKtJ,MAAM0U,YAAa,KAsBAC,GApBjB,KAA/B,EAAK3U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM4U,gBAAiB,MAE3B,KAA7B,EAAK5U,MAAM6U,cACM,EAEAvL,SAAS,EAAKtJ,MAAM6U,cAAe,MAEvB,KAA7B,EAAK7U,MAAM8U,cACM,EAEAxL,SAAS,EAAKtJ,MAAM8U,cAAe,MAEf,KAArC,EAAK9U,MAAM+U,sBACc,EAEAzL,SAAS,EAAKtJ,MAAM+U,sBAAuB,KAGvE,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IA9Jb,EAiKnBgT,sBAAwB,SAAAtM,GACpB,EAAKrF,SAAS,CAAEoR,gBAAkB/L,EAAMiB,OAAOC,QAC/C,IAGI6K,EAAkB,EAKlBA,EADsB,KAAvB/L,EAAMiB,OAAOC,MACM,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,IAgCnD,IAAI5H,GA9B6B,KAA9B,EAAKnC,MAAMyU,eACO,EAEAnL,SAAS,EAAKtJ,MAAMyU,eAAgB,MAE3B,KAA3B,EAAKzU,MAAM0U,YACI,EAEApL,SAAS,EAAKtJ,MAAM0U,YAAa,MAEjB,KAA/B,EAAK1U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM2U,gBAAiB,KAiBUC,GAfrC,KAA7B,EAAK5U,MAAM6U,cACM,EAEAvL,SAAS,EAAKtJ,MAAM6U,cAAe,MAEvB,KAA7B,EAAK7U,MAAM8U,cACM,EAEAxL,SAAS,EAAKtJ,MAAM8U,cAAe,MAEf,KAArC,EAAK9U,MAAM+U,sBACc,EAEAzL,SAAS,EAAKtJ,MAAM+U,sBAAuB,KAGvE,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IA/Mb,EAkNnBiT,oBAAsB,SAAAvM,GAClB,EAAKrF,SAAS,CAAEqR,cAAgBhM,EAAMiB,OAAOC,QAC7C,IAII8K,EAAgB,EAIhBA,EADsB,KAAvBhM,EAAMiB,OAAOC,MACI,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,IAgCjD,IAAI5H,GA9B6B,KAA9B,EAAKnC,MAAMyU,eACO,EAEAnL,SAAS,EAAKtJ,MAAMyU,eAAgB,MAE3B,KAA3B,EAAKzU,MAAM0U,YACI,EAEApL,SAAS,EAAKtJ,MAAM0U,YAAa,MAEjB,KAA/B,EAAK1U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM2U,gBAAiB,MAE3B,KAA7B,EAAK3U,MAAM6U,cACQ,EAEAvL,SAAS,EAAKtJ,MAAM4U,gBAAiB,KAY4BC,GAVvD,KAA7B,EAAK7U,MAAM8U,cACM,EAEAxL,SAAS,EAAKtJ,MAAM8U,cAAe,MAEf,KAArC,EAAK9U,MAAM+U,sBACc,EAEAzL,SAAS,EAAKtJ,MAAM+U,sBAAuB,KAGvE,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IAhQb,EAmQnBkT,oBAAsB,SAAAxM,GAClB,EAAKrF,SAAS,CAAEsR,cAAgBjM,EAAMiB,OAAOC,QAC7C,IAAI0K,EAAiB,EACjBC,EAAc,EACdC,EAAkB,EAElBE,EAAgB,EAChBC,EAAgB,EAGhBA,EADsB,KAAvBjM,EAAMiB,OAAOC,MACI,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,IAG7C0K,EAD6B,KAA9B,EAAKzU,MAAMyU,eACO,EAEAnL,SAAS,EAAKtJ,MAAMyU,eAAgB,IAGrDC,EAD0B,KAA3B,EAAK1U,MAAM0U,YACI,EAEApL,SAAS,EAAKtJ,MAAM0U,YAAa,IAG/CC,EAD8B,KAA/B,EAAK3U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM2U,gBAAiB,IAGvDE,EAD4B,KAA7B,EAAK7U,MAAM6U,cACM,EAEAvL,SAAS,EAAKtJ,MAAM6U,cAAe,IAYvD,IAAI1S,EAAgBsS,EAAiBC,EAAcC,GAVnB,KAA7B,EAAK3U,MAAM8U,cACQ,EAEAxL,SAAS,EAAKtJ,MAAM4U,gBAAiB,KAO4BC,EAAgBC,GAL/D,KAArC,EAAK9U,MAAM+U,sBACc,EAEAzL,SAAS,EAAKtJ,MAAM+U,sBAAuB,KAGvE,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IAjTb,EAoTnBmT,4BAA8B,SAAAzM,GAC1B,EAAKrF,SAAS,CAAEuR,sBAAwBlM,EAAMiB,OAAOC,QACrD,IAAI0K,EAAiB,EACjBC,EAAc,EACdC,EAAkB,EAElBE,EAAgB,EAChBC,EAAgB,EAChBC,EAAwB,EAExBA,EADsB,KAAvBlM,EAAMiB,OAAOC,MACY,EAEAT,SAAST,EAAMiB,OAAOC,MAAO,IAGrD0K,EAD6B,KAA9B,EAAKzU,MAAMyU,eACO,EAEAnL,SAAS,EAAKtJ,MAAMyU,eAAgB,IAGrDC,EAD0B,KAA3B,EAAK1U,MAAM0U,YACI,EAEApL,SAAS,EAAKtJ,MAAM0U,YAAa,IAG/CC,EAD8B,KAA/B,EAAK3U,MAAM4U,gBACQ,EAEAtL,SAAS,EAAKtJ,MAAM2U,gBAAiB,IAGvDE,EAD4B,KAA7B,EAAK7U,MAAM6U,cACM,EAEAvL,SAAS,EAAKtJ,MAAM6U,cAAe,IAGnDC,EAD4B,KAA7B,EAAK9U,MAAM8U,cACM,EAEAxL,SAAS,EAAKtJ,MAAM8U,cAAe,IAOvD,IAAI3S,EAAgBsS,EAAiBC,EAAcC,GALX,KAArC,EAAK3U,MAAM+U,sBACQ,EAEAzL,SAAS,EAAKtJ,MAAM4U,gBAAiB,KAE4BC,EAAgBC,EAAgBC,EACvH,EAAKvR,SAAS,CAAErB,cAAgBA,IAChC,EAAKpC,MAAMiV,iBAAiB7S,IAhW5B,EAAKnC,MAAQ,CACTyU,eAAgB,EAChBC,YAAa,EACbC,gBAAiB,EACjBC,gBAAiB,EACjBC,cAAe,EACfC,cAAe,EACfC,sBAAuB,EACvB5S,cAAe,GAVJ,E,qDAsWf,OACI,yBAAKI,GAAG,WAAWD,UAAU,sBACzB,kBAACsB,EAAA,EAAD,CAAMtB,UAAU,oBACZ,kBAACwB,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,UAAhF,YAGA,kBAACqP,EAAA,EAAD,MACA,yBAAKrP,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,YAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAMyU,eAClB3J,SAAUvJ,KAAKiT,qBACftJ,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,SAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM0U,YAClB5J,SAAUvJ,KAAK0T,kBACf/J,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,aAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM2U,gBAClB7J,SAAUvJ,KAAK2T,sBACfhK,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,aAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM4U,gBAClB9J,SAAUvJ,KAAK4T,sBACfjK,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,WAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM6U,cAClB/J,SAAUvJ,KAAK6T,oBACflK,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,WAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM8U,cAClBhK,SAAUvJ,KAAK8T,oBACfnK,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,SAAhF,qBAGA,kBAACsI,EAAA,EAAD,CAAa6I,WAAS,EAACnR,UAAU,UACjC,kBAACoR,GAAA,EAAD,CAAYC,QAAQ,8BACpB,kBAAC9I,EAAA,EAAD,CACItI,GAAG,4BACHwH,MAAOxI,KAAKvB,MAAM+U,sBAClBjK,SAAUvJ,KAAK+T,4BACfpK,eAAgB,kBAACC,EAAA,EAAD,CAAgBrG,SAAS,SAAzB,SAIxB,yBAAKxC,UAAU,iBACX,kBAACqP,EAAA,EAAD,OAEJ,yBAAKrP,UAAU,eACX,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,eACxE,8CAER,kBAAC6B,EAAA,EAAD,CAAY6K,UAAU,KAAK3K,QAAQ,YAAYX,MAAM,UAAU8P,QAAM,EAAClR,UAAU,eAC5E,iCAAS,2BAAIf,KAAKvB,MAAMmC,wB,GAzdjCe,c,IA4eRsE,YAAQ,MATI,SAAAyH,GACvB,MAAO,CACH+F,iBAAmB,SAACO,GAAD,OAAsBtG,EAAS,CAC9C5F,KAAM,kBACNlH,cAAgBoT,QAKb/N,CAAkC2M,I,mBCjf3CqB,I,yDACJ,WAAYzV,GAAQ,IAAD,8BACjB,cAAMA,IAcR0V,YAAc,SAAA5M,GACZ,IAII5G,EAJAiR,EAAkB,EAAKnT,MAAM2V,uBAAuBxC,gBACpD/Q,EAAgB,EAAKpC,MAAM2V,uBAAuBvT,cAClDmS,EAAyB,EAAKvU,MAAM2V,uBAAuBpB,uBAC3DC,EAA2B,EAAKxU,MAAM2V,uBAAuBnB,yBAE7DoB,EAAmB,EACnBC,EAAuB,EAC3B3T,EAAWqS,EAAyBnS,EACpC,EAAKqB,SAAS,CAAEvB,SAAWA,IACJ,IAApBiR,IACDyC,EAAgC,GAAX1T,EAAiBiR,EAAmB,IACzD0C,EAAsE,IAA5CrB,EAA2BpS,GAAuB+Q,EAAmB,IAC/F,EAAK1P,SAAS,CAAEmS,iBAAmBA,EAAiBjM,QAAQ,KAC5D,EAAKlG,SAAS,CAAEoS,qBAAuBA,EAAqBlM,QAAQ,OA3BtE,EAAK1J,MAAQ,CACXiC,SAAU,EACV0T,iBAAkB,EAClBC,qBAAsB,GALP,E,qDAmCjB,IAAMnS,EAAY,CAChBlD,gBAAiB,UACjBmD,MAAQ,SAEJyK,EAAc,CAClB5N,gBAAiB,UACjBsH,OAAQ,GACRsC,MAAO,IAEH0L,EAAY,CAChBhO,OAAQ,GACRsC,MAAO,IAST,OACE,yBAAK7H,UAAU,QACb,kBAAC+I,EAAA,EAAD,CAAQhH,QAAQ,WAAWiH,QAAS/J,KAAKkU,YAAa5R,MATtC,CAClBtD,gBAAiB,UACjBmD,MAAQ,QACRyG,MAAQ,IACRtC,OAAS,KAML,kBAAC1D,EAAA,EAAD,CACET,MAAM,UACNW,QAAQ,MAFV,OAOF,kBAACT,EAAA,EAAD,CAAMC,MAAOJ,EAAWnB,UAAU,oBAChC,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,WAAS,EACTC,QAAQ,iBAEN,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CACA7B,UAAU,gBACVoB,MAAM,UACNU,cAAY,EACZC,QAAQ,SAJR,YAQA,kBAACF,EAAA,EAAD,CACAT,MAAM,UACNW,QAAQ,MAFR,IAIE9C,KAAKvB,MAAMiC,WAGjB,kBAAC8B,EAAA,EAAD,CAAMG,MAAI,GACN,kBAAC0K,EAAA,EAAD,CAAQ/K,MAAOsK,GACf,kBAAC,KAAD,CAAiBtK,MAAOgS,SAMpC,kBAACjS,EAAA,EAAD,CAAMC,MAAOJ,EAAWnB,UAAU,oBAChC,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,WAAS,EACTC,QAAQ,iBAEN,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CACA7B,UAAU,gBACVoB,MAAM,UACNU,cAAY,EACZC,QAAQ,SAJR,uBAQA,kBAACF,EAAA,EAAD,CACAT,MAAM,UACNW,QAAQ,MAEP9C,KAAKvB,MAAM2V,iBAJZ,MAOJ,kBAAC5R,EAAA,EAAD,CAAMG,MAAI,GACN,kBAAC0K,EAAA,EAAD,CAAQ/K,MAAOsK,GACf,kBAAC,KAAD,CAAiBtK,MAAOgS,SAMpC,kBAACjS,EAAA,EAAD,CAAMC,MAAOJ,EAAWnB,UAAU,oBAChC,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,WAAS,EACTC,QAAQ,iBAEN,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CACA7B,UAAU,gBACVoB,MAAM,UACNU,cAAY,EACZC,QAAQ,SAJR,2BAQA,kBAACF,EAAA,EAAD,CACAT,MAAM,UACNW,QAAQ,MAEP9C,KAAKvB,MAAM4V,qBAJZ,MAOJ,kBAAC7R,EAAA,EAAD,CAAMG,MAAI,GACN,kBAAC0K,EAAA,EAAD,CAAQ/K,MAAOsK,GACf,kBAAC,KAAD,CAAiBtK,MAAOgS,c,GAtJrB3S,cAuKRsE,aANf,SAAyBxH,GACvB,MAAO,CACL0V,uBAAyB1V,EAAM0V,0BAIK,KAAzBlO,CAA+BgO,I,OCpK5B/N,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAS,CACLC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAcL,EAAMM,OAAOC,QAC3BjE,UAAW,CACPkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAEjC2N,KAAM,CACFpT,QAAS,OACTiI,eAAgB,eAChB6D,SAAU,Y,gICCZuH,I,OCRD,IACEC,GAAA,EACEC,GAAA,EACE,KAEFC,GAAA,EAGJ,IACEF,GAAA,EACEC,GAAA,EACE,KAEFC,GAAA,EAGJ,IACEF,GAAA,EACEC,GAAA,EACE,KAEFC,GAAA,EAQJC,GAAA,EASA,IACEH,GAAA,EACEC,GAAA,EACI,KAEJC,GAAA,EAGJ,IACEF,GAAA,EACEC,GAAA,EACE,KAEFC,GAAA,ED3CSzO,aAAW,SAACC,GAAD,MAAY,CACvCoO,KAAM,CACJpT,QAAS,QAEXuF,QAAS,CACPmO,aAAc,IAEhBC,YAAY,aACV3T,QAAS,OACT6H,WAAY,SACZI,eAAgB,WAChBrC,QAAS,SACNZ,EAAMM,OAAOC,SAElBqO,OAAQ,CACNC,OAAQ7O,EAAM6O,OAAOC,OAAS,EAC9BC,WAAY/O,EAAMgP,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlP,EAAMgP,YAAYE,OAAOC,MACjCC,SAAUpP,EAAMgP,YAAYI,SAASC,iBAGzCC,YAAa,CACX3M,WAxBgB,IAyBhBF,MAAM,eAAD,OAzBW,IAyBX,OACLsM,WAAY/O,EAAMgP,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlP,EAAMgP,YAAYE,OAAOC,MACjCC,SAAUpP,EAAMgP,YAAYI,SAASG,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChB1U,QAAS,QAEXD,MAAO,CACLmF,SAAU,GAEZyP,YAAa,CACXvS,SAAU,WACVwS,WAAY,SACZnN,MA3CgB,IA4ChBsM,WAAY/O,EAAMgP,YAAYC,OAAO,QAAS,CAC5CC,OAAQlP,EAAMgP,YAAYE,OAAOC,MACjCC,SAAUpP,EAAMgP,YAAYI,SAASG,kBAGzCM,iBAAiB,aACfC,UAAW,SACXf,WAAY/O,EAAMgP,YAAYC,OAAO,QAAS,CAC5CC,OAAQlP,EAAMgP,YAAYE,OAAOC,MACjCC,SAAUpP,EAAMgP,YAAYI,SAASC,gBAEvC5M,MAAOzC,EAAMS,QAAQ,IACpBT,EAAM+P,YAAYC,GAAG,MAAQ,CAC5BvN,MAAOzC,EAAMS,QAAQ,KAGzBJ,aAAcL,EAAMM,OAAOC,QAC3BN,QAAS,CACPC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEZ9D,UAAW,CACTkE,WAAYR,EAAMS,QAAQ,GAC1BC,cAAeV,EAAMS,QAAQ,IAE/BE,MAAO,CACLC,QAASZ,EAAMS,QAAQ,GACvBzF,QAAS,OACToF,SAAU,OACVS,cAAe,UAEjBC,YAAa,CACXX,OAAQ,UAIG,SAAS8P,KACtB,IAAMC,EAAU7B,KADoB,EAEZ8B,IAAMC,UAAS,GAFH,6BASXC,YAAKH,EAAQvP,MAAOuP,EAAQpP,aE5GxC,gBAAAwP,GAAG,OAChB,kBAAC,IAAD,CAAeC,SAAUC,cACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,KAAMC,OAAQ,SAAAtY,GAAK,OAAI,kBAAC,GAAD,iBAAiBA,EAAjB,CAAwBuY,aAAc,UACjF,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,CAAC,WAAYC,OAAQ,SAAAtY,GAAK,OAAI,kBAAC,GAAD,iBAAiBA,EAAjB,CAAwBuY,aAAc,gBACvF,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,CAAC,gBAAiBC,OAAQ,SAAAtY,GAAK,OAAI,kBAAC,GAAD,iBAAiBA,EAAjB,CAAwBuY,aAAc,qBAC5F,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,CAAC,0BAA2BC,OAAQ,SAAAtY,GAAK,OAAI,kBAAC,GAAD,iBAAiBA,EAAjB,CAAwBuY,aAAc,+BACtG,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,CAAC,wBAAyBC,OAAQ,SAAAtY,GAAK,OAAI,kBAAC,GAAD,iBAAiBA,EAAjB,CAAwBuY,aAAc,6BACpG,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,CAAC,wBAAyBC,OAAQ,SAAAtY,GAAK,OAAI,kBAAC,GAAD,iBAAiBA,EAAjB,CAAwBuY,aAAc,gCCDtFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aClBAC,GAAe,CACjB1F,gBAAiB,EACjB/Q,cAAe,EACfmS,uBAAwB,EACxBC,yBAA0B,GAkBfsE,GAfC,WAAmC,IAAlC7Y,EAAiC,uDAAzB4Y,GAAcE,EAAW,uCACxCC,EAAQ,eAAO/Y,GAWrB,MATmB,sBAAhB8Y,EAAOzP,KACN0P,EAAS7F,gBAAkB4F,EAAO5F,gBACZ,oBAAhB4F,EAAOzP,KACb0P,EAAS5W,cAAgB2W,EAAO3W,cACV,mBAAhB2W,EAAOzP,OACb0P,EAASzE,uBAAyBwE,EAAOxE,uBACzCyE,EAASxE,yBAA2BuE,EAAOvE,0BAGxCwE,GCnBLH,GAAe,CACjBtS,eAAgB,IAaLuS,GAVC,WAAmC,IAAlC7Y,EAAiC,uDAAzB4Y,GAAcE,EAAW,uCACxCC,EAAQ,eAAO/Y,GAMrB,MAJmB,4CAAhB8Y,EAAOzP,OACN0P,EAASzS,eAAiBwS,EAAO9O,gBAG9B+O,GCXLH,GAAe,CACjBxR,WAAa,GACbC,gBAAkB,IAePwR,GAZC,WAAmC,IAAlC7Y,EAAiC,uDAAzB4Y,GAAcE,EAAW,uCACxCC,EAAQ,eAAO/Y,GAQrB,MANmB,kBAAhB8Y,EAAOzP,KACN0P,EAAS3R,WAAa0R,EAAO1R,WACP,uBAAhB0R,EAAOzP,OACb0P,EAAS1R,gBAAkByR,EAAOzR,iBAG/B0R,GCHIC,GANKC,aAAgB,CAChCvD,uBAAyBwD,GACzB7S,eAAiB8S,GACjBhS,yBAA2BiS,KCIzBC,GAAQC,aAAYN,IAE1BO,IAASlB,OACP,kBAAC,IAAD,CAAeJ,SAAUC,cACvB,kBAAC,IAAD,CAAUmB,MAAQA,IAChB,kBAAC,GAAD,QAGJG,SAASC,eAAe,SL+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvU,MAAK,SAAAwU,GACJA,EAAaC,gBAEd3T,OAAM,SAAAC,GACL9C,QAAQ8C,MAAMA,EAAM2T,c","file":"static/js/main.c38e7514.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Line, Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\n// import '../css/Stock.css'\nimport '../css/Dashboard.css'\n\nclass Projection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: {\n                labels: [2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2029],\n                datasets: [\n                    {\n                        label: 'Net Worth',\n                        fill: true,\n                        lineTension: 0,\n                        backgroundColor: '#364059',\n                        borderColor: '#364059',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#364059',\n                        pointBackgroundColor: '#ffff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#364059',\n                        pointHoverBorderColor: '#364059',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: [80000, 85000, 91000, 98000, 108000, 118000, 129000, 140000, 118000, 129000, 140000]\n                    }\n                ]\n            },\n        }\n    }\n\n    componentDidUpdate() {\n        this.getData()\n    }\n\n    getData() {\n        var values = this.state.values\n        var currentYear = (new Date()).getFullYear()\n        var labels = []\n        for (var i=0; i<10; i++) {\n            labels.push(currentYear)\n            currentYear++\n        }\n        var totalPrinciple = this.props.totalPrinciple\n        var currentNetWorth = this.props.netWorth\n        var cashflow = this.props.totalRevenue - this.props.totalExpenses\n        var data = []\n        for (var j=0; j<10; j++) {\n            data.push(currentNetWorth)\n            currentNetWorth = currentNetWorth + cashflow + totalPrinciple \n        }\n        values.labels = labels\n        values.datasets[0].data = data\n        return values\n    }\n\n    render() {\n        const paperStyle = {\n            height: 440,\n            width: 840,\n            padding: 20,\n            marginBottom: 30\n        }\n\n        return(\n            <Paper \n                // style={paperStyle}\n                className='paperStyleLine'\n            >\n                <div>\n                    <Line \n                        data={this.state.values}\n                        id='render'\n                        options={{\n                            title:{\n                                display:true,\n                                text:'Net Worth Projection',\n                                fontSize:25\n                            },\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend:{\n                                display: false,\n                            }\n                        }}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Projection;","import React, { Component } from 'react';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport '../css/Dashboard.css'\n\nclass SideStats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            netWorth: '845000',\n            totalAssets: '1845000',\n            totalLiabilities: '1000000',\n        }\n    }\n\n    componentWillMount() {\n        console.log(this.props.netWorth, this.props.totalAssets, this.props.totalLiabilities)\n        this.setState({ netWorth : this.props.netWorth })\n        this.setState({ totalAssets : this.props.totalAssets })\n        this.setState({ totalLiabilities : this.props.totalLiabilities })\n    }\n\n    componentDidUpdate() {\n        if(this.state.netWorth !== this.props.netWorth || this.state.totalAssets !== this.props.totalAssets || this.state.totalLiabilities !== this.props.totalLiabilities) {\n            console.log(this.props.netWorth, this.props.totalAssets, this.props.totalLiabilities)\n            this.setState({ netWorth : this.props.netWorth })\n            this.setState({ totalAssets : this.props.totalAssets })\n            this.setState({ totalLiabilities : this.props.totalLiabilities })\n        }\n    }\n\n    render() {\n        const cardStyle = {\n            backgroundColor: '#f0f0f0',\n            color : '#364059',\n            marginBottom: 25\n        }\n        const cardStyleMain = {\n            backgroundColor: '#364059',\n            color : 'white',\n            marginBottom: 25\n        }\n\n        return(\n            <div className='rootStatsStyle'>\n                <Card style={cardStyleMain} id='stockCardSideStats'>\n                    <CardContent>\n                        <Grid container justify=\"space-between\">\n                            <Grid item>\n                                <Typography\n                                className='AnalysisTitle'\n                                color=\"inherit\"\n                                gutterBottom\n                                variant=\"body2\"\n                                >\n                                NET WORTH\n                                </Typography>\n                                <Typography\n                                color=\"inherit\"\n                                variant=\"h3\"\n                                >\n                                    $ {this.state.netWorth}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n                <Card style={cardStyle} id='stockCardSideStats'>\n                    <CardContent>\n                        <Grid container justify=\"space-between\">\n                            <Grid item>\n                                <Typography\n                                className='AnalysisTitle'\n                                color=\"inherit\"\n                                gutterBottom\n                                variant=\"body2\"\n                                >\n                                TOTAL ASSETS\n                                </Typography>\n                                <Typography\n                                color=\"inherit\"\n                                variant=\"h3\"\n                                >\n                                    $ {this.state.totalAssets}    \n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n                <Card style={cardStyle} id='stockCardSideStats'>\n                    <CardContent>\n                        <Grid\n                        container\n                        justify=\"space-between\"\n                        >\n                            <Grid item>\n                                <Typography\n                                className='AnalysisTitle'\n                                color=\"inherit\"\n                                gutterBottom\n                                variant=\"body2\"\n                                >\n                                TOTAL LIABILITIES\n                                </Typography>\n                                <Typography\n                                color=\"inherit\"\n                                variant=\"h3\"\n                                >\n                                    $ {this.state.totalLiabilities}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default SideStats;","import React, { Component } from 'react';\nimport { Line, Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\nimport '../css/Dashboard.css'\n\nclass Cashflow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tempData: [],\n            chartData:{\n                labels: [\n                    'Revenue', \n                    'Expenses', \n                ],\n                datasets:[\n                  {\n                    label:'Amount',\n                    data:[\n                      7500,\n                      4900,\n                    ],\n                    backgroundColor:[\n                      'rgba(54, 162, 235, 0.6)',\n                      'rgba(75, 192, 192, 0.6)',\n                    ]\n                  }\n                ]\n            },\n        }\n    }\n\n    componentWillMount(){\n        this.getData()\n    }\n\n    componentDidUpdate() {\n        this.getData()\n    }\n\n    getData() {\n        var chartData = this.state.chartData\n        chartData.datasets[0].data = [this.props.totalRevenue, this.props.totalExpenses]\n        return chartData\n    }\n\n    render() {\n        const paperStyleBar = {\n            height: 340,\n            width: 540,\n            padding: 20,\n            marginBottom: 30\n        }\n\n        return(\n            <Paper \n                className='paperStyleBar' \n                // style={paperStyleBar}\n            >\n                <div>\n                    <HorizontalBar\n                        data={this.getData()}\n                        options={{\n                            title:{\n                                display:true,\n                                text:'Cashflow',\n                                fontSize:25\n                            },\n                            scales: {\n                                xAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend:{\n                                display:false,\n                            }\n                        }}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Cashflow;","import React, { Component } from 'react';\nimport { Line, Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\nimport '../css/Dashboard.css'\n\nclass Investment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            investment: {},\n            chartData:{\n                labels: [\n                    'Real Estate', \n                    'Stocks', \n                    'Cash'\n                ],\n                datasets:[\n                  {\n                    data:[\n                        50000,\n                        15000,\n                        4000,\n                    ],\n                    backgroundColor:[\n                        'rgba(255, 159, 64, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(255, 99, 132, 0.6)'\n                    ]\n                  }\n                ]\n            },\n        }\n    }\n\n    componentWillMount() {\n        this.setState({ investment : this.props.investment })\n    }\n\n    componentDidUpdate(){\n        if(this.state.investment !== this.props.investment) {\n            this.setState({ investment : this.props.investment })\n            this.getData()\n            console.log(\"done\")\n        }\n    }\n\n    getData() {\n        var chartData = this.state.chartData\n        chartData.labels = Object.keys(this.props.investment)\n        chartData.datasets[0].data = Object.values(this.props.investment)\n        return chartData\n    }\n\n    render() {\n        const paperStylePie = {\n            height: 340,\n            width: 580,\n            padding: 20,\n            marginBottom: 30\n        }\n\n        return(\n            <Paper\n                // style={paperStylePie}\n                className='paperStylePie'    \n            >\n                <Pie\n                    data={this.getData()}\n                    options={{\n                        title:{\n                            display:true,\n                            text:'Investment',\n                            fontSize:25\n                        },\n                        legend:{\n                            display:true,\n                            position: \"right\"\n                        }\n                    }}\n                />\n            </Paper>\n        )\n    }\n\n\n}\n\nexport default Investment;","import React, { Component } from 'react';\nimport Projection from './Projection'\nimport SideStats from './SideStats'\nimport Cashflow from './Cashflow'\nimport Investment from './Investment'\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport '../css/Dashboard.css'\n\nclass DashboardContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalAssets: 0,\n            totalLiabilities: 0,\n            netWorth: 0,\n            totalRevenue: 0,\n            totalExpenses: 0,\n            totalPrinciple: 0,\n            properties : [],\n            financialAssets : [],\n            financialLiabilities : [],\n            investment: {\n                \"Real Estate\" : 0\n            }\n        }\n    }\n\n    componentWillMount() {\n        var properties = []\n        var financialAssets = []\n        var financialLiabilities = []\n        var investment = this.state.investment\n        var totalAssets = 0\n        var totalLiabilities = 0\n        var totalRevenue = 0\n        var totalExpenses = 0\n        var totalPrinciple = 0\n\n        axios.get(\"http://localhost:3000/api/v1/properties\")\n        .then(response => {\n            response.data.data.forEach(property => {\n                console.log(property)\n                totalAssets = totalAssets + property.propertyPrice\n                totalLiabilities = totalLiabilities + (property.propertyPrice - property.propertyDownPayment)\n                totalPrinciple = totalPrinciple + property.propertyPrinciple\n                investment['Real Estate'] = investment['Real Estate'] + property.propertyDownPayment + property.propertyClosingCosts + property.propertyRehabCosts\n                totalRevenue = totalRevenue + property.propertyRent\n                totalExpenses = totalExpenses + property.propertyMortgage + property.propertyInsurance + property.propertyTaxes + property.propertyMiscExpenses\n            })\n            this.setState({ totalRevenue : totalRevenue })\n            this.setState({ totalExpenses : totalExpenses })\n        })\n        .catch(error => {\n            properties = this.props.RealEstateData.propertiesList\n            properties.forEach(property => {\n                console.log(property)\n                totalAssets = totalAssets + property.price\n                totalLiabilities = totalLiabilities + (property.price - property.downPayment)\n                investment['Real Estate'] = investment['Real Estate'] + property.investment\n                totalRevenue = totalRevenue + property.rent\n                totalExpenses = totalExpenses + property.mortgage + property.insurance + property.taxes + property.miscExpenses\n            })\n            this.setState({ totalRevenue : totalRevenue })\n            this.setState({ totalExpenses : totalExpenses })\n        })\n\n        axios.get(\"http://localhost:3000/api/v1/financials\")\n        .then(response => {\n            response.data.data.forEach(financial => {\n                if(financial.accountType === \"Asset\") {\n                    financialAssets.push(financial)\n                } else if(financial.accountType === \"Liability\") {\n                    financialLiabilities.push(financial)\n                }\n            })\n            financialAssets.forEach(financial => {\n                totalAssets = totalAssets + financial.accountValue\n                if( !(Object.keys(investment).includes(financial.accountDescription)) ) {\n                    investment[`${financial.accountDescription}`] = financial.accountValue\n                } else {\n                    investment[`${financial.accountDescription}`] = investment[`${financial.accountDescription}`] + financial.accountValue\n                }\n            })\n            financialLiabilities.forEach(financial => {\n                totalLiabilities = totalLiabilities + financial.accountValue\n            })\n            \n            var netWorth = totalAssets - totalLiabilities\n            this.setState({ netWorth : netWorth })\n            this.setState({ investment : investment })\n            this.setState({ totalAssets : totalAssets })\n            this.setState({ totalLiabilities : totalLiabilities })\n        })\n        .catch(error => {\n            financialAssets = this.props.FinancialInstitutionData.rowsAssets\n            financialLiabilities = this.props.FinancialInstitutionData.rowsLiabilities\n            financialAssets.forEach(financial => {\n                totalAssets = totalAssets + financial.Value\n                if( !(Object.keys(investment).includes(financial.Description)) ) {\n                    investment[`${financial.Description}`] = financial.Value\n                } else {\n                    investment[`${financial.Description}`] = investment[`${financial.Description}`] + financial.Value\n                }\n            })\n            financialLiabilities.forEach(financial => {\n                totalLiabilities = totalLiabilities + financial.Value\n            })\n            var netWorth = totalAssets - totalLiabilities\n            this.setState({ netWorth : netWorth })\n            this.setState({ investment : investment })\n            this.setState({ totalAssets : totalAssets })\n            this.setState({ totalLiabilities : totalLiabilities })\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='contentStyleTop'>\n                    <Projection {...this.state} />\n                    <SideStats {...this.state} />\n                </div>\n                <div className='contentStyleBottom'>\n                    <Cashflow {...this.state} />\n                    <Investment {...this.state} />\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        RealEstateData : state.RealEstateData,\n        FinancialInstitutionData : state.FinancialInstitutionData\n    };\n}\n\nexport default connect(mapStateToProps)(DashboardContent);","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport DashboardContent from './DashboardContent';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}))\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n            \n            <Grid item xs={12} md={12} lg={12}>\n            {/* <Paper className={fixedHeightPaper}>\n                \n            </Paper> */}\n                <DashboardContent />\n            </Grid>\n            \n            {/* <Grid item xs={12} md={4} lg={3}>\n            <Paper className={fixedHeightPaper}>\n                \n            </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                \n            </Paper>\n            </Grid> */}\n        </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Card, CardContent, Grid, Typography, Avatar, FormHelperText } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Line } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios'\nimport '../css/Stock.css'\n\nclass StockQuery extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prevClose: 0,\n            hundredDayHigh: 0,\n            hundredDayLow: 0,\n            pastSeven: '+0.00',\n            pastThirty: '+0.00',\n            pastHundred: '+0.00',\n            symbol: 'Stock',\n            date: [],\n            marketValue: [],\n            values: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Stock',\n                        fill: false,\n                        lineTension: 0,\n                        backgroundColor: '#364059',\n                        borderColor: '#364059',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#364059',\n                        pointBackgroundColor: '#ffff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#364059',\n                        pointHoverBorderColor: '#364059',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: []\n                    }\n                ]\n            },\n            options: {\n                scales: {\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Market Value'\n                        }\n                    }],\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Date'\n                        }\n                    }]\n                }\n            }\n        }\n    }\n\n    handleClick = event => {\n        var stockSymbol = document.getElementById(\"stock-symbol\").value\n        // axios({\n        //     \"method\":\"GET\",\n        //     \"url\":\"http://autoc.finance.yahoo.com/autoc?query=google&callback=YAHOO.Finance.SymbolSuggest.ssCallback&lang=en&region=1\",\n        //     \"header\":{\n        //         // 'X-Requested-With': 'XMLHttpRequest',\n        //         \"Access-Control-Allow-Origin\": \"http://localhost:3000\"\n        //     },\n        //     \"params\":{\n        //         \"query\": stockSymbol,\n        //     }\n        // })\n        // .then((response)=>{\n        //     console.log(response)\n        // })\n        // .catch((error)=>{\n        //     console.log(error)\n        // })\n\n        axios({\n          \"method\":\"GET\",\n          \"url\":\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=value&outputsize=compact&apikey=value\",\n          \"params\":{\n            \"apikey\": \"V7JOOUFM53910Y4Y\",\n            \"symbol\": stockSymbol\n          }\n        })\n        .then((response)=>{\n            console.log(response)\n            var symbol = stockSymbol\n            var date = []\n            var marketValue = []\n            var hundredDayHigh = -1\n            var hundredDayLow = 100000000\n            for (var key in response.data['Time Series (Daily)']) {\n                date.unshift(key)\n                marketValue.unshift(response.data['Time Series (Daily)'][key]['4. close'])\n                if(parseFloat(response.data['Time Series (Daily)'][key]['4. close']) > hundredDayHigh ) {\n                    hundredDayHigh = parseFloat(response.data['Time Series (Daily)'][key]['4. close'])\n                } else if(parseFloat(response.data['Time Series (Daily)'][key]['4. close']) < hundredDayLow) {\n                    hundredDayLow = parseFloat(response.data['Time Series (Daily)'][key]['4. close'])\n                }\n            }\n            var pastSeven = 0\n            var pastSevenStr = ''\n            var pastThirty = 0\n            var pastThirtyStr = ''\n            var pastHundred = 0\n            var pastHundredStr = ''\n            if(marketValue[marketValue.length - 1] > marketValue[marketValue.length - 7]) {\n                pastSeven = (marketValue[marketValue.length - 1] / marketValue[marketValue.length - 7]).toFixed(2)\n                pastSevenStr = '+' + pastSeven\n            } else {\n                pastSeven = (marketValue[marketValue.length - 7] / marketValue[marketValue.length - 1]).toFixed(2)\n                pastSevenStr = '-' + pastSeven\n            }\n            if(marketValue[marketValue.length - 1] > marketValue[marketValue.length - 14]) {\n                pastThirty = (marketValue[marketValue.length - 1] / marketValue[marketValue.length - 14]).toFixed(2)\n                pastThirtyStr = '+' + pastThirty\n            } else {\n                pastThirty = (marketValue[marketValue.length - 14] / marketValue[marketValue.length - 1]).toFixed(2)\n                pastThirtyStr = '-' + pastThirty\n            }\n            if(marketValue[marketValue.length - 1] > marketValue[marketValue.length - 14]) {\n                pastHundred = (marketValue[marketValue.length - 1] / marketValue[0]).toFixed(2)\n                pastHundredStr = '+' + pastHundred\n            } else {\n                pastHundred = (marketValue[0] / marketValue[marketValue.length - 1]).toFixed(2)\n                pastHundredStr = '-' + pastHundred\n            }\n            this.setState({ prevClose : parseFloat(marketValue[marketValue.length - 1]).toFixed(2) })\n            this.setState({ hundredDayHigh : hundredDayHigh.toFixed(2) })\n            this.setState({ hundredDayLow : hundredDayLow.toFixed(2) })\n            this.setState({ pastSeven : pastSevenStr })\n            this.setState({ pastThirty : pastThirtyStr })\n            this.setState({ pastHundred : pastHundredStr })\n            this.setState({ symbol : symbol })\n            this.setState({ date : date })\n            this.setState({ marketValue : marketValue })\n            this.getChartData()\n        })\n        .catch((error)=>{\n          console.log(error)\n        })\n    }\n\n    getChartData = (canvas) => {\n        var data = this.state.values\n        data.labels = this.state.date\n        data.datasets[0].label = this.state.symbol\n        data.datasets[0].data = this.state.marketValue\n        return data\n    }\n\n    render() {\n        const cardStyleBottom = {\n            backgroundColor: '#ebebeb',\n            color : '#364059'\n        }\n        const cardStyleSide = {\n            backgroundColor: '#364059',\n            color : 'white',\n            marginBottom: 25\n        }\n        const paperStyle = {\n            height: 480,\n            width: 800,\n            padding: 20,\n            marginBottom: 30\n        }\n        const buttonStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            marginLeft: 5,\n            width : 120,\n            height : 55,\n        }\n        const statsStyle = {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n        const topContentStyle = {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n        const sideStatsStyle = {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-around'\n        }\n\n        return(\n            <div>\n                <div style={topContentStyle}>\n                    <Paper style={paperStyle}>\n                        <div>\n                            <div>\n                                <TextField id=\"stock-symbol\" label=\"Stock Symbol\" variant=\"outlined\" />\n                                <Button variant=\"outlined\" onClick={this.handleClick} style={buttonStyle}>\n                                    <Typography\n                                        color=\"inherit\"\n                                        variant=\"h5\"\n                                    >\n                                        GO\n                                    </Typography>\n                                </Button>\n                            </div>\n                            <div>\n                                <Line \n                                    data={this.getChartData}\n                                    id='render'\n                                    options={this.state.options}\n                                />\n                            </div>\n                        </div>\n                    </Paper>\n                    <div style={sideStatsStyle}>\n                        <Card style={cardStyleSide} className='stockCardSideStats'>\n                            <CardContent>\n                                <Grid\n                                container\n                                justify=\"space-between\"\n                                >\n                                    <Grid item>\n                                        <Typography\n                                        className='AnalysisTitle'\n                                        color=\"inherit\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        >\n                                        PREV CLOSE\n                                        </Typography>\n                                        <Typography\n                                        color=\"inherit\"\n                                        variant=\"h3\"\n                                        >\n                                            $ {this.state.prevClose}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                        <Card style={cardStyleSide} className='stockCardSideStats'>\n                            <CardContent>\n                                <Grid\n                                container\n                                justify=\"space-between\"\n                                >\n                                    <Grid item>\n                                        <Typography\n                                        className='AnalysisTitle'\n                                        color=\"inherit\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        >\n                                        100 DAYS HIGH\n                                        </Typography>\n                                        <Typography\n                                        color=\"inherit\"\n                                        variant=\"h3\"\n                                        >\n                                            $ {this.state.hundredDayHigh}    \n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                        <Card style={cardStyleSide} className='stockCardSideStats'>\n                            <CardContent>\n                                <Grid\n                                container\n                                justify=\"space-between\"\n                                >\n                                    <Grid item>\n                                        <Typography\n                                        className='AnalysisTitle'\n                                        color=\"inherit\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        >\n                                        100 DAYS LOW\n                                        </Typography>\n                                        <Typography\n                                        color=\"inherit\"\n                                        variant=\"h3\"\n                                        >\n                                            $ {this.state.hundredDayLow}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </div>\n                </div>\n                <div style={statsStyle}>\n                    <Card style={cardStyleBottom} className='stockCardAnalysis'>\n                        <CardContent>\n                            <Grid\n                            container\n                            justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography\n                                    className='AnalysisTitle'\n                                    color=\"inherit\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                    >\n                                    PAST 7 DAYS\n                                    </Typography>\n                                    <Typography\n                                    color=\"inherit\"\n                                    variant=\"h3\"\n                                    >\n                                        {this.state.pastSeven}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                    <Card style={cardStyleBottom} className='stockCardAnalysis'>\n                        <CardContent>\n                            <Grid\n                            container\n                            justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography\n                                    className='AnalysisTitle'\n                                    color=\"inherit\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                    >\n                                    PAST 30 DAYS\n                                    </Typography>\n                                    <Typography\n                                    color=\"inherit\"\n                                    variant=\"h3\"\n                                    >\n                                        {this.state.pastThirty}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                    <Card style={cardStyleBottom} className='stockCardAnalysis'>\n                        <CardContent>\n                            <Grid\n                            container\n                            justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography\n                                    className='AnalysisTitle'\n                                    color=\"inherit\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                    >\n                                    PAST 100 DAYS\n                                    </Typography>\n                                    <Typography\n                                    color=\"inherit\"\n                                    variant=\"h3\"\n                                    >\n                                        {this.state.pastHundred}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StockQuery;","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport StockQuery from './StockQuery'\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n        // paddingLeft: theme.spacing(16)\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeightTop: {\n        height: 500,\n    },\n    fixedHeightBottom: {\n        height: 480,\n    },\n}))\n\nexport default function Stocks() {\n    const classes = useStyles();\n    const fixedHeightPaperTop = clsx(classes.paper, classes.fixedHeightTop);\n    const fixedHeightPaperBottom = clsx(classes.paper, classes.fixedHeightBottom);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n                {/* <Paper className={fixedHeightPaperTop}> */}\n                    <StockQuery />\n                {/* </Paper> */}\n            </Grid>\n        </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport '../css/RealEstate.css'\n\nclass AddPropertyPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            propertyType: '',\n            address: '',\n            price: '',\n            downPayment: '',\n            closingCosts: '',\n            rehabCosts: '',\n            principle: '',\n            rent: '',\n            mortgage: '',\n            taxes: '',\n            insurance: '',\n            miscExpenses: '',\n            showErrorAllFields: false\n        }\n    }\n\n    componentWillMount() {\n        if(this.props.popupType === 'EDIT') {\n            this.props.propertiesData.forEach(property => {\n                if(property.id === this.props.editID) {\n                    this.setState({ address : property.address })\n                    this.setState({ propertyType : property.type })\n                    this.setState({ price : property.price })\n                    this.setState({ downPayment : property.downPayment })\n                    this.setState({ closingCosts : property.closingCosts })\n                    this.setState({ rehabCosts : property.rehabCosts })\n                    this.setState({ principle : property.principle })\n                    this.setState({ rent : property.rent })\n                    this.setState({ mortgage : property.mortgage })\n                    this.setState({ taxes : property.taxes })\n                    this.setState({ insurance : property.insurance })\n                    this.setState({ miscExpenses : property.miscExpenses })\n                }\n            })\n        }\n    }\n\n    handleSave = event => {\n        if(this.state.address !== '' && this.state.propertyType !== '' && this.state.price !== '' && this.state.downPayment !== '' && this.state.closingCosts !== '' && this.state.rehabCosts !== '' && this.state.principle !== '' && this.state.rent !== '' && this.state.mortgage !== '' && this.state.taxes !== '' && this.state.insurance !== '' && this.state.miscExpenses !== '') {\n            var actionType = this.props.popupType\n            console.log(actionType)\n            var type = this.state.propertyType\n            var address = this.state.address\n            var price = this.state.price\n            var investment = parseInt(this.state.downPayment, 10) + parseInt(this.state.closingCosts, 10) + parseInt(this.state.rehabCosts, 10)\n            console.log(investment)\n            var totalExpenses = parseInt(this.state.mortgage, 10) + parseInt(this.state.taxes, 10) + parseInt(this.state.insurance, 10) + parseInt(this.state.miscExpenses, 10)\n            console.log(totalExpenses)\n            var totalRevenue = parseInt(this.state.rent, 10) + parseInt(this.state.principle, 10)\n            var cashflow = parseInt(this.state.rent, 10) - totalExpenses\n            var cashOnCash = ((cashflow * 12) / investment) * 100\n            var internalRate = (((totalRevenue - totalExpenses) * 12) / investment) * 100\n            this.props.closePopup(\n                actionType, type, address, parseInt(price, 10), \n                parseInt(this.state.downPayment, 10), parseInt(this.state.closingCosts, 10), parseInt(this.state.rehabCosts, 10), \n                parseInt(this.state.principle, 10), parseInt(this.state.rent, 10), \n                parseInt(this.state.mortgage, 10), parseInt(this.state.taxes, 10), parseInt(this.state.insurance, 10), parseInt(this.state.miscExpenses, 10), \n                investment, cashflow, cashOnCash.toFixed(1), internalRate.toFixed(1)\n            )\n        } else {\n            this.setState({ showErrorAllFields : true })\n        }\n    }\n\n    handleCancel = event => {\n        var actionType = \"cancel\"\n        this.props.closePopup(actionType)\n    }\n\n    handlePropertyChange = event => {\n        this.setState({ propertyType : event.target.value })\n    }\n\n    render(){\n        const buttonStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 200,\n            height : 50\n        }\n        const rightFormStyle = {\n            width : 140,\n            marginLeft: 15\n        }\n        const selectionStyle = {\n            display: 'flex',\n            alignItems: 'center',\n            margin: 10\n        }\n        const typographyStyleLeft = {\n            width: 125,\n            display: 'flex',\n            alignItems: 'center'\n        }\n        const typographyStyleRight = {\n            width: 150,\n            display: 'flex',\n            alignItems: 'center'\n        }\n        const upperContentStyle = {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n        const buttonContainerStyle = {\n            display: 'flex',\n            justifyContent: 'space-around',\n            marginTop: 5\n        }\n        const alertStyle = {\n            width: '45%',\n            height: '15%'\n        }\n        const alertPosition = {\n            display: 'flex',\n            justifyContent: 'center',\n            margin: 15\n        }\n\n        return(\n            <div className='popupRoot'>  \n                <div className='popupInner'>\n                    <div id=\"UpperContent\" style={upperContentStyle}>\n                    <div id=\"leftSideContent\">\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Address: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.address}\n                                onChange = {(event) => { this.setState({ address : event.target.value }) }}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Property Type: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                                <NativeSelect value={this.state.propertyType} onChange={this.handlePropertyChange} >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value={'Single House'}>Single House</option>\n                                <option value={'Duplex'}>Duplex</option>\n                                <option value={'Triplex'}>Triplex</option>\n                                <option value={'Quadruplex'}>Quadruplex</option>\n                                <option value={'Quintuplex'}>Quintuplex</option>\n                                <option value={'Apartment Complex'}>Apartment Complex</option>\n                                </NativeSelect>\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Price: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.price}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ price : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Down Payment: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.downPayment}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ downPayment : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Closing Costs: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.closingCosts}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ closingCosts : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Rehab Costs: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rehabCosts}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ rehabCosts : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div id=\"leftSideContent\">\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Principle (Monthly): \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.principle}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ principle : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Rent: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rent}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ rent : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Mortgage: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.mortgage}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ mortgage : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Taxes: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.taxes}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ taxes : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Insurance: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.insurance}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ insurance : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Misc. Expenses: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.miscExpenses}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ miscExpenses : event.target.value }) \n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                    </div>\n                    </div>\n                    <div style={buttonContainerStyle}>\n                        <Button variant=\"outlined\" style={buttonStyle} onClick={this.handleSave}>\n                            <Typography color=\"inherit\" variant=\"h5\">\n                                Save\n                            </Typography>\n                        </Button>\n                        <Button variant=\"outlined\" style={buttonStyle} onClick={this.handleCancel}>\n                            <Typography color=\"inherit\" variant=\"h5\">\n                                Cancel\n                            </Typography>\n                        </Button>\n                    </div>\n                    {this.state.showErrorAllFields ? \n                        <div style={alertPosition}>\n                            <MuiAlert style={alertStyle} severity=\"error\">Please fill in all fields</MuiAlert>\n                        </div>\n                    : null\n                    }\n                </div>  \n            </div> \n        )\n    }\n}\n\nexport default AddPropertyPopup;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddPropertyPopup from './AddPropertyPopup';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n\nclass RealEstateContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popupType: '',\n            editID: 0,\n            showPopup: false,\n            sqlIndex: 1,\n            propertyCount: 1,\n            propertiesData: [\n                // {\n                //     id: 1,\n                //     propertyCount: 2,\n                //     type: 'Duplex',\n                //     address: '7911 Rue Baribeau, LaSalle, QC',\n                //     price: '500000',\n                //     \n                //     investment: '45000',\n                //     cashflow: '400',\n                //     cashOnCash: '10.4',\n                //     internalRate: '39.8',\n                //     principle: 1300\n                // }\n            ]\n        }\n    }\n\n    componentWillMount() {\n        axios.get('http://localhost:3000/api/v1/properties')\n        .then(response => {\n            console.log(response)\n            var propertyCount = 0\n            var sqlIndex = 0\n            var propertiesData = []\n            for (var i=0; i<response.data.data.length; i++) {\n                var property = response.data.data[i]\n                var investment = property.propertyDownPayment + property.propertyClosingCosts + property.propertyRehabCosts\n                propertiesData.push(\n                    {\n                        id: property.id,\n                        propertyCount: i+1,\n                        type: property.propertyType,\n                        address: property.propertyAddress,\n                        price: property.propertyPrice,\n                        downPayment: property.propertyDownPayment,\n                        closingCosts: property.propertyClosingCosts,\n                        rehabCosts: property.propertyRehabCosts,\n                        investment: investment,\n                        principle: property.propertyPrinciple,\n                        rent: property.propertyRent,\n                        mortgage: property.propertyMortgage,\n                        taxes: property.propertyTaxes,\n                        insurance: property.propertyInsurance,\n                        miscExpenses: property.propertyMiscExpenses,\n                        cashflow: property.propertyCashflow,\n                        cashOnCash: property.propertyCashOnCash,\n                        internalRate: property.propertyInternalRate\n                    }\n                )\n                sqlIndex = property.id\n                propertyCount++\n            }\n            this.setState({ sqlIndex : (parseInt(sqlIndex, 10) + 1) })\n            this.setState({ propertyCount : (propertyCount + 1) })\n            this.setState({ propertiesData : propertiesData })\n            this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n        })\n        .catch(error => {\n            console.log(error)\n            if(this.state.propertiesData !== this.props.RealEstateData.propertiesList) {\n                this.setState({ propertiesData : this.props.RealEstateData.propertiesList })\n                console.log(\"done\")\n            }\n        })\n    }\n\n    togglePopup = event => {  \n        this.setState({ popupType : 'ADD' })\n        this.setState({ showPopup: !this.state.showPopup }); \n    } \n\n    toggleEdit = (e, id) => {  \n        this.setState({ editID : id })\n        this.setState({ popupType : 'EDIT' })\n        this.setState({ showPopup: !this.state.showPopup }); \n    }  \n\n    handleClose = (\n        argActionType, argType, argAddress, argPrice, \n        argDownPayment, argClosingCosts, argRehabCosts, \n        argPrinciple, argRent, \n        argMortgage, argTaxes, argInsurance, argMiscExpenses, \n        argInvestment, argCashflow, argCashOnCash, argInternalRate\n        ) => {\n        if(argActionType === \"ADD\") {\n            var propertiesData = this.state.propertiesData\n            var index = this.state.propertyCount\n            var sqlIndex = this.state.sqlIndex\n            propertiesData.push(\n                {\n                    id: sqlIndex,\n                    propertyCount: index,\n                    type: argType,\n                    address: argAddress,\n                    price: argPrice,\n                    downPayment: argDownPayment,\n                    closingCosts: argClosingCosts,\n                    rehabCosts: argRehabCosts,\n                    investment: argInvestment,\n                    principle: argPrinciple,\n                    rent: argRent,\n                    mortgage: argMortgage,\n                    taxes: argTaxes,\n                    insurance: argInsurance,\n                    miscExpenses: argMiscExpenses,\n                    cashflow: argCashflow,\n                    cashOnCash: argCashOnCash,\n                    internalRate: argInternalRate\n                }\n            )\n            this.setState({ propertiesData : propertiesData })\n            this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n            this.setState({ propertyCount : (index + 1) })\n            this.setState({ sqlIndex : (sqlIndex + 1) })\n\n            axios.post('http://localhost:3000/api/v1/properties', {\n                \"propertyAddress\" : argAddress,\n                \"propertyType\" : argType,\n                \"propertyPrice\" : argPrice,\n                \"propertyDownPayment\" : argDownPayment,\n                \"propertyClosingCosts\" : argClosingCosts,\n                \"propertyRehabCosts\" : argRehabCosts,\n                \"propertyPrinciple\" : argPrinciple,\n                \"propertyRent\" : argRent,\n                \"propertyTotalRevenue\" : argRent,\n                \"propertyMortgage\" : argMortgage,\n                \"propertyTaxes\" : argTaxes,\n                \"propertyInsurance\" : argInsurance,\n                \"propertyMiscExpenses\" : argMiscExpenses,\n                \"propertyCashflow\" : argCashflow,\n                \"propertyCashOnCash\" : argCashOnCash,\n                \"propertyInternalRate\" : argInternalRate\n            })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        } else if(argActionType === \"EDIT\") {\n            console.log(\"edit\")\n            var propertiesData = this.state.propertiesData\n            for (var i=0; i<propertiesData.length; i++) {\n                var property = propertiesData[i]\n                if(property.id === this.state.editID) {\n                    propertiesData[i].type = argType\n                    propertiesData[i].address = argAddress\n                    propertiesData[i].price = argPrice\n                    propertiesData[i].downPayment = argDownPayment\n                    propertiesData[i].closingCosts = argClosingCosts\n                    propertiesData[i].rehabCosts = argRehabCosts\n                    propertiesData[i].investment = argInvestment\n                    propertiesData[i].principle = argPrinciple\n                    propertiesData[i].rent = argRent\n                    propertiesData[i].mortgage = argMortgage\n                    propertiesData[i].taxes = argTaxes\n                    propertiesData[i].insurance = argInsurance\n                    propertiesData[i].miscExpenses = argMiscExpenses\n                    propertiesData[i].cashflow = argCashflow\n                    propertiesData[i].cashOnCash = argCashOnCash\n                    propertiesData[i].internalRate = argInternalRate\n                }\n            }\n\n            this.setState({ propertiesData : propertiesData })\n            this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n\n            var putURL = 'http://localhost:3000/api/v1/properties/' + this.state.editID\n            axios.put(putURL, {\n                \"propertyAddress\" : argAddress,\n                \"propertyType\" : argType,\n                \"propertyPrice\" : argPrice,\n                \"propertyDownPayment\" : argDownPayment,\n                \"propertyClosingCosts\" : argClosingCosts,\n                \"propertyRehabCosts\" : argRehabCosts,\n                \"propertyPrinciple\" : argPrinciple,\n                \"propertyRent\" : argRent,\n                \"propertyTotalRevenue\" : argRent,\n                \"propertyMortgage\" : argMortgage,\n                \"propertyTaxes\" : argTaxes,\n                \"propertyInsurance\" : argInsurance,\n                \"propertyMiscExpenses\" : argMiscExpenses,\n                \"propertyCashflow\" : argCashflow,\n                \"propertyCashOnCash\" : argCashOnCash,\n                \"propertyInternalRate\" : argInternalRate\n            })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n        this.togglePopup()\n    }\n\n    handleDelete = (e, itemID) => {\n        console.log(itemID)\n        var propertiesData = this.state.propertiesData\n        var propertyCount = propertiesData.length\n        this.setState({ propertyCount : propertyCount })\n        propertiesData.forEach(property => {\n            if(itemID == property.propertyCount) {\n                var deleteURL = 'http://localhost:3000/api/v1/properties/'+property.id.toString()\n                axios.delete(deleteURL)\n                .then(response => {\n                    console.log(response)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                propertiesData.splice(( property.propertyCount - 1) , 1)\n            }\n        })\n        var newPropertyCount = 1\n        propertiesData.forEach(property => {\n            property.propertyCount = newPropertyCount\n            newPropertyCount++\n        })\n        this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n        this.setState({ propertiesData : propertiesData })\n    }\n\n    render() {\n        const headStyle = {\n            display: 'flex',\n            justifyContent: 'space-around',\n            flexWrap: 'wrap'\n        }\n        const rootStyle = {\n            width: 345,\n            height: 500,\n            margin: 10\n        }\n        const avatarStyle = {\n            backgroundColor: '#364059',\n        }\n        const mediaStyle = {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        }\n        const buttonStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 200,\n            height : 50\n        }\n        const buttonSpace = {\n            display: 'flex',\n            justifyContent: 'space-around'\n        }\n        const buttonStyleEdit = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 130,\n            height : 40,\n            margin : 10\n        }\n        const buttonStyleDelete = {\n            backgroundColor: '#999999',\n            color : 'white',\n            width : 130,\n            height : 40,\n            margin : 10\n        }\n        const addPropertyStyle = {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '75%'\n        }\n\n        return(\n            <div style={headStyle}>\n                {this.state.propertiesData.map(property => {\n                    return(\n                        <Card style={rootStyle}>\n                        <CardHeader \n                            avatar={\n                                <Avatar aria-label=\"Property 1\" style={avatarStyle}>\n                                    {property.propertyCount}\n                                </Avatar>\n                            }\n                            title={property.type}\n                            subheader={property.address}\n                        />\n                        <CardMedia \n                            style={mediaStyle}\n                            image=\"/static/images/cards/paella.jpg\"\n                            title={property.type}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <Typography>\n                                <b>Price: ${property.price}</b>\n                            </Typography>\n                            <Typography>\n                                <b>Investment: ${property.investment}</b>\n                            </Typography>\n                            <Typography>\n                                <b>Cashflow: ${property.cashflow}</b>\n                            </Typography>\n                            <Typography>\n                                <b>Cash-on-Cash Return: {property.cashOnCash}%</b>\n                            </Typography>\n                            <Typography>\n                                <b>Internal Rate of Return: {property.internalRate}%</b>\n                            </Typography>\n                            </Typography>\n                        </CardContent>\n                        <div style={buttonSpace}>\n                            <Button variant=\"outlined\" style={buttonStyleEdit} onClick={((e) => this.toggleEdit(e, property.id))}>\n                                <Typography\n                                    color=\"inherit\"\n                                    variant=\"h6\"\n                                >\n                                    EDIT\n                                </Typography>\n                            </Button>\n                            <Button id={property.propertyCount} variant=\"outlined\" style={buttonStyleDelete}>\n                                <Typography\n                                    color=\"inherit\"\n                                    variant=\"h6\"\n                                    onClick={((e) => this.handleDelete(e, property.propertyCount))}\n                                >\n                                    DELETE\n                                </Typography>\n                            </Button>\n                        </div>\n                    </Card>\n                    )\n                })}\n                <Card style={rootStyle}>\n                    <CardHeader \n                        avatar={\n                            <Avatar aria-label=\"Property 1\" style={avatarStyle}>\n                                {this.state.propertyCount}\n                            </Avatar>\n                        }\n                        title=\"Property Type\"\n                        subheader=\"Address\"\n                    />\n                    <CardContent style={addPropertyStyle}>\n                        <Button variant=\"outlined\" style={buttonStyle} onClick={this.togglePopup}>\n                            <Typography\n                                color=\"inherit\"\n                                variant=\"h5\"\n                            >\n                                + ADD\n                            </Typography>\n                        </Button>\n                    </CardContent>\n                </Card>\n                {this.state.showPopup ? \n                    <AddPropertyPopup \n                        {...this.state}\n                        closePopup={this.handleClose}\n                    />\n                    : null\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateDashboardRealEstateInvestment : (argPropertiesData) => dispatch({\n            type: \"UPDATE_DASHBOARD_REAL_ESTATE_INVESTMENT\",\n            propertiesData : argPropertiesData\n        })\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        RealEstateData : state.RealEstateData\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RealEstateContent);","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport RealEstateContent from './RealEstateContent';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 560,\n    },\n}))\n\nexport default function RealEstate() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} lg={12}>\n                    <RealEstateContent />\n                </Grid>\n            </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport { Typography, Divider } from '@material-ui/core';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\n\n\nclass BankStatement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editID: 0,\n            showEdit: false,\n            tempID: 0,\n            tempAssetInstitution: '',\n            tempAssetDescription: '',\n            tempAssetValue:'',\n            tempLiabilityInstitution: '',\n            tempLiabilityDescription: '',\n            tempLiabilityValue: '',\n            page: 1,\n            rowsPerPage: 10,\n            totalAssets: 0,\n            totalLiabilities: 0,\n            tempRowsAssets: [],\n            tempRowsLiabilities: [],\n            columns : [\n                { id: 'Institution', label: 'Institution', minWidth: 200 },\n                {\n                    id: 'Description',\n                    label: 'Description',\n                    minWidth: 170,\n                    align: 'left',\n                },\n                {\n                    id: 'Value',\n                    label: 'Value',\n                    minWidth: 170,\n                    align: 'right',\n                    format: (value) => value.toFixed(2),\n                },\n            ],\n            rowsAssets : [\n\n            ],\n            rowsLiabilities : [\n                {\n                    'id' : 4,\n                    'Institution' : 'Desjardins',\n                    'Description' : 'Student Loan',\n                    'Value' : 22400,\n                },\n                {\n                    'id' : 5,\n                    'Institution' : 'CIBC',\n                    'Description' : 'Credit Card',\n                    'Value' : 0,\n                },\n            ]\n        }\n    }\n\n    componentWillMount() {\n        axios.get('http://localhost:3000/api/v1/financials')\n        .then(response => {\n            var rowsAssets = []\n            var totalAssets = 0\n            var rowsLiabilities = []\n            var totalLiabilities = 0\n            response.data.data.forEach(financial => {\n                if(financial.accountType === \"Asset\") {\n                    rowsAssets.push({\n                        'id' : financial.id,\n                        'Institution' : financial.accountInstitution,\n                        'Description' : financial.accountDescription,\n                        'Value' : financial.accountValue\n                    })\n                    totalAssets = totalAssets + financial.accountValue\n                } else if(financial.accountType === 'Liability') {\n                    rowsLiabilities.push({\n                        'id' : financial.id,\n                        'Institution' : financial.accountInstitution,\n                        'Description' : financial.accountDescription,\n                        'Value' : financial.accountValue\n                    })\n                    totalLiabilities = totalLiabilities + financial.accountValue\n                }\n            })\n            this.props.onUpdateRowsAssets(rowsAssets)\n            this.setState({ rowsAssets : rowsAssets })\n            this.setState({ totalAssets : totalAssets })\n            this.props.onUpdateRowsLiabilities(rowsLiabilities)\n            this.setState({ rowsLiabilities : rowsLiabilities })\n            this.setState({ totalLiabilities : totalLiabilities })\n        })\n        .catch(error => {\n            var totalAssets = 0\n            var totalLiabilities = 0\n            this.props.FinancialInstitutionData.rowsAssets.forEach(financial => {\n                totalAssets = totalAssets + financial.accountValue\n            })\n            this.props.FinancialInstitutionData.rowsLiabilities.forEach(financial => {\n                totalLiabilities = totalLiabilities + financial.accountValue\n            })\n            this.setState({ rowsAssets : this.props.FinancialInstitutionData.rowsAssets })\n            this.setState({ rowsLiabilities : this.props.FinancialInstitutionData.rowsLiabilities })\n        })\n    }\n\n    componentDidUpdate() {\n        if(this.state.rowsAssets !== this.props.FinancialInstitutionData.rowsAssets) {\n            var totalAssets = 0\n            this.props.FinancialInstitutionData.rowsAssets.forEach(asset => {\n                totalAssets = totalAssets + asset.Value\n            })\n            this.setState({ totalAssets : totalAssets })\n            this.setState({ rowsAssets : this.props.FinancialInstitutionData.rowsAssets })\n        }\n        if(this.state.rowsLiabilities !== this.props.FinancialInstitutionData.rowsLiabilities) {\n            var totalLiabilities = 0\n            this.props.FinancialInstitutionData.rowsLiabilities.forEach(liability => {\n                totalLiabilities = totalLiabilities + liability.Value\n            })\n            this.setState({ totalLiabilities : totalLiabilities })\n            this.setState({ rowsLiabilities : this.props.FinancialInstitutionData.rowsLiabilities })\n        }\n    }\n\n    togglePopup = event => {\n        this.setState({ showEdit: !this.state.showEdit }); \n    }\n\n    handleAssetCancel = event => {\n        this.setState({ rowsAssets : this.state.tempRowsAssets })\n        this.setState({ tempAssetInstitution : '' })\n        this.setState({ tempAssetDescription : '' })\n        this.setState({ tempAssetValue : '' })\n        this.props.onUpdateRowsAssets(this.state.tempRowsAssets)\n        this.togglePopup()\n    }\n\n    handleAssetSave = event => {\n        var tempRowsAssets = []\n        var totalAssets = 0\n        var done = false\n        this.state.rowsAssets.forEach(asset => {\n            if(asset.id < this.state.tempID) {\n                totalAssets = totalAssets + asset.Value\n                tempRowsAssets.push(asset)\n            } else if ((asset.id > this.state.tempID) && !done){\n                totalAssets = totalAssets + asset.Value + parseInt(this.state.tempAssetValue, 10)\n                tempRowsAssets.push(\n                    {\n                        'id' : this.state.tempID,\n                        'Institution' : this.state.tempAssetInstitution,\n                        'Description' : this.state.tempAssetDescription,\n                        'Value' : parseInt(this.state.tempAssetValue, 10),\n                    }\n                )\n                tempRowsAssets.push(asset)\n                done = true\n            } else {\n                tempRowsAssets.push(asset)\n            }\n        })\n        if(!done) {\n            tempRowsAssets.push(\n                {\n                    'id' : this.state.tempID,\n                    'Institution' : this.state.tempAssetInstitution,\n                    'Description' : this.state.tempAssetDescription,\n                    'Value' : parseInt(this.state.tempAssetValue, 10),\n                }\n            )\n        }\n        var putURL = 'http://localhost:3000/api/v1/financials/' + this.state.tempID.toString()\n        axios.put(putURL, {\n            \"accountType\" : \"Asset\",\n            \"accountInstitution\" : this.state.tempAssetInstitution,\n            \"accountDescription\" : this.state.tempAssetDescription,\n            \"accountValue\" : parseInt(this.state.tempAssetValue, 10)\n        })\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ tempAssetInstitution : '' })\n        this.setState({ tempAssetDescription : '' })\n        this.setState({ tempAssetValue : '' })\n        this.setState({ rowsAssets : tempRowsAssets })\n        this.setState({ totalAssets : totalAssets })\n        this.props.onUpdateRowsAssets(tempRowsAssets)\n        this.togglePopup()\n    }\n\n    handleLiabilityCancel = event => {\n        this.setState({ rowsLiabilities : this.state.tempRowsLiabilities })\n        this.setState({ tempLiabilityInstitution : '' })\n        this.setState({ tempLiabilityDescription : '' })\n        this.setState({ tempLiabilityValue : '' })\n        this.props.onUpdateRowsLiabilities(this.state.tempRowsLiabilities)\n        this.togglePopup()\n    }\n\n    handleLiabilitySave = event => {\n        var tempRowsLiabilities = []\n        var totalLiabilities = 0\n        var done = false\n        this.state.rowsLiabilities.forEach(liability => {\n            if(liability.id < this.state.tempID) {\n                totalLiabilities = totalLiabilities + liability.Value\n                tempRowsLiabilities.push(liability)\n            } else if((liability.id > this.state.tempID) && !done) {\n                totalLiabilities = totalLiabilities + liability.Value + parseInt(this.state.tempLiabilityValue, 10)\n                tempRowsLiabilities.push(\n                    {\n                        'id' : this.state.tempID,\n                        'Institution' : this.state.tempLiabilityInstitution,\n                        'Description' : this.state.tempLiabilityDescription,\n                        'Value' : parseInt(this.state.tempLiabilityValue, 10),\n                    }\n                )\n                tempRowsLiabilities.push(liability)\n                done = true\n            } else {\n                tempRowsLiabilities.push(liability)\n            }\n        })\n        if(!done) {\n            tempRowsLiabilities.push(\n                {\n                    'id' : this.state.tempID,\n                    'Institution' : this.state.tempLiabilityInstitution,\n                    'Description' : this.state.tempLiabilityDescription,\n                    'Value' : parseInt(this.state.tempLiabilityValue, 10),\n                }\n            )\n        }\n        var putURL = 'http://localhost:3000/api/v1/financials/' + this.state.tempID.toString()\n        axios.put(putURL, {\n            \"accountType\" : \"Liability\",\n            \"accountInstitution\" : this.state.tempAssetInstitution,\n            \"accountDescription\" : this.state.tempAssetDescription,\n            \"accountValue\" : parseInt(this.state.tempAssetValue, 10)\n        })\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ tempLiabilityInstitution : '' })\n        this.setState({ tempLiabilityDescription : '' })\n        this.setState({ tempLiabilityValue : '' })\n        this.setState({ rowsLiabilities : tempRowsLiabilities })\n        this.setState({ totalLiabilities : totalLiabilities })\n        this.props.onUpdateRowsLiabilities(tempRowsLiabilities)\n        this.togglePopup()\n    }\n\n    handleAssetEdit  = (e, itemID) => {\n        this.setState({ tempRowsAssets : this.state.rowsAssets })\n        this.setState({ editID : itemID })\n        var tempRowsAssets = []\n        this.state.rowsAssets.forEach(asset => {\n            if(itemID === asset.id) {\n                this.setState({ tempID : asset.id })\n                this.setState({ tempAssetInstitution : asset.Institution })\n                this.setState({ tempAssetDescription : asset.Description })\n                this.setState({ tempAssetValue : asset.Value })\n            } else {\n                tempRowsAssets.push(asset)\n            }\n        })\n        this.setState({ rowsAssets : tempRowsAssets })\n        this.props.onUpdateRowsAssets(tempRowsAssets)\n        this.setState({ showEdit: !this.state.showEdit }); \n    }\n\n    handleAssetDelete = (e, itemID) => {\n        var rowsAssets = this.state.rowsAssets\n        var totalAssets = 0\n        var tempRowsAssets = []\n        rowsAssets.forEach(asset => {\n            if(asset.id !== itemID) {\n                totalAssets = totalAssets + asset.Value\n                tempRowsAssets.push(asset)\n            }\n        })\n        var deleteURL = 'http://localhost:3000/api/v1/financials/' + itemID.toString()\n        axios.delete(deleteURL)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ totalAssets : totalAssets })\n        this.setState({ rowsAssets : tempRowsAssets })\n        this.props.onUpdateRowsAssets(tempRowsAssets)\n    }\n\n    handleLiabilityEdit  = (e, itemID) => {\n        this.setState({ tempRowsLiabilities : this.state.rowsLiabilities })\n        this.setState({ editID : itemID })\n        var tempRowsLiabilities = []\n        this.state.rowsLiabilities.forEach(liability => {\n            if(itemID === liability.id) {\n                this.setState({ tempID : liability.id })\n                this.setState({ tempLiabilityInstitution : liability.Institution })\n                this.setState({ tempLiabilityDescription : liability.Description })\n                this.setState({ tempLiabilityValue : liability.Value })\n            } else {\n                tempRowsLiabilities.push(liability)\n            }\n        })\n        this.setState({ rowsLiabilities : tempRowsLiabilities })\n        this.props.onUpdateRowsLiabilities(tempRowsLiabilities)\n        this.setState({ showEdit: !this.state.showEdit }); \n    }\n\n    handleLiabilityDelete = (e, itemID) => {\n        var rowsLiabilities = this.state.rowsLiabilities\n        var totalLiabilities = 0\n        var tempRowsLiabilities = []\n        rowsLiabilities.forEach(liability => {\n            if(liability.id !== itemID) {\n                totalLiabilities = totalLiabilities + liability.Value\n                tempRowsLiabilities.push(liability)\n            }\n        })\n        var deleteURL = 'http://localhost:3000/api/v1/financials/' + itemID.toString()\n        axios.delete(deleteURL)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ totalLiabilities : totalLiabilities })\n        this.setState({ rowsLiabilities : tempRowsLiabilities })\n        this.props.onUpdateRowsLiabilities(tempRowsLiabilities)\n    }\n\n    handleAddAsset = event => {\n        var rowsAssets = this.state.rowsAssets\n        var totalAssets = this.state.totalAssets\n        var id = rowsAssets.length + this.state.rowsLiabilities.length + 1\n        var value = parseInt(this.state.tempAssetValue, 10)\n        totalAssets = totalAssets + value\n        axios.post('http://localhost:3000/api/v1/financials', {\n            \"accountType\" : \"Asset\",\n            \"accountInstitution\" : this.state.tempAssetInstitution,\n            \"accountDescription\" : this.state.tempAssetDescription,\n            \"accountValue\" : value\n        })\n        .then(response => {\n            id = response.data.data.id\n            console.log('start')\n            rowsAssets.push(\n                {\n                    'id' : id,\n                    'Institution' : this.state.tempAssetInstitution,\n                    'Description' : this.state.tempAssetDescription,\n                    'Value' : value,\n                }\n            )\n            this.setState({ rowsAssets : rowsAssets })\n            this.props.onUpdateRowsAssets(rowsAssets)\n            this.setState({ tempAssetDescription : '' })\n            this.setState({ tempAssetInstitution : '' })\n            this.setState({ tempAssetValue : '' })\n            this.setState({ totalAssets : totalAssets })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    handleAddLiability = event => {\n        var rowsLiabilities = this.state.rowsLiabilities\n        var totalLiabilities = this.state.totalLiabilities\n        var id = rowsLiabilities.length + 1\n        var value = parseInt(this.state.tempLiabilityValue, 10)\n        totalLiabilities = totalLiabilities + value\n        axios.post('http://localhost:3000/api/v1/financials', {\n            \"accountType\" : \"Liability\",\n            \"accountInstitution\" : this.state.tempLiabilityInstitution,\n            \"accountDescription\" : this.state.tempLiabilityDescription,\n            \"accountValue\" : value\n        })\n        .then(response => {\n            id = response.data.data.id\n            rowsLiabilities.push(\n                {\n                    'id' : id,\n                    'Institution' : this.state.tempLiabilityInstitution,\n                    'Description' : this.state.tempLiabilityDescription,\n                    'Value' : value,\n                }\n            )\n            this.setState({ rowsLiabilities : rowsLiabilities })\n            this.props.onUpdateRowsLiabilities(rowsLiabilities)\n            this.setState({ totalLiabilities : totalLiabilities })\n            this.setState({ tempLiabilityDescription : '' })\n            this.setState({ tempLiabilityInstitution : '' })\n            this.setState({ tempLiabilityValue : '' })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        const root = {\n            width: '100%',\n            marginBottom: 35\n        }\n        const marginTypo = {\n            marginLeft: 16,\n            paddingTop: 12\n        }\n        const rootStyle ={\n            display: 'flex',\n            // justifyContent: 'space-between',\n            alignItems: 'center',\n            height: 70\n        }\n        const EditBtnStyle = {\n            backgroundColor: 'white',\n            color : '#364059',\n            borderColor: '#364059',\n            width : 100,\n            height : 35,\n            marginTop: 10,\n            borderRadius: '20px'\n        }\n        const DeleteBtnStyle = {\n            backgroundColor: '#999999',\n            color : 'white',\n            width : 100,\n            height : 35,\n            marginTop: 10,\n            borderRadius: '20px'\n        }\n        const BtnContainer = {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }\n        const AddBtnStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 100,\n            height : 35,\n            marginTop: 10,\n            borderRadius: '20px'\n        }\n        return(\n        <div>\n        <Paper style={root}>\n            <div style={rootStyle}>\n                <Typography style={marginTypo} color=\"inherit\" variant=\"h6\">\n                    Assets\n                </Typography>\n            </div>\n            <Divider />\n            <TableContainer>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {this.state.columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        <b>{column.label}</b>\n                      </TableCell>\n                    ))}\n                    <TableCell key='editHeaderAsset' align='left' style={{ minWidth: 170 }}></TableCell>\n                    <TableCell key='deleteHeaderAsset' align='left' style={{ minWidth: 150 }}></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.rowsAssets.map((row) => {\n                    return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                        {this.state.columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                            </TableCell>\n                          );\n                        })}\n                        <TableCell align='left' key='editAsset'>\n                            <div style={BtnContainer}> \n                                <Button variant=\"outlined\" style={EditBtnStyle} id={row.id} onClick={((e) => this.handleAssetEdit(e, row.id))}>\n                                    <Typography color=\"inherit\">\n                                        Edit\n                                    </Typography>\n                                </Button>\n                            </div>\n                        </TableCell>\n                        <TableCell align='left' key='deleteAsset'>\n                            <div style={BtnContainer}> \n                                <Button variant=\"outlined\" style={DeleteBtnStyle} id={row.id} onClick={((e) => this.handleAssetDelete(e, row.id))}>\n                                    <ClearIcon />\n                                </Button>\n                            </div>\n                        </TableCell>\n                    </TableRow>\n                    );\n                })}\n                {this.state.showEdit ? \n                    <TableRow>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                    value={this.state.tempAssetInstitution}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetInstitution : event.target.value })\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetDescription}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetDescription : event.target.value })\n                                    }}\n                                />    \n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetValue}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        if(!isNaN(event.target.value)) {\n                                            this.setState({ tempAssetValue : event.target.value })\n                                        }\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleAssetSave}>\n                                        <Typography color=\"inherit\">\n                                            SAVE\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={DeleteBtnStyle} onClick={this.handleAssetCancel}>\n                                        <Typography color=\"inherit\">\n                                            CANCEL \n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    : \n                        <TableRow>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetInstitution}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetInstitution : event.target.value })\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetDescription}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetDescription : event.target.value })\n                                    }}\n                                />    \n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetValue}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        if(!isNaN(event.target.value)) {\n                                            this.setState({ tempAssetValue : event.target.value })\n                                        }\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleAddAsset}>\n                                        <Typography color=\"inherit\">\n                                            Add\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                }\n                    <TableRow>\n                        <TableCell rowSpan={2} />\n                        <TableCell align=\"left\" colSpan={1}><b>Total Assets</b></TableCell>\n                        <TableCell align=\"right\"><b>$ {this.state.totalAssets.toFixed(2)}</b></TableCell>\n                    </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n        </Paper>\n        <Paper>\n            <div style={rootStyle}>\n                <Typography style={marginTypo} color=\"inherit\" variant=\"h6\">\n                    Liabilities\n                </Typography>\n            </div>\n            <Divider />\n            <TableContainer>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        {this.state.columns.map((column) => (\n                          <TableCell\n                            key={column.id}\n                            align={column.align}\n                            style={{ minWidth: column.minWidth }}\n                          >\n                            <b>{column.label}</b>\n                          </TableCell>\n                        ))}\n                        <TableCell key='editHeaderLiability' align='left' style={{ minWidth: 170 }}></TableCell>\n                        <TableCell key='deleteHeaderLiability' align='left' style={{ minWidth: 170 }}></TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.rowsLiabilities.map((row) => {\n                        return (\n                          <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                            {this.state.columns.map((column) => {\n                              const value = row[column.id];\n                              return (\n                                <TableCell key={column.id} align={column.align}>\n                                  {column.format && typeof value === 'number' ? column.format(value) : value}\n                                </TableCell>\n                              );\n                            })}\n                            <TableCell align='left' key='editLiability'>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={EditBtnStyle} id={row.id} onClick={((e) => this.handleLiabilityEdit(e, row.id))}>\n                                        <Typography color=\"inherit\">\n                                            Edit\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell align='left' key='deleteLiability'>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={DeleteBtnStyle} id={row.id} onClick={((e) => this.handleLiabilityDelete(e, row.id))}>\n                                        <ClearIcon />\n                                    </Button>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                        );\n                      })}\n                {this.state.showEdit ? \n                    <TableRow>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                    value={this.state.tempLiabilityInstitution}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempLiabilityInstitution : event.target.value })\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempLiabilityDescription}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempLiabilityDescription : event.target.value })\n                                    }}\n                                />    \n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempLiabilityValue}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        if(!isNaN(event.target.value)) {\n                                            this.setState({ tempLiabilityValue : event.target.value })\n                                        }\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleLiabilitySave}>\n                                        <Typography color=\"inherit\">\n                                            SAVE\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={DeleteBtnStyle} onClick={this.handleLiabilityCancel}>\n                                        <Typography color=\"inherit\">\n                                            CANCEL \n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    : \n                    <TableRow>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                value={this.state.tempLiabilityInstitution}\n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                onChange = {(event) => { \n                                    this.setState({ tempLiabilityInstitution : event.target.value })\n                                }}\n                            />\n                        </TableCell>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                value={this.state.tempLiabilityDescription}\n                                id=\"outlined-basic\" \n                                variant=\"outlined\"\n                                onChange = {(event) => { \n                                    this.setState({ tempLiabilityDescription : event.target.value })\n                                }} \n                            />    \n                        </TableCell>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                value={this.state.tempLiabilityValue}\n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ tempLiabilityValue : event.target.value })\n                                    }\n                                }}\n                            />\n                        </TableCell>\n                        <TableCell rowSpan={1}>\n                            <div style={BtnContainer}> \n                                <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleAddLiability}>\n                                    <Typography color=\"inherit\">\n                                        Add\n                                    </Typography>\n                                </Button>\n                            </div>\n                        </TableCell>\n                        <TableCell></TableCell>\n                    </TableRow>\n                }\n                    <TableRow>\n                        <TableCell rowSpan={2} />\n                        <TableCell align=\"left\" colSpan={1}><b>Total Liabilities</b></TableCell>\n                        <TableCell align=\"right\"><b>$ {this.state.totalLiabilities.toFixed(2)}</b></TableCell>\n                    </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateRowsAssets : (argRowsAssets) => dispatch({\n            type: \"UPDATE_ASSETS\",\n            rowsAssets : argRowsAssets\n        }),\n        onUpdateRowsLiabilities : (argRowsLiabilities) => dispatch({\n            type: \"UPDATE_LIABILITIES\",\n            rowsLiabilities : argRowsLiabilities\n        })\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        FinancialInstitutionData : state.FinancialInstitutionData\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankStatement);","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport BankStatement from './BankStatement'\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    paperPosition: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}))\n\nexport default function FinancialInstitution() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} lg={9}>\n                    <BankStatement />\n                </Grid>\n            </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}))\n\nexport default function MortgageCalculator() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n            \n            <Grid item xs={12} md={8} lg={9}>\n            <Paper className={fixedHeightPaper}>\n                \n            </Paper>\n            </Grid>\n            \n            <Grid item xs={12} md={4} lg={3}>\n            <Paper className={fixedHeightPaper}>\n                \n            </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                \n            </Paper>\n            </Grid>\n        </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from 'react-redux';\n\nclass Investment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            downPaymentAmount: 0,\n            closingCostsAmount: 0,\n            rehabCostsAmount: 0,\n            totalInvestment: 0,\n        }\n    }\n\n    handleChangeDownPayment = event => {\n        this.setState({ downPaymentAmount : event.target.value })\n        var downPaymentAmount = 0\n        var closingCostsAmount = 0\n        var rehabCostsAmount = 0\n        if(event.target.value === '') {\n            downPaymentAmount = 0\n        } else {\n            downPaymentAmount = parseInt(event.target.value, 10)\n        }        \n        if(this.state.closingCostsAmount === '') {\n            closingCostsAmount = 0\n        } else {\n            closingCostsAmount = parseInt(this.state.closingCostsAmount, 10)\n        }\n        if(this.state.rehabCostsAmount === '') {\n            rehabCostsAmount = 0\n        } else {\n            rehabCostsAmount = parseInt(this.state.rehabCostsAmount, 10)\n        }\n        var totalInvestment = downPaymentAmount + closingCostsAmount + rehabCostsAmount\n        this.setState({ totalInvestment : totalInvestment })\n        this.props.onUpdateInvestment(totalInvestment)\n    }\n\n    handleChangeClosingCosts = event => {\n        this.setState({ closingCostsAmount : event.target.value })\n        var downPaymentAmount = 0\n        var closingCostsAmount = 0\n        var rehabCostsAmount = 0\n        if(event.target.value === '') {\n            closingCostsAmount = 0\n        } else {\n            closingCostsAmount = parseInt(event.target.value, 10)\n        }     \n        if(this.state.downPaymentAmount === '') {\n            downPaymentAmount = 0\n        } else {\n            downPaymentAmount = parseInt(this.state.downPaymentAmount, 10)\n        }\n        if(this.state.rehabCostsAmount === '') {\n            rehabCostsAmount = 0\n        } else {\n            rehabCostsAmount = parseInt(this.state.rehabCostsAmount, 10)\n        }\n        var totalInvestment = closingCostsAmount + downPaymentAmount + rehabCostsAmount\n        this.setState({ totalInvestment : totalInvestment })\n        this.props.onUpdateInvestment(totalInvestment)\n    }\n\n    handleChangeRehabCosts = event => {\n        this.setState({ rehabCostsAmount : event.target.value })\n        var downPaymentAmount = 0\n        var closingCostsAmount = 0\n        var rehabCostsAmount = 0\n        if(event.target.value === '') {\n            rehabCostsAmount = 0\n        } else {\n            rehabCostsAmount = parseInt(event.target.value, 10)\n        }    \n        if(this.state.closingCostsAmount === '') {\n            closingCostsAmount = parseInt(this.state.closingCostsAmount, 10)\n\n        } else {\n            closingCostsAmount = parseInt(this.state.closingCostsAmount, 10)\n        }\n        if(this.state.downPaymentAmount === '') {\n            downPaymentAmount = parseInt(this.state.downPaymentAmount, 10)\n\n        } else {\n            downPaymentAmount = parseInt(this.state.downPaymentAmount, 10)\n        }\n        var totalInvestment = rehabCostsAmount + closingCostsAmount + downPaymentAmount\n        this.setState({ totalInvestment : totalInvestment })\n        this.props.onUpdateInvestment(totalInvestment)\n    }\n\n    render() {\n        return(\n            <div id=\"Investment\" className='CashflowCategories'>\n                <Card className='rootCardInvestment' >\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"subtitle2\" color=\"inherit\" noWrap className='header'>\n                            Investment\n                        </Typography>\n                        <Divider />\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Down Payment\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.downPaymentAmount}\n                                onChange={this.handleChangeDownPayment}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Closing Costs\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.closingCostsAmount}\n                                onChange={this.handleChangeClosingCosts}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Rehab Costs\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rehabCostsAmount}\n                                onChange={this.handleChangeRehabCosts}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='BottomDivider' >\n                            <Divider />\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                    <b>Total Investment</b>\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                <b>$ </b><b>{this.state.totalInvestment}</b>\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapDispathToProps = dispatch => {\n    return {\n        onUpdateInvestment : (argTotalInvestment) => dispatch({\n            type: \"UPDATE_INVESTMENT\",\n            totalInvestment : argTotalInvestment\n        })\n    };\n}\n\nexport default connect(null, mapDispathToProps)(Investment);","import React, { Component } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from 'react-redux';\n\nclass Revenue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            principleAmount: 0,\n            rentAmount: 0,\n            totalRevenue: 0,\n        }\n    }\n\n    handleChangeRent = event => {\n        this.setState({ rentAmount : event.target.value })\n        var principleAmount = 0\n        var rentAmount = 0\n        if(event.target.value === '') {\n            rentAmount = 0\n        } else {\n            rentAmount = parseInt(event.target.value, 10)\n        }    \n        if(this.state.principleAmount === '') {\n            principleAmount = 0\n        } else {\n            principleAmount = parseInt(this.state.principleAmount, 10)\n        }\n        var totalRevenue = rentAmount + principleAmount\n        this.setState({ totalRevenue : totalRevenue })\n        this.props.onUpdateRevenue(rentAmount, totalRevenue)\n    }\n\n    handleChangePrinciple = event => {\n        this.setState({ principleAmount : event.target.value })\n        var principleAmount = 0\n        var rentAmount = 0\n        if(event.target.value === '') {\n            principleAmount = 0\n        } else {\n            principleAmount = parseInt(event.target.value, 10)\n        }    \n        if(this.state.rentAmount === '') {\n            rentAmount = 0\n        } else {\n            rentAmount = parseInt(this.state.rentAmount, 10)\n        }\n        var totalRevenue = principleAmount + rentAmount\n        this.setState({ totalRevenue : totalRevenue })\n        this.props.onUpdateRevenue(rentAmount, totalRevenue)\n    }\n\n    render() {\n        return(\n            <div id=\"Revenue\" className='CashflowCategories'>\n                <Card className='rootCardRevenue' >\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"subtitle2\" color=\"inherit\" noWrap className='header'>\n                            Revenue\n                        </Typography>\n                        <Divider />\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Principle (Monthly)\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.principleAmount}\n                                onChange={this.handleChangePrinciple}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Rent\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rentAmount}\n                                onChange={this.handleChangeRent}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='BottomDivider' >\n                            <Divider />\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                    <b>Total Revenue</b>\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                <b>$ </b><b>{this.state.totalRevenue}</b>\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateRevenue : (argTotalRevenueCashOnCash, argTotalRevenueInternalRate) => dispatch({\n            type: \"UPDATE_REVENUE\",\n            totalRevenueCashOnCash : argTotalRevenueCashOnCash,\n            totalRevenueInternalRate : argTotalRevenueInternalRate\n        })\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Revenue);","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from 'react-redux';\n\nclass Expenses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mortgageAmount: 0,\n            taxesAmount: 0,\n            insuranceAmount: 0,\n            utilitiesAmount: 0,\n            vacancyAmount: 0,\n            repairsAmount: 0,\n            capExpendituresAmount: 0,\n            totalExpenses: 0,\n        }\n    }\n\n    handleChangeMortgage = event => {\n        this.setState({ mortgageAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.insuranceAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeTaxes = event => {\n        this.setState({ taxesAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.insuranceAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeInsurance = event => {\n        this.setState({ insuranceAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeUtilities = event => {\n        this.setState({ utilitiesAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeVacancy = event => {\n        this.setState({ vacancyAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeRepairs = event => {\n        this.setState({ repairsAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeCapExpenditures = event => {\n        this.setState({ capExpendituresAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    render() {\n        return(\n            <div id=\"Expenses\" className='CashflowCategories'>\n                <Card className='rootCardExpenses' >\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"subtitle2\" color=\"inherit\" noWrap className='header'>\n                            Expenses\n                        </Typography>\n                        <Divider />\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Mortgage\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.mortgageAmount}\n                                onChange={this.handleChangeMortgage}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Taxes\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.taxesAmount}\n                                onChange={this.handleChangeTaxes}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Insurance\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.insuranceAmount}\n                                onChange={this.handleChangeInsurance}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Utilities\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.utilitiesAmount}\n                                onChange={this.handleChangeUtilities}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Vacancy\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.vacancyAmount}\n                                onChange={this.handleChangeVacancy}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Repairs\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.repairsAmount}\n                                onChange={this.handleChangeRepairs}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Cap. Expenditures\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.capExpendituresAmount}\n                                onChange={this.handleChangeCapExpenditures}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='BottomDivider' >\n                            <Divider />\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                    <b>Total Expenses</b>\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                <b>$ </b><b>{this.state.totalExpenses}</b>\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateExpenses : (argTotalExpenses) => dispatch({\n            type: \"UPDATE_EXPENSES\",\n            totalExpenses : argTotalExpenses\n        })\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Expenses);","import React, { Component } from 'react';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { connect } from 'react-redux';\nimport trade from 'wstrade-api';\n\nclass Analysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cashflow: 0,\n      cashOnCashReturn: 0,\n      internalRateOfReturn: 0,\n    }\n  }\n\n  // componentWillMount() {\n  //   var email = \n  //   var password = \n  //   trade.login(email, password).then(token => { console.log(token) })\n  // }\n\n  handleClick = event => {\n    var totalInvestment = this.props.CashflowCalculatorData.totalInvestment\n    var totalExpenses = this.props.CashflowCalculatorData.totalExpenses\n    var totalRevenueCashOnCash = this.props.CashflowCalculatorData.totalRevenueCashOnCash\n    var totalRevenueInternalRate = this.props.CashflowCalculatorData.totalRevenueInternalRate\n    var cashflow = 0\n    var cashOnCashReturn = 0\n    var internalRateOfReturn = 0\n    cashflow = totalRevenueCashOnCash - totalExpenses\n    this.setState({ cashflow : cashflow })\n    if(totalInvestment !== 0) {\n      cashOnCashReturn = ((cashflow * 12) / totalInvestment) * 100\n      internalRateOfReturn = (((totalRevenueInternalRate - totalExpenses) * 12) / totalInvestment) * 100\n      this.setState({ cashOnCashReturn : cashOnCashReturn.toFixed(1) })\n      this.setState({ internalRateOfReturn : internalRateOfReturn.toFixed(1) })\n\n    }\n  }\n\n  render() {\n    const cardStyle = {\n      backgroundColor: '#364059',\n      color : 'white'\n    }\n    const avatarStyle = {\n      backgroundColor: '#364059',\n      height: 56,\n      width: 56\n    }\n    const iconStyle = {\n      height: 36,\n      width: 36\n    }\n    const buttonStyle = {\n      backgroundColor: '#364059',\n      color : 'white',\n      width : 120,\n      height : 80\n    }\n\n    return(\n      <div className='head'>\n        <Button variant=\"outlined\" onClick={this.handleClick} style={buttonStyle}>\n          <Typography\n            color=\"inherit\"\n            variant=\"h5\"\n          >\n            GO\n          </Typography>\n        </Button>\n        <Card style={cardStyle} className='rootCardAnalysis'>\n          <CardContent>\n              <Grid\n              container\n              justify=\"space-between\"\n              >\n                <Grid item>\n                    <Typography\n                    className='AnalysisTitle'\n                    color=\"inherit\"\n                    gutterBottom\n                    variant=\"body2\"\n                    >\n                    CASHFLOW\n                    </Typography>\n                    <Typography\n                    color=\"inherit\"\n                    variant=\"h3\"\n                    >\n                    ${this.state.cashflow}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Avatar style={avatarStyle}>\n                    <AttachMoneyIcon style={iconStyle}/>\n                    </Avatar>\n                </Grid>\n              </Grid>\n          </CardContent>\n        </Card>\n        <Card style={cardStyle} className='rootCardAnalysis'>\n          <CardContent>\n              <Grid\n              container\n              justify=\"space-between\"\n              >\n                <Grid item>\n                    <Typography\n                    className='AnalysisTitle'\n                    color=\"inherit\"\n                    gutterBottom\n                    variant=\"body2\"\n                    >\n                    CASH-ON-CASH RETURN\n                    </Typography>\n                    <Typography\n                    color=\"inherit\"\n                    variant=\"h3\"\n                    >\n                    {this.state.cashOnCashReturn}%\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Avatar style={avatarStyle}>\n                    <AttachMoneyIcon style={iconStyle}/>\n                    </Avatar>\n                </Grid>\n              </Grid>\n          </CardContent>\n        </Card>\n        <Card style={cardStyle} className='rootCardAnalysis'>\n          <CardContent>\n              <Grid\n              container\n              justify=\"space-between\"\n              >\n                <Grid item>\n                    <Typography\n                    className='AnalysisTitle'\n                    color=\"inherit\"\n                    gutterBottom\n                    variant=\"body2\"\n                    >\n                    INTERNAL RATE OF RETURN\n                    </Typography>\n                    <Typography\n                    color=\"inherit\"\n                    variant=\"h3\"\n                    >\n                    {this.state.internalRateOfReturn}%\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Avatar style={avatarStyle}>\n                    <AttachMoneyIcon style={iconStyle}/>\n                    </Avatar>\n                </Grid>\n              </Grid>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    CashflowCalculatorData : state.CashflowCalculatorData\n  };\n}\n\nexport default connect(mapStateToProps, null)(Analysis);","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Investment from './Investment';\nimport Revenue from './Revenue';\nimport Expenses from './Expenses';\nimport Analysis from './Analysis';\nimport '../css/CashflowCalculator.css';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n    },\n}))\n\nexport default function CashflowCalculator() {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}> \n                <Grid item xs={12} md={8} lg={12}>\n                    <div className={classes.root}>\n                        <div id=\"LeftSide\">\n                            <Investment />\n                            <Revenue />\n                        </div>\n                        <div id=\"RightSide\">\n                            <Expenses />\n                        </div>\n                        <div className='Analysis' >\n                            <Analysis />\n                        </div>\n                    </div>\n                </Grid>\n            </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Dashboard from './dashboard/Dashboard'\nimport Stocks from './stocks/Stocks'\nimport RealEstate from './real-estate/RealEstate'\nimport FinancialInstitution from './financial-institutions/FinancialInstitution'\nimport MortgageCalculator from './mortgage-calculator/MortgageCalculator'\nimport CashflowCalculator from './cashflow-calculator/CashflowCalculator'\nimport { mainListItems, secondaryListItems } from './listItems';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './css/LandingPage.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function LandingPage() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    // <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div id=\"Background\" className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" id=\"AppBar\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n            <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Switch>\n                <Route exact path={[ \"/\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Dashboard\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/stocks\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Stocks\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/real-estate\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Real Estate\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/financial-institution\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Financial Institution\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/mortgage-calculator\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Mortgage Calculator\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/cashflow-calculator\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Cashflow Calculator\n                    </Typography>\n                </Route>\n            </Switch>\n            </Toolbar>\n        </AppBar>\n        <Drawer\n            backgroundColor=\"black\"\n            variant=\"permanent\"\n            classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }}\n            open={open}\n        >\n            <div className={classes.toolbarIcon} id=\"Drawer\">\n            <IconButton id=\"Icon\" onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n            </IconButton>\n            </div>\n            <div id=\"SideDrawer\">\n                <Divider />\n                <List id=\"Drawer\">{mainListItems}</List>\n                <Divider />\n                <List id=\"Drawer\">{secondaryListItems}</List>\n            </div>\n        </Drawer>\n        <Switch>\n          <Route exact path={[ \"/\" ]} render={props => <Dashboard {...props} refreshRoute={[ \"/\" ]} /> } />\n          <Route exact path={\"/stocks\"} render={props => <Stocks {...props} refreshRoute={\"/stocks\"} /> } />\n          <Route exact path={\"/real-estate\"} render={props => <RealEstate {...props} refreshRoute={\"/real-estate\"} /> } />\n          <Route exact path={\"/financial-institution\"} render={props => <FinancialInstitution {...props} refreshRoute={\"/financial-institution\"} /> } />\n          <Route exact path={\"/mortgage-calculator\"} render={props => <MortgageCalculator {...props} refreshRoute={\"/mortgage-calculator\"} /> } />\n          <Route exact path={\"/cashflow-calculator\"} render={props => <CashflowCalculator {...props} refreshRoute={\"/cashflow-calculator\"} /> } />\n        </Switch>\n        </div>\n    // </BrowserRouter>\n  );\n}","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { Link } from 'react-router-dom';\nimport './css/LandingPage.css';\n\nexport const mainListItems = (\n  <div>\n    <Link to='/' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <DashboardIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n    </Link>\n    <Link to='/real-estate' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <HomeWorkIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Real Estate\" />\n      </ListItem>\n    </Link>\n    <Link to='/financial-institution' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <AccountBalanceIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Financial Institution\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader id=\"Icon\" inset>Tools</ListSubheader>\n    {/* <Link to='/mortgage-calculator' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <HomeIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Mortgage Calculator\" />\n      </ListItem>\n    </Link> */}\n    <Link to='/cashflow-calculator' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n            <AttachMoneyIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Cashflow Calculator\" />\n      </ListItem>\n    </Link>\n    <Link to='/stocks' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <ShowChartIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Stocks\" />\n      </ListItem>\n    </Link>\n  </div>\n);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './LandingPage';\n\n\nexport default App =>(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path={[\"/\"]} render={props => <LandingPage {...props} refreshRoute={\"/\"} /> } />\n      <Route exact path={[\"/stocks\"]} render={props => <LandingPage {...props} refreshRoute={\"/stocks\"} /> } />\n      <Route exact path={[\"/real-estate\"]} render={props => <LandingPage {...props} refreshRoute={\"/real-estate\"} /> } />\n      <Route exact path={[\"/financial-institution\"]} render={props => <LandingPage {...props} refreshRoute={\"/financial-institution\"} /> } />\n      <Route exact path={[\"/mortgage-calculator\"]} render={props => <LandingPage {...props} refreshRoute={\"/mortgage-calculator\"} /> } />\n      <Route exact path={[\"/cashflow-calculator\"]} render={props => <LandingPage {...props} refreshRoute={\"/cashflow-calculator\"} /> } />\n    </Switch>\n  </BrowserRouter>\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    totalInvestment: 0,\n    totalExpenses: 0,\n    totalRevenueCashOnCash: 0,\n    totalRevenueInternalRate: 0\n};\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if(action.type === 'UPDATE_INVESTMENT') {\n        newState.totalInvestment = action.totalInvestment\n    } else if(action.type === 'UPDATE_EXPENSES') {\n        newState.totalExpenses = action.totalExpenses\n    } else if(action.type === 'UPDATE_REVENUE') {\n        newState.totalRevenueCashOnCash = action.totalRevenueCashOnCash\n        newState.totalRevenueInternalRate = action.totalRevenueInternalRate\n    }\n\n    return newState\n};\n\nexport default reducer","const initialState = {\n    propertiesList: []\n};\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if(action.type === 'UPDATE_DASHBOARD_REAL_ESTATE_INVESTMENT') {\n        newState.propertiesList = action.propertiesData\n    } \n\n    return newState\n};\n\nexport default reducer","const initialState = {\n    rowsAssets : [],\n    rowsLiabilities : []\n};\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if(action.type === 'UPDATE_ASSETS') {\n        newState.rowsAssets = action.rowsAssets\n    } else if(action.type === 'UPDATE_LIABILITIES') {\n        newState.rowsLiabilities = action.rowsLiabilities\n    }\n\n    return newState\n};\n\nexport default reducer","import { combineReducers } from 'redux';\nimport CashflowCalculator from './reducer-cashflowCalculator';\nimport RealEstate from './reducer-realEstate';\nimport FinancialInstitution from './reducer-financialInstitution';\n\nconst allReducers = combineReducers({\n    CashflowCalculatorData : CashflowCalculator,\n    RealEstateData : RealEstate,\n    FinancialInstitutionData : FinancialInstitution\n});\n\nexport default allReducers\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport allReducers from './reducers/index'\nimport LandingPage from './LandingPage';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nconst store = createStore(allReducers)\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}