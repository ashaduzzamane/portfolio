{"version":3,"sources":["dashboard/Projection.js","dashboard/SideStats.js","dashboard/Cashflow.js","dashboard/Investment.js","dashboard/DashboardContent.js","dashboard/Dashboard.js","stocks/StockQuery.js","stocks/Stocks.js","real-estate/AddPropertyPopup.js","real-estate/RealEstateContent.js","real-estate/RealEstate.js","financial-institutions/BankStatement.js","financial-institutions/FinancialInstitution.js","mortgage-calculator/MortgageCalculator.js","cashflow-calculator/Investment.js","cashflow-calculator/Revenue.js","cashflow-calculator/Expenses.js","cashflow-calculator/Analysis.js","cashflow-calculator/CashflowCalculator.js","listItems.js","LandingPage.js","App.js","serviceWorker.js","reducers/reducer-cashflowCalculator.js","reducers/reducer-realEstate.js","reducers/reducer-financialInstitution.js","reducers/index.js","index.js"],"names":["Projection","props","state","values","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","this","getData","currentYear","Date","getFullYear","i","push","totalPrinciple","currentNetWorth","netWorth","cashflow","totalRevenue","totalExpenses","j","Paper","className","id","options","title","display","text","fontSize","scales","yAxes","ticks","beginAtZero","legend","Component","SideStats","totalAssets","totalLiabilities","console","log","setState","cardStyle","color","marginBottom","Card","style","CardContent","Grid","container","justify","item","Typography","gutterBottom","variant","Cashflow","tempData","chartData","xAxes","Investment","investment","Object","keys","position","DashboardContent","properties","financialAssets","financialLiabilities","axios","get","then","response","forEach","property","propertyPrice","propertyDownPayment","propertyPrinciple","propertyClosingCosts","propertyRehabCosts","propertyRent","propertyMortgage","propertyInsurance","propertyTaxes","propertyMiscExpenses","catch","error","RealEstateData","propertiesList","price","downPayment","rent","mortgage","insurance","taxes","miscExpenses","financial","accountType","accountValue","includes","accountDescription","FinancialInstitutionData","rowsAssets","rowsLiabilities","Value","Description","connect","useStyles","makeStyles","theme","content","flexGrow","height","overflow","appBarSpacer","mixins","toolbar","paddingTop","spacing","paddingBottom","paper","padding","flexDirection","fixedHeight","Dashboard","classes","clsx","Container","maxWidth","xs","md","lg","StockQuery","handleClick","event","stockSymbol","document","getElementById","value","symbol","date","marketValue","hundredDayHigh","hundredDayLow","key","unshift","parseFloat","pastSevenStr","pastThirtyStr","pastHundredStr","length","toFixed","prevClose","pastSeven","pastThirty","pastHundred","getChartData","canvas","scaleLabel","labelString","cardStyleBottom","cardStyleSide","justifyContent","width","TextField","Button","onClick","marginLeft","fixedHeightTop","fixedHeightBottom","Stocks","AddPropertyPopup","handleSave","address","propertyType","closingCosts","rehabCosts","principle","actionType","popupType","type","parseInt","cashOnCash","internalRate","closePopup","showErrorAllFields","handleCancel","handlePropertyChange","target","propertiesData","editID","buttonStyle","rightFormStyle","selectionStyle","alignItems","margin","typographyStyleLeft","typographyStyleRight","FormControl","Input","onChange","NativeSelect","aria-label","isNaN","startAdornment","InputAdornment","marginTop","severity","RealEstateContent","togglePopup","showPopup","toggleEdit","e","handleClose","argActionType","argType","argAddress","argPrice","argDownPayment","argClosingCosts","argRehabCosts","argPrinciple","argRent","argMortgage","argTaxes","argInsurance","argMiscExpenses","argInvestment","argCashflow","argCashOnCash","argInternalRate","index","propertyCount","sqlIndex","onUpdateDashboardRealEstateInvestment","post","putURL","put","handleDelete","itemID","deleteURL","toString","delete","splice","newPropertyCount","propertyAddress","propertyCashflow","propertyCashOnCash","propertyInternalRate","rootStyle","avatarStyle","mediaStyle","buttonSpace","buttonStyleEdit","buttonStyleDelete","flexWrap","map","CardHeader","avatar","Avatar","subheader","CardMedia","image","component","dispatch","argPropertiesData","RealEstate","BankStatement","showEdit","handleAssetCancel","tempRowsAssets","tempAssetInstitution","tempAssetDescription","tempAssetValue","onUpdateRowsAssets","handleAssetSave","done","asset","tempID","handleLiabilityCancel","tempRowsLiabilities","tempLiabilityInstitution","tempLiabilityDescription","tempLiabilityValue","onUpdateRowsLiabilities","handleLiabilitySave","liability","handleAssetEdit","Institution","handleAssetDelete","handleLiabilityEdit","handleLiabilityDelete","handleAddAsset","handleAddLiability","page","rowsPerPage","columns","minWidth","align","format","accountInstitution","marginTypo","EditBtnStyle","borderRadius","DeleteBtnStyle","BtnContainer","AddBtnStyle","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","row","hover","role","tabIndex","code","rowSpan","colSpan","argRowsAssets","argRowsLiabilities","paperPosition","FinancialInstitution","MortgageCalculator","fixedHeightPaper","handleChangeDownPayment","downPaymentAmount","totalInvestment","closingCostsAmount","rehabCostsAmount","onUpdateInvestment","handleChangeClosingCosts","handleChangeRehabCosts","noWrap","fullWidth","InputLabel","htmlFor","argTotalInvestment","Revenue","handleChangeRent","rentAmount","principleAmount","onUpdateRevenue","handleChangePrinciple","argTotalRevenueCashOnCash","argTotalRevenueInternalRate","totalRevenueCashOnCash","totalRevenueInternalRate","Expenses","handleChangeMortgage","mortgageAmount","taxesAmount","insuranceAmount","utilitiesAmount","vacancyAmount","repairsAmount","capExpendituresAmount","onUpdateExpenses","handleChangeTaxes","handleChangeInsurance","handleChangeUtilities","handleChangeVacancy","handleChangeRepairs","handleChangeCapExpenditures","argTotalExpenses","Analysis","CashflowCalculatorData","cashOnCashReturn","internalRateOfReturn","iconStyle","root","CashflowCalculator","mainListItems","to","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","paddingRight","toolbarIcon","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","LandingPage","React","useState","open","setOpen","basename","process","CssBaseline","AppBar","Toolbar","IconButton","edge","exact","path","Drawer","List","render","refreshRoute","App","Boolean","window","location","hostname","match","initialState","reducer","action","newState","allReducers","combineReducers","store","createStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.35b254c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Line, Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\n// import '../css/Stock.css'\nimport '../css/Dashboard.css'\n\nclass Projection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: {\n                labels: [2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2029],\n                datasets: [\n                    {\n                        label: 'Net Worth',\n                        fill: true,\n                        lineTension: 0,\n                        backgroundColor: '#364059',\n                        borderColor: '#364059',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#364059',\n                        pointBackgroundColor: '#ffff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#364059',\n                        pointHoverBorderColor: '#364059',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: [80000, 85000, 91000, 98000, 108000, 118000, 129000, 140000, 118000, 129000, 140000]\n                    }\n                ]\n            },\n        }\n    }\n\n    componentDidUpdate() {\n        this.getData()\n    }\n\n    getData() {\n        var values = this.state.values\n        var currentYear = (new Date()).getFullYear()\n        var labels = []\n        for (var i=0; i<10; i++) {\n            labels.push(currentYear)\n            currentYear++\n        }\n        var totalPrinciple = this.props.totalPrinciple\n        var currentNetWorth = this.props.netWorth\n        var cashflow = this.props.totalRevenue - this.props.totalExpenses\n        var data = []\n        for (var j=0; j<10; j++) {\n            data.push(currentNetWorth)\n            currentNetWorth = currentNetWorth + cashflow + totalPrinciple \n        }\n        values.labels = labels\n        values.datasets[0].data = data\n        return values\n    }\n\n    render() {\n        const paperStyle = {\n            height: 440,\n            width: 840,\n            padding: 20,\n            marginBottom: 30\n        }\n\n        return(\n            <Paper \n                // style={paperStyle}\n                className='paperStyleLine'\n            >\n                <div>\n                    <Line \n                        data={this.state.values}\n                        id='render'\n                        options={{\n                            title:{\n                                display:true,\n                                text:'Net Worth Projection',\n                                fontSize:25\n                            },\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend:{\n                                display: false,\n                            }\n                        }}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Projection;","import React, { Component } from 'react';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport '../css/Dashboard.css'\n\nclass SideStats extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            netWorth: '845000',\n            totalAssets: '1845000',\n            totalLiabilities: '1000000',\n        }\n    }\n\n    componentWillMount() {\n        console.log(this.props.netWorth, this.props.totalAssets, this.props.totalLiabilities)\n        this.setState({ netWorth : this.props.netWorth })\n        this.setState({ totalAssets : this.props.totalAssets })\n        this.setState({ totalLiabilities : this.props.totalLiabilities })\n    }\n\n    componentDidUpdate() {\n        if(this.state.netWorth !== this.props.netWorth || this.state.totalAssets !== this.props.totalAssets || this.state.totalLiabilities !== this.props.totalLiabilities) {\n            console.log(this.props.netWorth, this.props.totalAssets, this.props.totalLiabilities)\n            this.setState({ netWorth : this.props.netWorth })\n            this.setState({ totalAssets : this.props.totalAssets })\n            this.setState({ totalLiabilities : this.props.totalLiabilities })\n        }\n    }\n\n    render() {\n        const cardStyle = {\n            backgroundColor: '#f0f0f0',\n            color : '#364059',\n            marginBottom: 25\n        }\n        const cardStyleMain = {\n            backgroundColor: '#364059',\n            color : 'white',\n            marginBottom: 25\n        }\n\n        return(\n            <div className='rootStatsStyle'>\n                <Card style={cardStyleMain} id='stockCardSideStats'>\n                    <CardContent>\n                        <Grid container justify=\"space-between\">\n                            <Grid item>\n                                <Typography\n                                className='AnalysisTitle'\n                                color=\"inherit\"\n                                gutterBottom\n                                variant=\"body2\"\n                                >\n                                NET WORTH\n                                </Typography>\n                                <Typography\n                                color=\"inherit\"\n                                variant=\"h3\"\n                                >\n                                    $ {this.state.netWorth}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n                <Card style={cardStyle} id='stockCardSideStats'>\n                    <CardContent>\n                        <Grid container justify=\"space-between\">\n                            <Grid item>\n                                <Typography\n                                className='AnalysisTitle'\n                                color=\"inherit\"\n                                gutterBottom\n                                variant=\"body2\"\n                                >\n                                TOTAL ASSETS\n                                </Typography>\n                                <Typography\n                                color=\"inherit\"\n                                variant=\"h3\"\n                                >\n                                    $ {this.state.totalAssets}    \n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n                <Card style={cardStyle} id='stockCardSideStats'>\n                    <CardContent>\n                        <Grid\n                        container\n                        justify=\"space-between\"\n                        >\n                            <Grid item>\n                                <Typography\n                                className='AnalysisTitle'\n                                color=\"inherit\"\n                                gutterBottom\n                                variant=\"body2\"\n                                >\n                                TOTAL LIABILITIES\n                                </Typography>\n                                <Typography\n                                color=\"inherit\"\n                                variant=\"h3\"\n                                >\n                                    $ {this.state.totalLiabilities}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default SideStats;","import React, { Component } from 'react';\nimport { Line, Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\nimport '../css/Dashboard.css'\n\nclass Cashflow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tempData: [],\n            chartData:{\n                labels: [\n                    'Revenue', \n                    'Expenses', \n                ],\n                datasets:[\n                  {\n                    label:'Amount',\n                    data:[\n                      7500,\n                      4900,\n                    ],\n                    backgroundColor:[\n                      'rgba(54, 162, 235, 0.6)',\n                      'rgba(75, 192, 192, 0.6)',\n                    ]\n                  }\n                ]\n            },\n        }\n    }\n\n    componentWillMount(){\n        this.getData()\n    }\n\n    componentDidUpdate() {\n        this.getData()\n    }\n\n    getData() {\n        var chartData = this.state.chartData\n        chartData.datasets[0].data = [this.props.totalRevenue, this.props.totalExpenses]\n        return chartData\n    }\n\n    render() {\n        const paperStyleBar = {\n            height: 340,\n            width: 540,\n            padding: 20,\n            marginBottom: 30\n        }\n\n        return(\n            <Paper \n                className='paperStyleBar' \n                // style={paperStyleBar}\n            >\n                <div>\n                    <HorizontalBar\n                        data={this.getData()}\n                        options={{\n                            title:{\n                                display:true,\n                                text:'Cashflow',\n                                fontSize:25\n                            },\n                            scales: {\n                                xAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend:{\n                                display:false,\n                            }\n                        }}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Cashflow;","import React, { Component } from 'react';\nimport { Line, Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\nimport '../css/Dashboard.css'\n\nclass Investment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            investment: {},\n            chartData:{\n                labels: [\n                    'Real Estate', \n                    'Stocks', \n                    'Cash'\n                ],\n                datasets:[\n                  {\n                    data:[\n                        50000,\n                        15000,\n                        4000,\n                    ],\n                    backgroundColor:[\n                        'rgba(255, 159, 64, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(255, 99, 132, 0.6)'\n                    ]\n                  }\n                ]\n            },\n        }\n    }\n\n    componentWillMount() {\n        this.setState({ investment : this.props.investment })\n    }\n\n    componentDidUpdate(){\n        if(this.state.investment !== this.props.investment) {\n            this.setState({ investment : this.props.investment })\n            this.getData()\n            console.log(\"done\")\n        }\n    }\n\n    getData() {\n        var chartData = this.state.chartData\n        chartData.labels = Object.keys(this.props.investment)\n        chartData.datasets[0].data = Object.values(this.props.investment)\n        return chartData\n    }\n\n    render() {\n        const paperStylePie = {\n            height: 340,\n            width: 580,\n            padding: 20,\n            marginBottom: 30\n        }\n\n        return(\n            <Paper\n                // style={paperStylePie}\n                className='paperStylePie'    \n            >\n                <Pie\n                    data={this.getData()}\n                    options={{\n                        title:{\n                            display:true,\n                            text:'Investment',\n                            fontSize:25\n                        },\n                        legend:{\n                            display:true,\n                            position: \"right\"\n                        }\n                    }}\n                />\n            </Paper>\n        )\n    }\n\n\n}\n\nexport default Investment;","import React, { Component } from 'react';\nimport Projection from './Projection'\nimport SideStats from './SideStats'\nimport Cashflow from './Cashflow'\nimport Investment from './Investment'\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport '../css/Dashboard.css'\n\nclass DashboardContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalAssets: 0,\n            totalLiabilities: 0,\n            netWorth: 0,\n            totalRevenue: 0,\n            totalExpenses: 0,\n            totalPrinciple: 0,\n            properties : [],\n            financialAssets : [],\n            financialLiabilities : [],\n            investment: {\n                \"Real Estate\" : 0\n            }\n        }\n    }\n\n    componentWillMount() {\n        var properties = []\n        var financialAssets = []\n        var financialLiabilities = []\n        var investment = this.state.investment\n        var totalAssets = 0\n        var totalLiabilities = 0\n        var totalRevenue = 0\n        var totalExpenses = 0\n        var totalPrinciple = 0\n\n        axios.get(\"http://localhost:3000/api/v1/properties\")\n        .then(response => {\n            response.data.data.forEach(property => {\n                console.log(property)\n                totalAssets = totalAssets + property.propertyPrice\n                totalLiabilities = totalLiabilities + (property.propertyPrice - property.propertyDownPayment)\n                totalPrinciple = totalPrinciple + property.propertyPrinciple\n                investment['Real Estate'] = investment['Real Estate'] + property.propertyDownPayment + property.propertyClosingCosts + property.propertyRehabCosts\n                totalRevenue = totalRevenue + property.propertyRent\n                totalExpenses = totalExpenses + property.propertyMortgage + property.propertyInsurance + property.propertyTaxes + property.propertyMiscExpenses\n            })\n            this.setState({ totalRevenue : totalRevenue })\n            this.setState({ totalExpenses : totalExpenses })\n        })\n        .catch(error => {\n            properties = this.props.RealEstateData.propertiesList\n            properties.forEach(property => {\n                console.log(property)\n                totalAssets = totalAssets + property.price\n                totalLiabilities = totalLiabilities + (property.price - property.downPayment)\n                investment['Real Estate'] = investment['Real Estate'] + property.investment\n                totalRevenue = totalRevenue + property.rent\n                totalExpenses = totalExpenses + property.mortgage + property.insurance + property.taxes + property.miscExpenses\n            })\n            this.setState({ totalRevenue : totalRevenue })\n            this.setState({ totalExpenses : totalExpenses })\n        })\n\n        axios.get(\"http://localhost:3000/api/v1/financials\")\n        .then(response => {\n            response.data.data.forEach(financial => {\n                if(financial.accountType === \"Asset\") {\n                    financialAssets.push(financial)\n                } else if(financial.accountType === \"Liability\") {\n                    financialLiabilities.push(financial)\n                }\n            })\n            financialAssets.forEach(financial => {\n                totalAssets = totalAssets + financial.accountValue\n                if( !(Object.keys(investment).includes(financial.accountDescription)) ) {\n                    investment[`${financial.accountDescription}`] = financial.accountValue\n                } else {\n                    investment[`${financial.accountDescription}`] = investment[`${financial.accountDescription}`] + financial.accountValue\n                }\n            })\n            financialLiabilities.forEach(financial => {\n                totalLiabilities = totalLiabilities + financial.accountValue\n            })\n            \n            var netWorth = totalAssets - totalLiabilities\n            this.setState({ netWorth : netWorth })\n            this.setState({ investment : investment })\n            this.setState({ totalAssets : totalAssets })\n            this.setState({ totalLiabilities : totalLiabilities })\n        })\n        .catch(error => {\n            financialAssets = this.props.FinancialInstitutionData.rowsAssets\n            financialLiabilities = this.props.FinancialInstitutionData.rowsLiabilities\n            financialAssets.forEach(financial => {\n                totalAssets = totalAssets + financial.Value\n                if( !(Object.keys(investment).includes(financial.Description)) ) {\n                    investment[`${financial.Description}`] = financial.Value\n                } else {\n                    investment[`${financial.Description}`] = investment[`${financial.Description}`] + financial.Value\n                }\n            })\n            financialLiabilities.forEach(financial => {\n                totalLiabilities = totalLiabilities + financial.Value\n            })\n            var netWorth = totalAssets - totalLiabilities\n            this.setState({ netWorth : netWorth })\n            this.setState({ investment : investment })\n            this.setState({ totalAssets : totalAssets })\n            this.setState({ totalLiabilities : totalLiabilities })\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='contentStyleTop'>\n                    <Projection {...this.state} />\n                    <SideStats {...this.state} />\n                </div>\n                <div className='contentStyleBottom'>\n                    <Cashflow {...this.state} />\n                    <Investment {...this.state} />\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        RealEstateData : state.RealEstateData,\n        FinancialInstitutionData : state.FinancialInstitutionData\n    };\n}\n\nexport default connect(mapStateToProps)(DashboardContent);","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport DashboardContent from './DashboardContent';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}))\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n            \n            <Grid item xs={12} md={12} lg={12}>\n            {/* <Paper className={fixedHeightPaper}>\n                \n            </Paper> */}\n                <DashboardContent />\n            </Grid>\n            \n            {/* <Grid item xs={12} md={4} lg={3}>\n            <Paper className={fixedHeightPaper}>\n                \n            </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                \n            </Paper>\n            </Grid> */}\n        </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Card, CardContent, Grid, Typography, Avatar, FormHelperText } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Line } from 'react-chartjs-2'\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios'\nimport '../css/Stock.css'\n\nclass StockQuery extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            prevClose: 0,\n            hundredDayHigh: 0,\n            hundredDayLow: 0,\n            pastSeven: '+0.00',\n            pastThirty: '+0.00',\n            pastHundred: '+0.00',\n            symbol: 'Stock',\n            date: [],\n            marketValue: [],\n            values: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Stock',\n                        fill: false,\n                        lineTension: 0,\n                        backgroundColor: '#364059',\n                        borderColor: '#364059',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#364059',\n                        pointBackgroundColor: '#ffff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#364059',\n                        pointHoverBorderColor: '#364059',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: []\n                    }\n                ]\n            },\n            options: {\n                scales: {\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Market Value'\n                        }\n                    }],\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Date'\n                        }\n                    }]\n                }\n            }\n        }\n    }\n\n    handleClick = event => {\n        var stockSymbol = document.getElementById(\"stock-symbol\").value\n        // axios({\n        //     \"method\":\"GET\",\n        //     \"url\":\"http://autoc.finance.yahoo.com/autoc?query=google&callback=YAHOO.Finance.SymbolSuggest.ssCallback&lang=en&region=1\",\n        //     \"header\":{\n        //         // 'X-Requested-With': 'XMLHttpRequest',\n        //         \"Access-Control-Allow-Origin\": \"http://localhost:3000\"\n        //     },\n        //     \"params\":{\n        //         \"query\": stockSymbol,\n        //     }\n        // })\n        // .then((response)=>{\n        //     console.log(response)\n        // })\n        // .catch((error)=>{\n        //     console.log(error)\n        // })\n\n        axios({\n          \"method\":\"GET\",\n          \"url\":\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=value&outputsize=compact&apikey=value\",\n          \"params\":{\n            \"apikey\": \"V7JOOUFM53910Y4Y\",\n            \"symbol\": stockSymbol\n          }\n        })\n        .then((response)=>{\n            console.log(response)\n            var symbol = stockSymbol\n            var date = []\n            var marketValue = []\n            var hundredDayHigh = -1\n            var hundredDayLow = 100000000\n            for (var key in response.data['Time Series (Daily)']) {\n                date.unshift(key)\n                marketValue.unshift(response.data['Time Series (Daily)'][key]['4. close'])\n                if(parseFloat(response.data['Time Series (Daily)'][key]['4. close']) > hundredDayHigh ) {\n                    hundredDayHigh = parseFloat(response.data['Time Series (Daily)'][key]['4. close'])\n                } else if(parseFloat(response.data['Time Series (Daily)'][key]['4. close']) < hundredDayLow) {\n                    hundredDayLow = parseFloat(response.data['Time Series (Daily)'][key]['4. close'])\n                }\n            }\n            var pastSeven = 0\n            var pastSevenStr = ''\n            var pastThirty = 0\n            var pastThirtyStr = ''\n            var pastHundred = 0\n            var pastHundredStr = ''\n            if(marketValue[marketValue.length - 1] > marketValue[marketValue.length - 7]) {\n                pastSeven = (marketValue[marketValue.length - 1] / marketValue[marketValue.length - 7]).toFixed(2)\n                pastSevenStr = '+' + pastSeven\n            } else {\n                pastSeven = (marketValue[marketValue.length - 7] / marketValue[marketValue.length - 1]).toFixed(2)\n                pastSevenStr = '-' + pastSeven\n            }\n            if(marketValue[marketValue.length - 1] > marketValue[marketValue.length - 14]) {\n                pastThirty = (marketValue[marketValue.length - 1] / marketValue[marketValue.length - 14]).toFixed(2)\n                pastThirtyStr = '+' + pastThirty\n            } else {\n                pastThirty = (marketValue[marketValue.length - 14] / marketValue[marketValue.length - 1]).toFixed(2)\n                pastThirtyStr = '-' + pastThirty\n            }\n            if(marketValue[marketValue.length - 1] > marketValue[marketValue.length - 14]) {\n                pastHundred = (marketValue[marketValue.length - 1] / marketValue[0]).toFixed(2)\n                pastHundredStr = '+' + pastHundred\n            } else {\n                pastHundred = (marketValue[0] / marketValue[marketValue.length - 1]).toFixed(2)\n                pastHundredStr = '-' + pastHundred\n            }\n            this.setState({ prevClose : parseFloat(marketValue[marketValue.length - 1]).toFixed(2) })\n            this.setState({ hundredDayHigh : hundredDayHigh.toFixed(2) })\n            this.setState({ hundredDayLow : hundredDayLow.toFixed(2) })\n            this.setState({ pastSeven : pastSevenStr })\n            this.setState({ pastThirty : pastThirtyStr })\n            this.setState({ pastHundred : pastHundredStr })\n            this.setState({ symbol : symbol })\n            this.setState({ date : date })\n            this.setState({ marketValue : marketValue })\n            this.getChartData()\n        })\n        .catch((error)=>{\n          console.log(error)\n        })\n    }\n\n    getChartData = (canvas) => {\n        var data = this.state.values\n        data.labels = this.state.date\n        data.datasets[0].label = this.state.symbol\n        data.datasets[0].data = this.state.marketValue\n        return data\n    }\n\n    render() {\n        const cardStyleBottom = {\n            backgroundColor: '#ebebeb',\n            color : '#364059'\n        }\n        const cardStyleSide = {\n            backgroundColor: '#364059',\n            color : 'white',\n            marginBottom: 25\n        }\n        const paperStyle = {\n            height: 480,\n            width: 800,\n            padding: 20,\n            marginBottom: 30\n        }\n        const buttonStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            marginLeft: 5,\n            width : 120,\n            height : 55,\n        }\n        const statsStyle = {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n        const topContentStyle = {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n        const sideStatsStyle = {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-around'\n        }\n\n        return(\n            <div>\n                <div style={topContentStyle}>\n                    <Paper style={paperStyle}>\n                        <div>\n                            <div>\n                                <TextField id=\"stock-symbol\" label=\"Stock Symbol\" variant=\"outlined\" />\n                                <Button variant=\"outlined\" onClick={this.handleClick} style={buttonStyle}>\n                                    <Typography\n                                        color=\"inherit\"\n                                        variant=\"h5\"\n                                    >\n                                        GO\n                                    </Typography>\n                                </Button>\n                            </div>\n                            <div>\n                                <Line \n                                    data={this.getChartData}\n                                    id='render'\n                                    options={this.state.options}\n                                />\n                            </div>\n                        </div>\n                    </Paper>\n                    <div style={sideStatsStyle}>\n                        <Card style={cardStyleSide} className='stockCardSideStats'>\n                            <CardContent>\n                                <Grid\n                                container\n                                justify=\"space-between\"\n                                >\n                                    <Grid item>\n                                        <Typography\n                                        className='AnalysisTitle'\n                                        color=\"inherit\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        >\n                                        PREV CLOSE\n                                        </Typography>\n                                        <Typography\n                                        color=\"inherit\"\n                                        variant=\"h3\"\n                                        >\n                                            $ {this.state.prevClose}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                        <Card style={cardStyleSide} className='stockCardSideStats'>\n                            <CardContent>\n                                <Grid\n                                container\n                                justify=\"space-between\"\n                                >\n                                    <Grid item>\n                                        <Typography\n                                        className='AnalysisTitle'\n                                        color=\"inherit\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        >\n                                        100 DAYS HIGH\n                                        </Typography>\n                                        <Typography\n                                        color=\"inherit\"\n                                        variant=\"h3\"\n                                        >\n                                            $ {this.state.hundredDayHigh}    \n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                        <Card style={cardStyleSide} className='stockCardSideStats'>\n                            <CardContent>\n                                <Grid\n                                container\n                                justify=\"space-between\"\n                                >\n                                    <Grid item>\n                                        <Typography\n                                        className='AnalysisTitle'\n                                        color=\"inherit\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        >\n                                        100 DAYS LOW\n                                        </Typography>\n                                        <Typography\n                                        color=\"inherit\"\n                                        variant=\"h3\"\n                                        >\n                                            $ {this.state.hundredDayLow}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </div>\n                </div>\n                <div style={statsStyle}>\n                    <Card style={cardStyleBottom} className='stockCardAnalysis'>\n                        <CardContent>\n                            <Grid\n                            container\n                            justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography\n                                    className='AnalysisTitle'\n                                    color=\"inherit\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                    >\n                                    PAST 7 DAYS\n                                    </Typography>\n                                    <Typography\n                                    color=\"inherit\"\n                                    variant=\"h3\"\n                                    >\n                                        {this.state.pastSeven}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                    <Card style={cardStyleBottom} className='stockCardAnalysis'>\n                        <CardContent>\n                            <Grid\n                            container\n                            justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography\n                                    className='AnalysisTitle'\n                                    color=\"inherit\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                    >\n                                    PAST 30 DAYS\n                                    </Typography>\n                                    <Typography\n                                    color=\"inherit\"\n                                    variant=\"h3\"\n                                    >\n                                        {this.state.pastThirty}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                    <Card style={cardStyleBottom} className='stockCardAnalysis'>\n                        <CardContent>\n                            <Grid\n                            container\n                            justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography\n                                    className='AnalysisTitle'\n                                    color=\"inherit\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                    >\n                                    PAST 100 DAYS\n                                    </Typography>\n                                    <Typography\n                                    color=\"inherit\"\n                                    variant=\"h3\"\n                                    >\n                                        {this.state.pastHundred}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StockQuery;","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport StockQuery from './StockQuery'\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n        // paddingLeft: theme.spacing(16)\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeightTop: {\n        height: 500,\n    },\n    fixedHeightBottom: {\n        height: 480,\n    },\n}))\n\nexport default function Stocks() {\n    const classes = useStyles();\n    const fixedHeightPaperTop = clsx(classes.paper, classes.fixedHeightTop);\n    const fixedHeightPaperBottom = clsx(classes.paper, classes.fixedHeightBottom);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n                {/* <Paper className={fixedHeightPaperTop}> */}\n                    <StockQuery />\n                {/* </Paper> */}\n            </Grid>\n        </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport '../css/RealEstate.css'\n\nclass AddPropertyPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            propertyType: '',\n            address: '',\n            price: '',\n            downPayment: '',\n            closingCosts: '',\n            rehabCosts: '',\n            principle: '',\n            rent: '',\n            mortgage: '',\n            taxes: '',\n            insurance: '',\n            miscExpenses: '',\n            showErrorAllFields: false\n        }\n    }\n\n    componentWillMount() {\n        if(this.props.popupType === 'EDIT') {\n            this.props.propertiesData.forEach(property => {\n                if(property.id === this.props.editID) {\n                    this.setState({ address : property.address })\n                    this.setState({ propertyType : property.type })\n                    this.setState({ price : property.price })\n                    this.setState({ downPayment : property.downPayment })\n                    this.setState({ closingCosts : property.closingCosts })\n                    this.setState({ rehabCosts : property.rehabCosts })\n                    this.setState({ principle : property.principle })\n                    this.setState({ rent : property.rent })\n                    this.setState({ mortgage : property.mortgage })\n                    this.setState({ taxes : property.taxes })\n                    this.setState({ insurance : property.insurance })\n                    this.setState({ miscExpenses : property.miscExpenses })\n                }\n            })\n        }\n    }\n\n    handleSave = event => {\n        if(this.state.address !== '' && this.state.propertyType !== '' && this.state.price !== '' && this.state.downPayment !== '' && this.state.closingCosts !== '' && this.state.rehabCosts !== '' && this.state.principle !== '' && this.state.rent !== '' && this.state.mortgage !== '' && this.state.taxes !== '' && this.state.insurance !== '' && this.state.miscExpenses !== '') {\n            var actionType = this.props.popupType\n            console.log(actionType)\n            var type = this.state.propertyType\n            var address = this.state.address\n            var price = this.state.price\n            var investment = parseInt(this.state.downPayment, 10) + parseInt(this.state.closingCosts, 10) + parseInt(this.state.rehabCosts, 10)\n            console.log(investment)\n            var totalExpenses = parseInt(this.state.mortgage, 10) + parseInt(this.state.taxes, 10) + parseInt(this.state.insurance, 10) + parseInt(this.state.miscExpenses, 10)\n            console.log(totalExpenses)\n            var totalRevenue = parseInt(this.state.rent, 10) + parseInt(this.state.principle, 10)\n            var cashflow = parseInt(this.state.rent, 10) - totalExpenses\n            var cashOnCash = ((cashflow * 12) / investment) * 100\n            var internalRate = (((totalRevenue - totalExpenses) * 12) / investment) * 100\n            this.props.closePopup(\n                actionType, type, address, parseInt(price, 10), \n                parseInt(this.state.downPayment, 10), parseInt(this.state.closingCosts, 10), parseInt(this.state.rehabCosts, 10), \n                parseInt(this.state.principle, 10), parseInt(this.state.rent, 10), \n                parseInt(this.state.mortgage, 10), parseInt(this.state.taxes, 10), parseInt(this.state.insurance, 10), parseInt(this.state.miscExpenses, 10), \n                investment, cashflow, cashOnCash.toFixed(1), internalRate.toFixed(1)\n            )\n        } else {\n            this.setState({ showErrorAllFields : true })\n        }\n    }\n\n    handleCancel = event => {\n        var actionType = \"cancel\"\n        this.props.closePopup(actionType)\n    }\n\n    handlePropertyChange = event => {\n        this.setState({ propertyType : event.target.value })\n    }\n\n    render(){\n        const buttonStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 200,\n            height : 50\n        }\n        const rightFormStyle = {\n            width : 140,\n            marginLeft: 15\n        }\n        const selectionStyle = {\n            display: 'flex',\n            alignItems: 'center',\n            margin: 10\n        }\n        const typographyStyleLeft = {\n            width: 125,\n            display: 'flex',\n            alignItems: 'center'\n        }\n        const typographyStyleRight = {\n            width: 150,\n            display: 'flex',\n            alignItems: 'center'\n        }\n        const upperContentStyle = {\n            display: 'flex',\n            justifyContent: 'space-between'\n        }\n        const buttonContainerStyle = {\n            display: 'flex',\n            justifyContent: 'space-around',\n            marginTop: 5\n        }\n        const alertStyle = {\n            width: '45%',\n            height: '15%'\n        }\n        const alertPosition = {\n            display: 'flex',\n            justifyContent: 'center',\n            margin: 15\n        }\n\n        return(\n            <div className='popupRoot'>  \n                <div className='popupInner'>\n                    <div id=\"UpperContent\" style={upperContentStyle}>\n                    <div id=\"leftSideContent\">\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Address: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.address}\n                                onChange = {(event) => { this.setState({ address : event.target.value }) }}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Property Type: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                                <NativeSelect value={this.state.propertyType} onChange={this.handlePropertyChange} >\n                                <option aria-label=\"None\" value=\"\" />\n                                <option value={'Single House'}>Single House</option>\n                                <option value={'Duplex'}>Duplex</option>\n                                <option value={'Triplex'}>Triplex</option>\n                                <option value={'Quadruplex'}>Quadruplex</option>\n                                <option value={'Quintuplex'}>Quintuplex</option>\n                                <option value={'Apartment Complex'}>Apartment Complex</option>\n                                </NativeSelect>\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Price: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.price}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ price : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Down Payment: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.downPayment}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ downPayment : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Closing Costs: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.closingCosts}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ closingCosts : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleLeft}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Rehab Costs: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rehabCosts}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ rehabCosts : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div id=\"leftSideContent\">\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Principle (Monthly): \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.principle}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ principle : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Rent: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rent}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ rent : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Mortgage: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.mortgage}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ mortgage : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Taxes: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.taxes}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ taxes : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Insurance: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.insurance}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ insurance : event.target.value })\n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div style={selectionStyle}>\n                            <div style={typographyStyleRight}>\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\n                                    Misc. Expenses: \n                                </Typography>\n                            </div>\n                            <FormControl style={rightFormStyle}>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.miscExpenses}\n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ miscExpenses : event.target.value }) \n                                    }\n                                }}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                    </div>\n                    </div>\n                    <div style={buttonContainerStyle}>\n                        <Button variant=\"outlined\" style={buttonStyle} onClick={this.handleSave}>\n                            <Typography color=\"inherit\" variant=\"h5\">\n                                Save\n                            </Typography>\n                        </Button>\n                        <Button variant=\"outlined\" style={buttonStyle} onClick={this.handleCancel}>\n                            <Typography color=\"inherit\" variant=\"h5\">\n                                Cancel\n                            </Typography>\n                        </Button>\n                    </div>\n                    {this.state.showErrorAllFields ? \n                        <div style={alertPosition}>\n                            <MuiAlert style={alertStyle} severity=\"error\">Please fill in all fields</MuiAlert>\n                        </div>\n                    : null\n                    }\n                </div>  \n            </div> \n        )\n    }\n}\n\nexport default AddPropertyPopup;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddPropertyPopup from './AddPropertyPopup';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n\nclass RealEstateContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popupType: '',\n            editID: 0,\n            showPopup: false,\n            sqlIndex: 1,\n            propertyCount: 1,\n            propertiesData: [\n                // {\n                //     id: 1,\n                //     propertyCount: 2,\n                //     type: 'Duplex',\n                //     address: '7911 Rue Baribeau, LaSalle, QC',\n                //     price: '500000',\n                //     \n                //     investment: '45000',\n                //     cashflow: '400',\n                //     cashOnCash: '10.4',\n                //     internalRate: '39.8',\n                //     principle: 1300\n                // }\n            ]\n        }\n    }\n\n    componentWillMount() {\n        axios.get('http://localhost:3000/api/v1/properties')\n        .then(response => {\n            console.log(response)\n            var propertyCount = 0\n            var sqlIndex = 0\n            var propertiesData = []\n            for (var i=0; i<response.data.data.length; i++) {\n                var property = response.data.data[i]\n                var investment = property.propertyDownPayment + property.propertyClosingCosts + property.propertyRehabCosts\n                propertiesData.push(\n                    {\n                        id: property.id,\n                        propertyCount: i+1,\n                        type: property.propertyType,\n                        address: property.propertyAddress,\n                        price: property.propertyPrice,\n                        downPayment: property.propertyDownPayment,\n                        closingCosts: property.propertyClosingCosts,\n                        rehabCosts: property.propertyRehabCosts,\n                        investment: investment,\n                        principle: property.propertyPrinciple,\n                        rent: property.propertyRent,\n                        mortgage: property.propertyMortgage,\n                        taxes: property.propertyTaxes,\n                        insurance: property.propertyInsurance,\n                        miscExpenses: property.propertyMiscExpenses,\n                        cashflow: property.propertyCashflow,\n                        cashOnCash: property.propertyCashOnCash,\n                        internalRate: property.propertyInternalRate\n                    }\n                )\n                sqlIndex = property.id\n                propertyCount++\n            }\n            this.setState({ sqlIndex : (parseInt(sqlIndex, 10) + 1) })\n            this.setState({ propertyCount : (propertyCount + 1) })\n            this.setState({ propertiesData : propertiesData })\n            this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n        })\n        .catch(error => {\n            console.log(error)\n            if(this.state.propertiesData !== this.props.RealEstateData.propertiesList) {\n                this.setState({ propertiesData : this.props.RealEstateData.propertiesList })\n                console.log(\"done\")\n            }\n        })\n    }\n\n    togglePopup = event => {  \n        this.setState({ popupType : 'ADD' })\n        this.setState({ showPopup: !this.state.showPopup }); \n    } \n\n    toggleEdit = (e, id) => {  \n        this.setState({ editID : id })\n        this.setState({ popupType : 'EDIT' })\n        this.setState({ showPopup: !this.state.showPopup }); \n    }  \n\n    handleClose = (\n        argActionType, argType, argAddress, argPrice, \n        argDownPayment, argClosingCosts, argRehabCosts, \n        argPrinciple, argRent, \n        argMortgage, argTaxes, argInsurance, argMiscExpenses, \n        argInvestment, argCashflow, argCashOnCash, argInternalRate\n        ) => {\n        if(argActionType === \"ADD\") {\n            var propertiesData = this.state.propertiesData\n            var index = this.state.propertyCount\n            var sqlIndex = this.state.sqlIndex\n            propertiesData.push(\n                {\n                    id: sqlIndex,\n                    propertyCount: index,\n                    type: argType,\n                    address: argAddress,\n                    price: argPrice,\n                    downPayment: argDownPayment,\n                    closingCosts: argClosingCosts,\n                    rehabCosts: argRehabCosts,\n                    investment: argInvestment,\n                    principle: argPrinciple,\n                    rent: argRent,\n                    mortgage: argMortgage,\n                    taxes: argTaxes,\n                    insurance: argInsurance,\n                    miscExpenses: argMiscExpenses,\n                    cashflow: argCashflow,\n                    cashOnCash: argCashOnCash,\n                    internalRate: argInternalRate\n                }\n            )\n            this.setState({ propertiesData : propertiesData })\n            this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n            this.setState({ propertyCount : (index + 1) })\n            this.setState({ sqlIndex : (sqlIndex + 1) })\n\n            axios.post('http://localhost:3000/api/v1/properties', {\n                \"propertyAddress\" : argAddress,\n                \"propertyType\" : argType,\n                \"propertyPrice\" : argPrice,\n                \"propertyDownPayment\" : argDownPayment,\n                \"propertyClosingCosts\" : argClosingCosts,\n                \"propertyRehabCosts\" : argRehabCosts,\n                \"propertyPrinciple\" : argPrinciple,\n                \"propertyRent\" : argRent,\n                \"propertyTotalRevenue\" : argRent,\n                \"propertyMortgage\" : argMortgage,\n                \"propertyTaxes\" : argTaxes,\n                \"propertyInsurance\" : argInsurance,\n                \"propertyMiscExpenses\" : argMiscExpenses,\n                \"propertyCashflow\" : argCashflow,\n                \"propertyCashOnCash\" : argCashOnCash,\n                \"propertyInternalRate\" : argInternalRate\n            })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        } else if(argActionType === \"EDIT\") {\n            console.log(\"edit\")\n            var propertiesData = this.state.propertiesData\n            for (var i=0; i<propertiesData.length; i++) {\n                var property = propertiesData[i]\n                if(property.id === this.state.editID) {\n                    propertiesData[i].type = argType\n                    propertiesData[i].address = argAddress\n                    propertiesData[i].price = argPrice\n                    propertiesData[i].downPayment = argDownPayment\n                    propertiesData[i].closingCosts = argClosingCosts\n                    propertiesData[i].rehabCosts = argRehabCosts\n                    propertiesData[i].investment = argInvestment\n                    propertiesData[i].principle = argPrinciple\n                    propertiesData[i].rent = argRent\n                    propertiesData[i].mortgage = argMortgage\n                    propertiesData[i].taxes = argTaxes\n                    propertiesData[i].insurance = argInsurance\n                    propertiesData[i].miscExpenses = argMiscExpenses\n                    propertiesData[i].cashflow = argCashflow\n                    propertiesData[i].cashOnCash = argCashOnCash\n                    propertiesData[i].internalRate = argInternalRate\n                }\n            }\n\n            this.setState({ propertiesData : propertiesData })\n            this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n\n            var putURL = 'http://localhost:3000/api/v1/properties/' + this.state.editID\n            axios.put(putURL, {\n                \"propertyAddress\" : argAddress,\n                \"propertyType\" : argType,\n                \"propertyPrice\" : argPrice,\n                \"propertyDownPayment\" : argDownPayment,\n                \"propertyClosingCosts\" : argClosingCosts,\n                \"propertyRehabCosts\" : argRehabCosts,\n                \"propertyPrinciple\" : argPrinciple,\n                \"propertyRent\" : argRent,\n                \"propertyTotalRevenue\" : argRent,\n                \"propertyMortgage\" : argMortgage,\n                \"propertyTaxes\" : argTaxes,\n                \"propertyInsurance\" : argInsurance,\n                \"propertyMiscExpenses\" : argMiscExpenses,\n                \"propertyCashflow\" : argCashflow,\n                \"propertyCashOnCash\" : argCashOnCash,\n                \"propertyInternalRate\" : argInternalRate\n            })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n        this.togglePopup()\n    }\n\n    handleDelete = (e, itemID) => {\n        console.log(itemID)\n        var propertiesData = this.state.propertiesData\n        var propertyCount = propertiesData.length\n        this.setState({ propertyCount : propertyCount })\n        propertiesData.forEach(property => {\n            if(itemID == property.propertyCount) {\n                var deleteURL = 'http://localhost:3000/api/v1/properties/'+property.id.toString()\n                axios.delete(deleteURL)\n                .then(response => {\n                    console.log(response)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                propertiesData.splice(( property.propertyCount - 1) , 1)\n            }\n        })\n        var newPropertyCount = 1\n        propertiesData.forEach(property => {\n            property.propertyCount = newPropertyCount\n            newPropertyCount++\n        })\n        this.props.onUpdateDashboardRealEstateInvestment(propertiesData)\n        this.setState({ propertiesData : propertiesData })\n    }\n\n    render() {\n        const headStyle = {\n            display: 'flex',\n            justifyContent: 'space-around',\n            flexWrap: 'wrap'\n        }\n        const rootStyle = {\n            width: 345,\n            height: 500,\n            margin: 10\n        }\n        const avatarStyle = {\n            backgroundColor: '#364059',\n        }\n        const mediaStyle = {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        }\n        const buttonStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 200,\n            height : 50\n        }\n        const buttonSpace = {\n            display: 'flex',\n            justifyContent: 'space-around'\n        }\n        const buttonStyleEdit = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 130,\n            height : 40,\n            margin : 10\n        }\n        const buttonStyleDelete = {\n            backgroundColor: '#999999',\n            color : 'white',\n            width : 130,\n            height : 40,\n            margin : 10\n        }\n        const addPropertyStyle = {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '75%'\n        }\n\n        return(\n            <div style={headStyle}>\n                {this.state.propertiesData.map(property => {\n                    return(\n                        <Card style={rootStyle}>\n                        <CardHeader \n                            avatar={\n                                <Avatar aria-label=\"Property 1\" style={avatarStyle}>\n                                    {property.propertyCount}\n                                </Avatar>\n                            }\n                            title={property.type}\n                            subheader={property.address}\n                        />\n                        <CardMedia \n                            style={mediaStyle}\n                            image=\"/static/images/cards/paella.jpg\"\n                            title={property.type}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <Typography>\n                                <b>Price: ${property.price}</b>\n                            </Typography>\n                            <Typography>\n                                <b>Investment: ${property.investment}</b>\n                            </Typography>\n                            <Typography>\n                                <b>Cashflow: ${property.cashflow}</b>\n                            </Typography>\n                            <Typography>\n                                <b>Cash-on-Cash Return: {property.cashOnCash}%</b>\n                            </Typography>\n                            <Typography>\n                                <b>Internal Rate of Return: {property.internalRate}%</b>\n                            </Typography>\n                            </Typography>\n                        </CardContent>\n                        <div style={buttonSpace}>\n                            <Button variant=\"outlined\" style={buttonStyleEdit} onClick={((e) => this.toggleEdit(e, property.id))}>\n                                <Typography\n                                    color=\"inherit\"\n                                    variant=\"h6\"\n                                >\n                                    EDIT\n                                </Typography>\n                            </Button>\n                            <Button id={property.propertyCount} variant=\"outlined\" style={buttonStyleDelete}>\n                                <Typography\n                                    color=\"inherit\"\n                                    variant=\"h6\"\n                                    onClick={((e) => this.handleDelete(e, property.propertyCount))}\n                                >\n                                    DELETE\n                                </Typography>\n                            </Button>\n                        </div>\n                    </Card>\n                    )\n                })}\n                <Card style={rootStyle}>\n                    <CardHeader \n                        avatar={\n                            <Avatar aria-label=\"Property 1\" style={avatarStyle}>\n                                {this.state.propertyCount}\n                            </Avatar>\n                        }\n                        title=\"Property Type\"\n                        subheader=\"Address\"\n                    />\n                    <CardContent style={addPropertyStyle}>\n                        <Button variant=\"outlined\" style={buttonStyle} onClick={this.togglePopup}>\n                            <Typography\n                                color=\"inherit\"\n                                variant=\"h5\"\n                            >\n                                + ADD\n                            </Typography>\n                        </Button>\n                    </CardContent>\n                </Card>\n                {this.state.showPopup ? \n                    <AddPropertyPopup \n                        {...this.state}\n                        closePopup={this.handleClose}\n                    />\n                    : null\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateDashboardRealEstateInvestment : (argPropertiesData) => dispatch({\n            type: \"UPDATE_DASHBOARD_REAL_ESTATE_INVESTMENT\",\n            propertiesData : argPropertiesData\n        })\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        RealEstateData : state.RealEstateData\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RealEstateContent);","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport RealEstateContent from './RealEstateContent';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 560,\n    },\n}))\n\nexport default function RealEstate() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} lg={12}>\n                    <RealEstateContent />\n                </Grid>\n            </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport { Typography, Divider } from '@material-ui/core';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\n\n\nclass BankStatement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editID: 0,\n            showEdit: false,\n            tempID: 0,\n            tempAssetInstitution: '',\n            tempAssetDescription: '',\n            tempAssetValue:'',\n            tempLiabilityInstitution: '',\n            tempLiabilityDescription: '',\n            tempLiabilityValue: '',\n            page: 1,\n            rowsPerPage: 10,\n            totalAssets: 0,\n            totalLiabilities: 0,\n            tempRowsAssets: [],\n            tempRowsLiabilities: [],\n            columns : [\n                { id: 'Institution', label: 'Institution', minWidth: 200 },\n                {\n                    id: 'Description',\n                    label: 'Description',\n                    minWidth: 170,\n                    align: 'left',\n                },\n                {\n                    id: 'Value',\n                    label: 'Value',\n                    minWidth: 170,\n                    align: 'right',\n                    format: (value) => value.toFixed(2),\n                },\n            ],\n            rowsAssets : [\n\n            ],\n            rowsLiabilities : [\n                {\n                    'id' : 4,\n                    'Institution' : 'Desjardins',\n                    'Description' : 'Student Loan',\n                    'Value' : 22400,\n                },\n                {\n                    'id' : 5,\n                    'Institution' : 'CIBC',\n                    'Description' : 'Credit Card',\n                    'Value' : 0,\n                },\n            ]\n        }\n    }\n\n    componentWillMount() {\n        axios.get('http://localhost:3000/api/v1/financials')\n        .then(response => {\n            var rowsAssets = []\n            var totalAssets = 0\n            var rowsLiabilities = []\n            var totalLiabilities = 0\n            response.data.data.forEach(financial => {\n                if(financial.accountType === \"Asset\") {\n                    rowsAssets.push({\n                        'id' : financial.id,\n                        'Institution' : financial.accountInstitution,\n                        'Description' : financial.accountDescription,\n                        'Value' : financial.accountValue\n                    })\n                    totalAssets = totalAssets + financial.accountValue\n                } else if(financial.accountType === 'Liability') {\n                    rowsLiabilities.push({\n                        'id' : financial.id,\n                        'Institution' : financial.accountInstitution,\n                        'Description' : financial.accountDescription,\n                        'Value' : financial.accountValue\n                    })\n                    totalLiabilities = totalLiabilities + financial.accountValue\n                }\n            })\n            this.props.onUpdateRowsAssets(rowsAssets)\n            this.setState({ rowsAssets : rowsAssets })\n            this.setState({ totalAssets : totalAssets })\n            this.props.onUpdateRowsLiabilities(rowsLiabilities)\n            this.setState({ rowsLiabilities : rowsLiabilities })\n            this.setState({ totalLiabilities : totalLiabilities })\n        })\n        .catch(error => {\n            var totalAssets = 0\n            var totalLiabilities = 0\n            this.props.FinancialInstitutionData.rowsAssets.forEach(financial => {\n                totalAssets = totalAssets + financial.accountValue\n            })\n            this.props.FinancialInstitutionData.rowsLiabilities.forEach(financial => {\n                totalLiabilities = totalLiabilities + financial.accountValue\n            })\n            this.setState({ rowsAssets : this.props.FinancialInstitutionData.rowsAssets })\n            this.setState({ rowsLiabilities : this.props.FinancialInstitutionData.rowsLiabilities })\n        })\n    }\n\n    componentDidUpdate() {\n        if(this.state.rowsAssets !== this.props.FinancialInstitutionData.rowsAssets) {\n            var totalAssets = 0\n            this.props.FinancialInstitutionData.rowsAssets.forEach(asset => {\n                totalAssets = totalAssets + asset.Value\n            })\n            this.setState({ totalAssets : totalAssets })\n            this.setState({ rowsAssets : this.props.FinancialInstitutionData.rowsAssets })\n        }\n        if(this.state.rowsLiabilities !== this.props.FinancialInstitutionData.rowsLiabilities) {\n            var totalLiabilities = 0\n            this.props.FinancialInstitutionData.rowsLiabilities.forEach(liability => {\n                totalLiabilities = totalLiabilities + liability.Value\n            })\n            this.setState({ totalLiabilities : totalLiabilities })\n            this.setState({ rowsLiabilities : this.props.FinancialInstitutionData.rowsLiabilities })\n        }\n    }\n\n    togglePopup = event => {\n        this.setState({ showEdit: !this.state.showEdit }); \n    }\n\n    handleAssetCancel = event => {\n        this.setState({ rowsAssets : this.state.tempRowsAssets })\n        this.setState({ tempAssetInstitution : '' })\n        this.setState({ tempAssetDescription : '' })\n        this.setState({ tempAssetValue : '' })\n        this.props.onUpdateRowsAssets(this.state.tempRowsAssets)\n        this.togglePopup()\n    }\n\n    handleAssetSave = event => {\n        var tempRowsAssets = []\n        var totalAssets = 0\n        var done = false\n        this.state.rowsAssets.forEach(asset => {\n            if(asset.id < this.state.tempID) {\n                totalAssets = totalAssets + asset.Value\n                tempRowsAssets.push(asset)\n            } else if ((asset.id > this.state.tempID) && !done){\n                totalAssets = totalAssets + asset.Value + parseInt(this.state.tempAssetValue, 10)\n                tempRowsAssets.push(\n                    {\n                        'id' : this.state.tempID,\n                        'Institution' : this.state.tempAssetInstitution,\n                        'Description' : this.state.tempAssetDescription,\n                        'Value' : parseInt(this.state.tempAssetValue, 10),\n                    }\n                )\n                tempRowsAssets.push(asset)\n                done = true\n            } else {\n                tempRowsAssets.push(asset)\n            }\n        })\n        if(!done) {\n            tempRowsAssets.push(\n                {\n                    'id' : this.state.tempID,\n                    'Institution' : this.state.tempAssetInstitution,\n                    'Description' : this.state.tempAssetDescription,\n                    'Value' : parseInt(this.state.tempAssetValue, 10),\n                }\n            )\n        }\n        var putURL = 'http://localhost:3000/api/v1/financials/' + this.state.tempID.toString()\n        axios.put(putURL, {\n            \"accountType\" : \"Asset\",\n            \"accountInstitution\" : this.state.tempAssetInstitution,\n            \"accountDescription\" : this.state.tempAssetDescription,\n            \"accountValue\" : parseInt(this.state.tempAssetValue, 10)\n        })\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ tempAssetInstitution : '' })\n        this.setState({ tempAssetDescription : '' })\n        this.setState({ tempAssetValue : '' })\n        this.setState({ rowsAssets : tempRowsAssets })\n        this.setState({ totalAssets : totalAssets })\n        this.props.onUpdateRowsAssets(tempRowsAssets)\n        this.togglePopup()\n    }\n\n    handleLiabilityCancel = event => {\n        this.setState({ rowsLiabilities : this.state.tempRowsLiabilities })\n        this.setState({ tempLiabilityInstitution : '' })\n        this.setState({ tempLiabilityDescription : '' })\n        this.setState({ tempLiabilityValue : '' })\n        this.props.onUpdateRowsLiabilities(this.state.tempRowsLiabilities)\n        this.togglePopup()\n    }\n\n    handleLiabilitySave = event => {\n        var tempRowsLiabilities = []\n        var totalLiabilities = 0\n        var done = false\n        this.state.rowsLiabilities.forEach(liability => {\n            if(liability.id < this.state.tempID) {\n                totalLiabilities = totalLiabilities + liability.Value\n                tempRowsLiabilities.push(liability)\n            } else if((liability.id > this.state.tempID) && !done) {\n                totalLiabilities = totalLiabilities + liability.Value + parseInt(this.state.tempLiabilityValue, 10)\n                tempRowsLiabilities.push(\n                    {\n                        'id' : this.state.tempID,\n                        'Institution' : this.state.tempLiabilityInstitution,\n                        'Description' : this.state.tempLiabilityDescription,\n                        'Value' : parseInt(this.state.tempLiabilityValue, 10),\n                    }\n                )\n                tempRowsLiabilities.push(liability)\n                done = true\n            } else {\n                tempRowsLiabilities.push(liability)\n            }\n        })\n        if(!done) {\n            tempRowsLiabilities.push(\n                {\n                    'id' : this.state.tempID,\n                    'Institution' : this.state.tempLiabilityInstitution,\n                    'Description' : this.state.tempLiabilityDescription,\n                    'Value' : parseInt(this.state.tempLiabilityValue, 10),\n                }\n            )\n        }\n        var putURL = 'http://localhost:3000/api/v1/financials/' + this.state.tempID.toString()\n        axios.put(putURL, {\n            \"accountType\" : \"Liability\",\n            \"accountInstitution\" : this.state.tempAssetInstitution,\n            \"accountDescription\" : this.state.tempAssetDescription,\n            \"accountValue\" : parseInt(this.state.tempAssetValue, 10)\n        })\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ tempLiabilityInstitution : '' })\n        this.setState({ tempLiabilityDescription : '' })\n        this.setState({ tempLiabilityValue : '' })\n        this.setState({ rowsLiabilities : tempRowsLiabilities })\n        this.setState({ totalLiabilities : totalLiabilities })\n        this.props.onUpdateRowsLiabilities(tempRowsLiabilities)\n        this.togglePopup()\n    }\n\n    handleAssetEdit  = (e, itemID) => {\n        this.setState({ tempRowsAssets : this.state.rowsAssets })\n        this.setState({ editID : itemID })\n        var tempRowsAssets = []\n        this.state.rowsAssets.forEach(asset => {\n            if(itemID === asset.id) {\n                this.setState({ tempID : asset.id })\n                this.setState({ tempAssetInstitution : asset.Institution })\n                this.setState({ tempAssetDescription : asset.Description })\n                this.setState({ tempAssetValue : asset.Value })\n            } else {\n                tempRowsAssets.push(asset)\n            }\n        })\n        this.setState({ rowsAssets : tempRowsAssets })\n        this.props.onUpdateRowsAssets(tempRowsAssets)\n        this.setState({ showEdit: !this.state.showEdit }); \n    }\n\n    handleAssetDelete = (e, itemID) => {\n        var rowsAssets = this.state.rowsAssets\n        var totalAssets = 0\n        var tempRowsAssets = []\n        rowsAssets.forEach(asset => {\n            if(asset.id !== itemID) {\n                totalAssets = totalAssets + asset.Value\n                tempRowsAssets.push(asset)\n            }\n        })\n        var deleteURL = 'http://localhost:3000/api/v1/financials/' + itemID.toString()\n        axios.delete(deleteURL)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ totalAssets : totalAssets })\n        this.setState({ rowsAssets : tempRowsAssets })\n        this.props.onUpdateRowsAssets(tempRowsAssets)\n    }\n\n    handleLiabilityEdit  = (e, itemID) => {\n        this.setState({ tempRowsLiabilities : this.state.rowsLiabilities })\n        this.setState({ editID : itemID })\n        var tempRowsLiabilities = []\n        this.state.rowsLiabilities.forEach(liability => {\n            if(itemID === liability.id) {\n                this.setState({ tempID : liability.id })\n                this.setState({ tempLiabilityInstitution : liability.Institution })\n                this.setState({ tempLiabilityDescription : liability.Description })\n                this.setState({ tempLiabilityValue : liability.Value })\n            } else {\n                tempRowsLiabilities.push(liability)\n            }\n        })\n        this.setState({ rowsLiabilities : tempRowsLiabilities })\n        this.props.onUpdateRowsLiabilities(tempRowsLiabilities)\n        this.setState({ showEdit: !this.state.showEdit }); \n    }\n\n    handleLiabilityDelete = (e, itemID) => {\n        var rowsLiabilities = this.state.rowsLiabilities\n        var totalLiabilities = 0\n        var tempRowsLiabilities = []\n        rowsLiabilities.forEach(liability => {\n            if(liability.id !== itemID) {\n                totalLiabilities = totalLiabilities + liability.Value\n                tempRowsLiabilities.push(liability)\n            }\n        })\n        var deleteURL = 'http://localhost:3000/api/v1/financials/' + itemID.toString()\n        axios.delete(deleteURL)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.setState({ totalLiabilities : totalLiabilities })\n        this.setState({ rowsLiabilities : tempRowsLiabilities })\n        this.props.onUpdateRowsLiabilities(tempRowsLiabilities)\n    }\n\n    handleAddAsset = event => {\n        var rowsAssets = this.state.rowsAssets\n        var totalAssets = this.state.totalAssets\n        var id = rowsAssets.length + this.state.rowsLiabilities.length + 1\n        var value = parseInt(this.state.tempAssetValue, 10)\n        totalAssets = totalAssets + value\n        axios.post('http://localhost:3000/api/v1/financials', {\n            \"accountType\" : \"Asset\",\n            \"accountInstitution\" : this.state.tempAssetInstitution,\n            \"accountDescription\" : this.state.tempAssetDescription,\n            \"accountValue\" : value\n        })\n        .then(response => {\n            id = response.data.data.id\n            console.log('start')\n            rowsAssets.push(\n                {\n                    'id' : id,\n                    'Institution' : this.state.tempAssetInstitution,\n                    'Description' : this.state.tempAssetDescription,\n                    'Value' : value,\n                }\n            )\n            this.setState({ rowsAssets : rowsAssets })\n            this.props.onUpdateRowsAssets(rowsAssets)\n            this.setState({ tempAssetDescription : '' })\n            this.setState({ tempAssetInstitution : '' })\n            this.setState({ tempAssetValue : '' })\n            this.setState({ totalAssets : totalAssets })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    handleAddLiability = event => {\n        var rowsLiabilities = this.state.rowsLiabilities\n        var totalLiabilities = this.state.totalLiabilities\n        var id = rowsLiabilities.length + 1\n        var value = parseInt(this.state.tempLiabilityValue, 10)\n        totalLiabilities = totalLiabilities + value\n        axios.post('http://localhost:3000/api/v1/financials', {\n            \"accountType\" : \"Liability\",\n            \"accountInstitution\" : this.state.tempLiabilityInstitution,\n            \"accountDescription\" : this.state.tempLiabilityDescription,\n            \"accountValue\" : value\n        })\n        .then(response => {\n            id = response.data.data.id\n            rowsLiabilities.push(\n                {\n                    'id' : id,\n                    'Institution' : this.state.tempLiabilityInstitution,\n                    'Description' : this.state.tempLiabilityDescription,\n                    'Value' : value,\n                }\n            )\n            this.setState({ rowsLiabilities : rowsLiabilities })\n            this.props.onUpdateRowsLiabilities(rowsLiabilities)\n            this.setState({ totalLiabilities : totalLiabilities })\n            this.setState({ tempLiabilityDescription : '' })\n            this.setState({ tempLiabilityInstitution : '' })\n            this.setState({ tempLiabilityValue : '' })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        const root = {\n            width: '100%',\n            marginBottom: 35\n        }\n        const marginTypo = {\n            marginLeft: 16,\n            paddingTop: 12\n        }\n        const rootStyle ={\n            display: 'flex',\n            // justifyContent: 'space-between',\n            alignItems: 'center',\n            height: 70\n        }\n        const EditBtnStyle = {\n            backgroundColor: 'white',\n            color : '#364059',\n            borderColor: '#364059',\n            width : 100,\n            height : 35,\n            marginTop: 10,\n            borderRadius: '20px'\n        }\n        const DeleteBtnStyle = {\n            backgroundColor: '#999999',\n            color : 'white',\n            width : 100,\n            height : 35,\n            marginTop: 10,\n            borderRadius: '20px'\n        }\n        const BtnContainer = {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }\n        const AddBtnStyle = {\n            backgroundColor: '#364059',\n            color : 'white',\n            width : 100,\n            height : 35,\n            marginTop: 10,\n            borderRadius: '20px'\n        }\n        return(\n        <div>\n        <Paper style={root}>\n            <div style={rootStyle}>\n                <Typography style={marginTypo} color=\"inherit\" variant=\"h6\">\n                    Assets\n                </Typography>\n            </div>\n            <Divider />\n            <TableContainer>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {this.state.columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        <b>{column.label}</b>\n                      </TableCell>\n                    ))}\n                    <TableCell key='editHeaderAsset' align='left' style={{ minWidth: 170 }}></TableCell>\n                    <TableCell key='deleteHeaderAsset' align='left' style={{ minWidth: 150 }}></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.rowsAssets.map((row) => {\n                    return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                        {this.state.columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                            </TableCell>\n                          );\n                        })}\n                        <TableCell align='left' key='editAsset'>\n                            <div style={BtnContainer}> \n                                <Button variant=\"outlined\" style={EditBtnStyle} id={row.id} onClick={((e) => this.handleAssetEdit(e, row.id))}>\n                                    <Typography color=\"inherit\">\n                                        Edit\n                                    </Typography>\n                                </Button>\n                            </div>\n                        </TableCell>\n                        <TableCell align='left' key='deleteAsset'>\n                            <div style={BtnContainer}> \n                                <Button variant=\"outlined\" style={DeleteBtnStyle} id={row.id} onClick={((e) => this.handleAssetDelete(e, row.id))}>\n                                    <ClearIcon />\n                                </Button>\n                            </div>\n                        </TableCell>\n                    </TableRow>\n                    );\n                })}\n                {this.state.showEdit ? \n                    <TableRow>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                    value={this.state.tempAssetInstitution}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetInstitution : event.target.value })\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetDescription}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetDescription : event.target.value })\n                                    }}\n                                />    \n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetValue}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        if(!isNaN(event.target.value)) {\n                                            this.setState({ tempAssetValue : event.target.value })\n                                        }\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleAssetSave}>\n                                        <Typography color=\"inherit\">\n                                            SAVE\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={DeleteBtnStyle} onClick={this.handleAssetCancel}>\n                                        <Typography color=\"inherit\">\n                                            CANCEL \n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    : \n                        <TableRow>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetInstitution}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetInstitution : event.target.value })\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetDescription}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempAssetDescription : event.target.value })\n                                    }}\n                                />    \n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempAssetValue}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        if(!isNaN(event.target.value)) {\n                                            this.setState({ tempAssetValue : event.target.value })\n                                        }\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleAddAsset}>\n                                        <Typography color=\"inherit\">\n                                            Add\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                }\n                    <TableRow>\n                        <TableCell rowSpan={2} />\n                        <TableCell align=\"left\" colSpan={1}><b>Total Assets</b></TableCell>\n                        <TableCell align=\"right\"><b>$ {this.state.totalAssets.toFixed(2)}</b></TableCell>\n                    </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n        </Paper>\n        <Paper>\n            <div style={rootStyle}>\n                <Typography style={marginTypo} color=\"inherit\" variant=\"h6\">\n                    Liabilities\n                </Typography>\n            </div>\n            <Divider />\n            <TableContainer>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                      <TableRow>\n                        {this.state.columns.map((column) => (\n                          <TableCell\n                            key={column.id}\n                            align={column.align}\n                            style={{ minWidth: column.minWidth }}\n                          >\n                            <b>{column.label}</b>\n                          </TableCell>\n                        ))}\n                        <TableCell key='editHeaderLiability' align='left' style={{ minWidth: 170 }}></TableCell>\n                        <TableCell key='deleteHeaderLiability' align='left' style={{ minWidth: 170 }}></TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.rowsLiabilities.map((row) => {\n                        return (\n                          <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                            {this.state.columns.map((column) => {\n                              const value = row[column.id];\n                              return (\n                                <TableCell key={column.id} align={column.align}>\n                                  {column.format && typeof value === 'number' ? column.format(value) : value}\n                                </TableCell>\n                              );\n                            })}\n                            <TableCell align='left' key='editLiability'>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={EditBtnStyle} id={row.id} onClick={((e) => this.handleLiabilityEdit(e, row.id))}>\n                                        <Typography color=\"inherit\">\n                                            Edit\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell align='left' key='deleteLiability'>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={DeleteBtnStyle} id={row.id} onClick={((e) => this.handleLiabilityDelete(e, row.id))}>\n                                        <ClearIcon />\n                                    </Button>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                        );\n                      })}\n                {this.state.showEdit ? \n                    <TableRow>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                    value={this.state.tempLiabilityInstitution}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempLiabilityInstitution : event.target.value })\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempLiabilityDescription}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        this.setState({ tempLiabilityDescription : event.target.value })\n                                    }}\n                                />    \n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <TextField \n                                    value={this.state.tempLiabilityValue}\n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    onChange = {(event) => { \n                                        if(!isNaN(event.target.value)) {\n                                            this.setState({ tempLiabilityValue : event.target.value })\n                                        }\n                                    }}\n                                />\n                            </TableCell>\n                            <TableCell rowSpan={1}>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleLiabilitySave}>\n                                        <Typography color=\"inherit\">\n                                            SAVE\n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                <div style={BtnContainer}> \n                                    <Button variant=\"outlined\" style={DeleteBtnStyle} onClick={this.handleLiabilityCancel}>\n                                        <Typography color=\"inherit\">\n                                            CANCEL \n                                        </Typography>\n                                    </Button>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                    : \n                    <TableRow>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                value={this.state.tempLiabilityInstitution}\n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                onChange = {(event) => { \n                                    this.setState({ tempLiabilityInstitution : event.target.value })\n                                }}\n                            />\n                        </TableCell>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                value={this.state.tempLiabilityDescription}\n                                id=\"outlined-basic\" \n                                variant=\"outlined\"\n                                onChange = {(event) => { \n                                    this.setState({ tempLiabilityDescription : event.target.value })\n                                }} \n                            />    \n                        </TableCell>\n                        <TableCell rowSpan={1}>\n                            <TextField \n                                value={this.state.tempLiabilityValue}\n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                onChange = {(event) => { \n                                    if(!isNaN(event.target.value)) {\n                                        this.setState({ tempLiabilityValue : event.target.value })\n                                    }\n                                }}\n                            />\n                        </TableCell>\n                        <TableCell rowSpan={1}>\n                            <div style={BtnContainer}> \n                                <Button variant=\"outlined\" style={AddBtnStyle} onClick={this.handleAddLiability}>\n                                    <Typography color=\"inherit\">\n                                        Add\n                                    </Typography>\n                                </Button>\n                            </div>\n                        </TableCell>\n                        <TableCell></TableCell>\n                    </TableRow>\n                }\n                    <TableRow>\n                        <TableCell rowSpan={2} />\n                        <TableCell align=\"left\" colSpan={1}><b>Total Liabilities</b></TableCell>\n                        <TableCell align=\"right\"><b>$ {this.state.totalLiabilities.toFixed(2)}</b></TableCell>\n                    </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateRowsAssets : (argRowsAssets) => dispatch({\n            type: \"UPDATE_ASSETS\",\n            rowsAssets : argRowsAssets\n        }),\n        onUpdateRowsLiabilities : (argRowsLiabilities) => dispatch({\n            type: \"UPDATE_LIABILITIES\",\n            rowsLiabilities : argRowsLiabilities\n        })\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        FinancialInstitutionData : state.FinancialInstitutionData\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankStatement);","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport BankStatement from './BankStatement'\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    paperPosition: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}))\n\nexport default function FinancialInstitution() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={12} lg={9}>\n                    <BankStatement />\n                </Grid>\n            </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}))\n\nexport default function MortgageCalculator() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n            \n            <Grid item xs={12} md={8} lg={9}>\n            <Paper className={fixedHeightPaper}>\n                \n            </Paper>\n            </Grid>\n            \n            <Grid item xs={12} md={4} lg={3}>\n            <Paper className={fixedHeightPaper}>\n                \n            </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                \n            </Paper>\n            </Grid>\n        </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React, { Component } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from 'react-redux';\n\nclass Investment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            downPaymentAmount: 0,\n            closingCostsAmount: 0,\n            rehabCostsAmount: 0,\n            totalInvestment: 0,\n        }\n    }\n\n    handleChangeDownPayment = event => {\n        this.setState({ downPaymentAmount : event.target.value })\n        var downPaymentAmount = 0\n        var closingCostsAmount = 0\n        var rehabCostsAmount = 0\n        if(event.target.value === '') {\n            downPaymentAmount = 0\n        } else {\n            downPaymentAmount = parseInt(event.target.value, 10)\n        }        \n        if(this.state.closingCostsAmount === '') {\n            closingCostsAmount = 0\n        } else {\n            closingCostsAmount = parseInt(this.state.closingCostsAmount, 10)\n        }\n        if(this.state.rehabCostsAmount === '') {\n            rehabCostsAmount = 0\n        } else {\n            rehabCostsAmount = parseInt(this.state.rehabCostsAmount, 10)\n        }\n        var totalInvestment = downPaymentAmount + closingCostsAmount + rehabCostsAmount\n        this.setState({ totalInvestment : totalInvestment })\n        this.props.onUpdateInvestment(totalInvestment)\n    }\n\n    handleChangeClosingCosts = event => {\n        this.setState({ closingCostsAmount : event.target.value })\n        var downPaymentAmount = 0\n        var closingCostsAmount = 0\n        var rehabCostsAmount = 0\n        if(event.target.value === '') {\n            closingCostsAmount = 0\n        } else {\n            closingCostsAmount = parseInt(event.target.value, 10)\n        }     \n        if(this.state.downPaymentAmount === '') {\n            downPaymentAmount = 0\n        } else {\n            downPaymentAmount = parseInt(this.state.downPaymentAmount, 10)\n        }\n        if(this.state.rehabCostsAmount === '') {\n            rehabCostsAmount = 0\n        } else {\n            rehabCostsAmount = parseInt(this.state.rehabCostsAmount, 10)\n        }\n        var totalInvestment = closingCostsAmount + downPaymentAmount + rehabCostsAmount\n        this.setState({ totalInvestment : totalInvestment })\n        this.props.onUpdateInvestment(totalInvestment)\n    }\n\n    handleChangeRehabCosts = event => {\n        this.setState({ rehabCostsAmount : event.target.value })\n        var downPaymentAmount = 0\n        var closingCostsAmount = 0\n        var rehabCostsAmount = 0\n        if(event.target.value === '') {\n            rehabCostsAmount = 0\n        } else {\n            rehabCostsAmount = parseInt(event.target.value, 10)\n        }    \n        if(this.state.closingCostsAmount === '') {\n            closingCostsAmount = parseInt(this.state.closingCostsAmount, 10)\n\n        } else {\n            closingCostsAmount = parseInt(this.state.closingCostsAmount, 10)\n        }\n        if(this.state.downPaymentAmount === '') {\n            downPaymentAmount = parseInt(this.state.downPaymentAmount, 10)\n\n        } else {\n            downPaymentAmount = parseInt(this.state.downPaymentAmount, 10)\n        }\n        var totalInvestment = rehabCostsAmount + closingCostsAmount + downPaymentAmount\n        this.setState({ totalInvestment : totalInvestment })\n        this.props.onUpdateInvestment(totalInvestment)\n    }\n\n    render() {\n        return(\n            <div id=\"Investment\" className='CashflowCategories'>\n                <Card className='rootCardInvestment' >\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"subtitle2\" color=\"inherit\" noWrap className='header'>\n                            Investment\n                        </Typography>\n                        <Divider />\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Down Payment\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.downPaymentAmount}\n                                onChange={this.handleChangeDownPayment}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Closing Costs\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.closingCostsAmount}\n                                onChange={this.handleChangeClosingCosts}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Rehab Costs\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rehabCostsAmount}\n                                onChange={this.handleChangeRehabCosts}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='BottomDivider' >\n                            <Divider />\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                    <b>Total Investment</b>\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                <b>$ </b><b>{this.state.totalInvestment}</b>\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapDispathToProps = dispatch => {\n    return {\n        onUpdateInvestment : (argTotalInvestment) => dispatch({\n            type: \"UPDATE_INVESTMENT\",\n            totalInvestment : argTotalInvestment\n        })\n    };\n}\n\nexport default connect(null, mapDispathToProps)(Investment);","import React, { Component } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from 'react-redux';\n\nclass Revenue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            principleAmount: 0,\n            rentAmount: 0,\n            totalRevenue: 0,\n        }\n    }\n\n    handleChangeRent = event => {\n        this.setState({ rentAmount : event.target.value })\n        var principleAmount = 0\n        var rentAmount = 0\n        if(event.target.value === '') {\n            rentAmount = 0\n        } else {\n            rentAmount = parseInt(event.target.value, 10)\n        }    \n        if(this.state.principleAmount === '') {\n            principleAmount = 0\n        } else {\n            principleAmount = parseInt(this.state.principleAmount, 10)\n        }\n        var totalRevenue = rentAmount + principleAmount\n        this.setState({ totalRevenue : totalRevenue })\n        this.props.onUpdateRevenue(rentAmount, totalRevenue)\n    }\n\n    handleChangePrinciple = event => {\n        this.setState({ principleAmount : event.target.value })\n        var principleAmount = 0\n        var rentAmount = 0\n        if(event.target.value === '') {\n            principleAmount = 0\n        } else {\n            principleAmount = parseInt(event.target.value, 10)\n        }    \n        if(this.state.rentAmount === '') {\n            rentAmount = 0\n        } else {\n            rentAmount = parseInt(this.state.rentAmount, 10)\n        }\n        var totalRevenue = principleAmount + rentAmount\n        this.setState({ totalRevenue : totalRevenue })\n        this.props.onUpdateRevenue(rentAmount, totalRevenue)\n    }\n\n    render() {\n        return(\n            <div id=\"Revenue\" className='CashflowCategories'>\n                <Card className='rootCardRevenue' >\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"subtitle2\" color=\"inherit\" noWrap className='header'>\n                            Revenue\n                        </Typography>\n                        <Divider />\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Principle (Monthly)\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.principleAmount}\n                                onChange={this.handleChangePrinciple}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Rent\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.rentAmount}\n                                onChange={this.handleChangeRent}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='BottomDivider' >\n                            <Divider />\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                    <b>Total Revenue</b>\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                <b>$ </b><b>{this.state.totalRevenue}</b>\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateRevenue : (argTotalRevenueCashOnCash, argTotalRevenueInternalRate) => dispatch({\n            type: \"UPDATE_REVENUE\",\n            totalRevenueCashOnCash : argTotalRevenueCashOnCash,\n            totalRevenueInternalRate : argTotalRevenueInternalRate\n        })\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Revenue);","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from 'react-redux';\n\nclass Expenses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mortgageAmount: 0,\n            taxesAmount: 0,\n            insuranceAmount: 0,\n            utilitiesAmount: 0,\n            vacancyAmount: 0,\n            repairsAmount: 0,\n            capExpendituresAmount: 0,\n            totalExpenses: 0,\n        }\n    }\n\n    handleChangeMortgage = event => {\n        this.setState({ mortgageAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.insuranceAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeTaxes = event => {\n        this.setState({ taxesAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.insuranceAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeInsurance = event => {\n        this.setState({ insuranceAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeUtilities = event => {\n        this.setState({ utilitiesAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeVacancy = event => {\n        this.setState({ vacancyAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeRepairs = event => {\n        this.setState({ repairsAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(this.state.capExpendituresAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    handleChangeCapExpenditures = event => {\n        this.setState({ capExpendituresAmount : event.target.value })\n        var mortgageAmount = 0\n        var taxesAmount = 0\n        var insuranceAmount = 0\n        var utilitiesAmount = 0\n        var vacancyAmount = 0\n        var repairsAmount = 0\n        var capExpendituresAmount = 0\n        if(event.target.value === '') {\n            capExpendituresAmount = 0\n        } else {\n            capExpendituresAmount = parseInt(event.target.value, 10)\n        }\n        if(this.state.mortgageAmount === '') {\n            mortgageAmount = 0\n        } else {\n            mortgageAmount = parseInt(this.state.mortgageAmount, 10)\n        }\n        if(this.state.taxesAmount === '') {\n            taxesAmount = 0\n        } else {\n            taxesAmount = parseInt(this.state.taxesAmount, 10)\n        }\n        if(this.state.utilitiesAmount === '') {\n            insuranceAmount = 0\n        } else {\n            insuranceAmount = parseInt(this.state.insuranceAmount, 10)\n        }\n        if(this.state.vacancyAmount === '') {\n            vacancyAmount = 0\n        } else {\n            vacancyAmount = parseInt(this.state.vacancyAmount, 10)\n        }\n        if(this.state.repairsAmount === '') {\n            repairsAmount = 0\n        } else {\n            repairsAmount = parseInt(this.state.repairsAmount, 10)\n        }\n        if(this.state.capExpendituresAmount === '') {\n            utilitiesAmount = 0\n        } else {\n            utilitiesAmount = parseInt(this.state.utilitiesAmount, 10)\n        }\n        var totalExpenses = mortgageAmount + taxesAmount + insuranceAmount + utilitiesAmount + vacancyAmount + repairsAmount + capExpendituresAmount\n        this.setState({ totalExpenses : totalExpenses })\n        this.props.onUpdateExpenses(totalExpenses)\n    }\n\n    render() {\n        return(\n            <div id=\"Expenses\" className='CashflowCategories'>\n                <Card className='rootCardExpenses' >\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"subtitle2\" color=\"inherit\" noWrap className='header'>\n                            Expenses\n                        </Typography>\n                        <Divider />\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Mortgage\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.mortgageAmount}\n                                onChange={this.handleChangeMortgage}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Taxes\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.taxesAmount}\n                                onChange={this.handleChangeTaxes}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Insurance\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.insuranceAmount}\n                                onChange={this.handleChangeInsurance}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Utilities\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.utilitiesAmount}\n                                onChange={this.handleChangeUtilities}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Vacancy\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.vacancyAmount}\n                                onChange={this.handleChangeVacancy}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Repairs\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.repairsAmount}\n                                onChange={this.handleChangeRepairs}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" noWrap className='title'>\n                                Cap. Expenditures\n                            </Typography>\n                            <FormControl fullWidth className='margin'>\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\n                            <Input\n                                id=\"standard-adornment-amount\"\n                                value={this.state.capExpendituresAmount}\n                                onChange={this.handleChangeCapExpenditures}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                            />\n                            </FormControl>\n                        </div>\n                        <div className='BottomDivider' >\n                            <Divider />\n                        </div>\n                        <div className='AlignValues'>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                    <b>Total Expenses</b>\n                            </Typography>\n                            <Typography component=\"h2\" variant=\"subtitle1\" color=\"inherit\" noWrap className='bottomTitle'>\n                                <b>$ </b><b>{this.state.totalExpenses}</b>\n                            </Typography>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateExpenses : (argTotalExpenses) => dispatch({\n            type: \"UPDATE_EXPENSES\",\n            totalExpenses : argTotalExpenses\n        })\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Expenses);","import React, { Component } from 'react';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { connect } from 'react-redux';\nimport trade from 'wstrade-api';\n\nclass Analysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cashflow: 0,\n      cashOnCashReturn: 0,\n      internalRateOfReturn: 0,\n    }\n  }\n\n  // componentWillMount() {\n  //   var email = \n  //   var password = \n  //   trade.login(email, password).then(token => { console.log(token) })\n  // }\n\n  handleClick = event => {\n    var totalInvestment = this.props.CashflowCalculatorData.totalInvestment\n    var totalExpenses = this.props.CashflowCalculatorData.totalExpenses\n    var totalRevenueCashOnCash = this.props.CashflowCalculatorData.totalRevenueCashOnCash\n    var totalRevenueInternalRate = this.props.CashflowCalculatorData.totalRevenueInternalRate\n    var cashflow = 0\n    var cashOnCashReturn = 0\n    var internalRateOfReturn = 0\n    cashflow = totalRevenueCashOnCash - totalExpenses\n    this.setState({ cashflow : cashflow })\n    if(totalInvestment !== 0) {\n      cashOnCashReturn = ((cashflow * 12) / totalInvestment) * 100\n      internalRateOfReturn = (((totalRevenueInternalRate - totalExpenses) * 12) / totalInvestment) * 100\n      this.setState({ cashOnCashReturn : cashOnCashReturn.toFixed(1) })\n      this.setState({ internalRateOfReturn : internalRateOfReturn.toFixed(1) })\n\n    }\n  }\n\n  render() {\n    const cardStyle = {\n      backgroundColor: '#364059',\n      color : 'white'\n    }\n    const avatarStyle = {\n      backgroundColor: '#364059',\n      height: 56,\n      width: 56\n    }\n    const iconStyle = {\n      height: 36,\n      width: 36\n    }\n    const buttonStyle = {\n      backgroundColor: '#364059',\n      color : 'white',\n      width : 120,\n      height : 80\n    }\n\n    return(\n      <div className='head'>\n        <Button variant=\"outlined\" onClick={this.handleClick} style={buttonStyle}>\n          <Typography\n            color=\"inherit\"\n            variant=\"h5\"\n          >\n            GO\n          </Typography>\n        </Button>\n        <Card style={cardStyle} className='rootCardAnalysis'>\n          <CardContent>\n              <Grid\n              container\n              justify=\"space-between\"\n              >\n                <Grid item>\n                    <Typography\n                    className='AnalysisTitle'\n                    color=\"inherit\"\n                    gutterBottom\n                    variant=\"body2\"\n                    >\n                    CASHFLOW\n                    </Typography>\n                    <Typography\n                    color=\"inherit\"\n                    variant=\"h3\"\n                    >\n                    ${this.state.cashflow}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Avatar style={avatarStyle}>\n                    <AttachMoneyIcon style={iconStyle}/>\n                    </Avatar>\n                </Grid>\n              </Grid>\n          </CardContent>\n        </Card>\n        <Card style={cardStyle} className='rootCardAnalysis'>\n          <CardContent>\n              <Grid\n              container\n              justify=\"space-between\"\n              >\n                <Grid item>\n                    <Typography\n                    className='AnalysisTitle'\n                    color=\"inherit\"\n                    gutterBottom\n                    variant=\"body2\"\n                    >\n                    CASH-ON-CASH RETURN\n                    </Typography>\n                    <Typography\n                    color=\"inherit\"\n                    variant=\"h3\"\n                    >\n                    {this.state.cashOnCashReturn}%\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Avatar style={avatarStyle}>\n                    <AttachMoneyIcon style={iconStyle}/>\n                    </Avatar>\n                </Grid>\n              </Grid>\n          </CardContent>\n        </Card>\n        <Card style={cardStyle} className='rootCardAnalysis'>\n          <CardContent>\n              <Grid\n              container\n              justify=\"space-between\"\n              >\n                <Grid item>\n                    <Typography\n                    className='AnalysisTitle'\n                    color=\"inherit\"\n                    gutterBottom\n                    variant=\"body2\"\n                    >\n                    INTERNAL RATE OF RETURN\n                    </Typography>\n                    <Typography\n                    color=\"inherit\"\n                    variant=\"h3\"\n                    >\n                    {this.state.internalRateOfReturn}%\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Avatar style={avatarStyle}>\n                    <AttachMoneyIcon style={iconStyle}/>\n                    </Avatar>\n                </Grid>\n              </Grid>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    CashflowCalculatorData : state.CashflowCalculatorData\n  };\n}\n\nexport default connect(mapStateToProps, null)(Analysis);","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Investment from './Investment';\nimport Revenue from './Revenue';\nimport Expenses from './Expenses';\nimport Analysis from './Analysis';\nimport '../css/CashflowCalculator.css';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n    },\n}))\n\nexport default function CashflowCalculator() {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}> \n                <Grid item xs={12} md={8} lg={12}>\n                    <div className={classes.root}>\n                        <div id=\"LeftSide\">\n                            <Investment />\n                            <Revenue />\n                        </div>\n                        <div id=\"RightSide\">\n                            <Expenses />\n                        </div>\n                        <div className='Analysis' >\n                            <Analysis />\n                        </div>\n                    </div>\n                </Grid>\n            </Grid>\n        </Container>\n    </main>\n    )\n}\n\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { Link } from 'react-router-dom';\nimport './css/LandingPage.css';\n\nexport const mainListItems = (\n  <div>\n    <Link to='/' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <DashboardIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n    </Link>\n    <Link to='/real-estate' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <HomeWorkIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Real Estate\" />\n      </ListItem>\n    </Link>\n    <Link to='/financial-institution' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <AccountBalanceIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Financial Institution\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader id=\"Icon\" inset>Tools</ListSubheader>\n    {/* <Link to='/mortgage-calculator' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <HomeIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Mortgage Calculator\" />\n      </ListItem>\n    </Link> */}\n    <Link to='/cashflow-calculator' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n            <AttachMoneyIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Cashflow Calculator\" />\n      </ListItem>\n    </Link>\n    <Link to='/stocks' className='NavLink'>\n      <ListItem button>\n        <ListItemIcon>\n          <ShowChartIcon id=\"Icon\" />\n        </ListItemIcon>\n        <ListItemText primary=\"Stocks\" />\n      </ListItem>\n    </Link>\n  </div>\n);","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Dashboard from './dashboard/Dashboard'\nimport Stocks from './stocks/Stocks'\nimport RealEstate from './real-estate/RealEstate'\nimport FinancialInstitution from './financial-institutions/FinancialInstitution'\nimport MortgageCalculator from './mortgage-calculator/MortgageCalculator'\nimport CashflowCalculator from './cashflow-calculator/CashflowCalculator'\nimport { mainListItems, secondaryListItems } from './listItems';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './css/LandingPage.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function LandingPage() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div id=\"Background\" className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" id=\"AppBar\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n            <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Switch>\n                <Route exact path={[ \"/\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Dashboard\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/stocks\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Stocks\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/real-estate\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Real Estate\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/financial-institution\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Financial Institution\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/mortgage-calculator\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Mortgage Calculator\n                    </Typography>\n                </Route>\n                <Route exact path={[ \"/cashflow-calculator\" ]}>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        Cashflow Calculator\n                    </Typography>\n                </Route>\n            </Switch>\n            </Toolbar>\n        </AppBar>\n        <Drawer\n            backgroundColor=\"black\"\n            variant=\"permanent\"\n            classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }}\n            open={open}\n        >\n            <div className={classes.toolbarIcon} id=\"Drawer\">\n            <IconButton id=\"Icon\" onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n            </IconButton>\n            </div>\n            <div id=\"SideDrawer\">\n                <Divider />\n                <List id=\"Drawer\">{mainListItems}</List>\n                <Divider />\n                <List id=\"Drawer\">{secondaryListItems}</List>\n            </div>\n        </Drawer>\n        <Switch>\n          <Route exact path={[ \"/\" ]} render={props => <Dashboard {...props} refreshRoute={[ \"/\" ]} /> } />\n          <Route exact path={\"/stocks\"} render={props => <Stocks {...props} refreshRoute={\"/stocks\"} /> } />\n          <Route exact path={\"/real-estate\"} render={props => <RealEstate {...props} refreshRoute={\"/real-estate\"} /> } />\n          <Route exact path={\"/financial-institution\"} render={props => <FinancialInstitution {...props} refreshRoute={\"/financial-institution\"} /> } />\n          <Route exact path={\"/mortgage-calculator\"} render={props => <MortgageCalculator {...props} refreshRoute={\"/mortgage-calculator\"} /> } />\n          <Route exact path={\"/cashflow-calculator\"} render={props => <CashflowCalculator {...props} refreshRoute={\"/cashflow-calculator\"} /> } />\n        </Switch>\n        </div>\n    </BrowserRouter>\n  );\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './LandingPage';\n\n\nexport default App =>(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path={[\"/\"]} render={props => <LandingPage {...props} refreshRoute={\"/\"} /> } />\n      <Route exact path={[\"/stocks\"]} render={props => <LandingPage {...props} refreshRoute={\"/stocks\"} /> } />\n      <Route exact path={[\"/real-estate\"]} render={props => <LandingPage {...props} refreshRoute={\"/real-estate\"} /> } />\n      <Route exact path={[\"/financial-institution\"]} render={props => <LandingPage {...props} refreshRoute={\"/financial-institution\"} /> } />\n      <Route exact path={[\"/mortgage-calculator\"]} render={props => <LandingPage {...props} refreshRoute={\"/mortgage-calculator\"} /> } />\n      <Route exact path={[\"/cashflow-calculator\"]} render={props => <LandingPage {...props} refreshRoute={\"/cashflow-calculator\"} /> } />\n    </Switch>\n  </BrowserRouter>\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    totalInvestment: 0,\n    totalExpenses: 0,\n    totalRevenueCashOnCash: 0,\n    totalRevenueInternalRate: 0\n};\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if(action.type === 'UPDATE_INVESTMENT') {\n        newState.totalInvestment = action.totalInvestment\n    } else if(action.type === 'UPDATE_EXPENSES') {\n        newState.totalExpenses = action.totalExpenses\n    } else if(action.type === 'UPDATE_REVENUE') {\n        newState.totalRevenueCashOnCash = action.totalRevenueCashOnCash\n        newState.totalRevenueInternalRate = action.totalRevenueInternalRate\n    }\n\n    return newState\n};\n\nexport default reducer","const initialState = {\n    propertiesList: []\n};\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if(action.type === 'UPDATE_DASHBOARD_REAL_ESTATE_INVESTMENT') {\n        newState.propertiesList = action.propertiesData\n    } \n\n    return newState\n};\n\nexport default reducer","const initialState = {\n    rowsAssets : [],\n    rowsLiabilities : []\n};\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state};\n\n    if(action.type === 'UPDATE_ASSETS') {\n        newState.rowsAssets = action.rowsAssets\n    } else if(action.type === 'UPDATE_LIABILITIES') {\n        newState.rowsLiabilities = action.rowsLiabilities\n    }\n\n    return newState\n};\n\nexport default reducer","import { combineReducers } from 'redux';\nimport CashflowCalculator from './reducer-cashflowCalculator';\nimport RealEstate from './reducer-realEstate';\nimport FinancialInstitution from './reducer-financialInstitution';\n\nconst allReducers = combineReducers({\n    CashflowCalculatorData : CashflowCalculator,\n    RealEstateData : RealEstate,\n    FinancialInstitutionData : FinancialInstitution\n});\n\nexport default allReducers\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport allReducers from './reducers/index'\nimport LandingPage from './LandingPage';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nconst store = createStore(allReducers)\n\nReactDOM.render(\n    <Provider store={ store }>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}